{
    "version": "https://jsonfeed.org/version/1",
    "title": "Snow's Blog • All posts by \"computer science\" category",
    "description": "some notes about computer science",
    "home_page_url": "https://blog.ivansnow02.xyz",
    "items": [
        {
            "id": "https://blog.ivansnow02.xyz/ai-fundamental/",
            "url": "https://blog.ivansnow02.xyz/ai-fundamental/",
            "title": "人工智能基础",
            "date_published": "2024-06-29T01:12:16.000Z",
            "content_html": "<h2 id=\"知识表示\"><a class=\"anchor\" href=\"#知识表示\">#</a> 知识表示</h2>\n<h3 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h3>\n<h4 id=\"知识的概念\"><a class=\"anchor\" href=\"#知识的概念\">#</a> 知识的概念</h4>\n<ul>\n<li>知识：经过加工的信息，是对信息的提炼和概括，它是高度概括的信息。</li>\n<li>信息：是数据所表达的客观事实，数据是信息的载体，信息是用来消除不确定性从而使数据得以解读。</li>\n<li>数据：数据是可以被记录和识别的一组有意义的符号，以适合于人工或自然方式进行通信、解释或处理。</li>\n</ul>\n<h4 id=\"知识的特征\"><a class=\"anchor\" href=\"#知识的特征\">#</a> 知识的特征</h4>\n<ul>\n<li>相对正确性：任何知识都是在一定条件和环境下产生的，在特定的条件和环境下才是正确的。（经典物理）</li>\n<li>存在不确定性的知识：随机性引起的、模糊性引起的、经验引起的、不完全性引起的。</li>\n<li>可表示性与可利用性：知识可以用适当的形式表示出来，如语言、文字、图形、神经网络等。</li>\n</ul>\n<h4 id=\"知识的分类\"><a class=\"anchor\" href=\"#知识的分类\">#</a> 知识的分类</h4>\n<ul>\n<li>以知识的<strong>作用范围</strong>来划分：知识可以分为常识性知识和领域性知识。\n<ul>\n<li><strong>常识性知识</strong>是通用性知识，是人们普遍了解的知识，具有较广泛的应用范围。</li>\n<li><strong>领域性知识</strong>是面向某个具体领域的知识，是专业性知识，只有相应专业领域的人员才能掌握并用来求解领域内的有关问题。</li>\n</ul>\n</li>\n<li>按知识的<strong>确定性</strong>划分：知识可分为<strong>确定知识</strong>和<strong>不确定知识</strong>。</li>\n<li>按照人类的<strong>思维及认识方法</strong>来分：可分为逻辑性知识和形象性知识\n<ul>\n<li><strong>逻辑性知识</strong>是反映人类逻辑思维过程的知识，这种知识一般都具有因果关系及难以精确描述的特点。</li>\n<li><strong>形象思维知识</strong>是人类思维的另一种方式，是通过形象思维所获得的知识。</li>\n</ul>\n</li>\n<li>按知识的<strong>作用及表示</strong>来划分：可分为事实性知识、规则性知识、控制性知识和元知识\n<ul>\n<li><strong>事实性知识</strong>是指有关领域内的概念、事实、事物的属性、状态及其关系的描述，包括事物的分类、属性、事物间关系、科学事实、客观事实等。</li>\n<li><strong>规则性知识</strong>是指有关问题中与事物的行动、动作相联系的因果关系知识，这种知识是动态的、变化的。</li>\n<li><strong>控制性知识</strong>是用控制策略表示问题的知识，包含有关部门各种处理过程、策略和结构的知识，常用来协调整个问题求解的过程。</li>\n<li><strong>元知识</strong>是指有关知识的知识，是知识库中的高层知识，包括怎样使用规则、解释规则、校验规则、解释程序结构等知识。</li>\n</ul>\n</li>\n</ul>\n<div class=\"note warning\">\n<p>元知识与控制知识是有重叠的，对一个大的程序来说， 以元知识或者元规则形式体现控制知识更为方便，因为元知识存在于知识库中，而控制知识常与程序结合在一起出现，从而不容易修改。</p>\n</div>\n<h4 id=\"知识的表示\"><a class=\"anchor\" href=\"#知识的表示\">#</a> 知识的表示</h4>\n<p>就是研究用机器表示知识的一般方法，可以看作是将知识符号化（即编码成某种数据结构）并输入到计算机的过程和方法；</p>\n<div class=\"note warning\">\n<p>知识表示 := 恰当的符号（结构）+ 配套的处理机制</p>\n<ul>\n<li>恰当的符号（结构）用于存储要解决的问题、可能的中间解答和最终解答以及解决问题涉及的知识；</li>\n<li>配套的处理机制（动态或者静态）仅有符号（结构）不能体现出系统具有知识； 只有对其作适当的处理才构成意义。</li>\n</ul>\n</div>\n<h5 id=\"知识表示的分类\"><a class=\"anchor\" href=\"#知识表示的分类\">#</a> 知识表示的分类</h5>\n<ul>\n<li>陈述性知识表示\n<ul>\n<li>含义：以数据的形式表示知识。这类表示法将知识表示与知识的运用（推理）分开处理，在表示知识时，并不涉及如何运用知识的问题， 是一种静态的描述方法。</li>\n<li>优缺点：优点是<strong>灵活简洁</strong>。其缺点是<strong>推理过程不透明，不易理解</strong>。</li>\n</ul>\n</li>\n<li>过程性知识表示<br />\n含义：知识表示的形式是一个 “过程” 。它将知识的表示与运用（推理）相结合，知识就寓于程序之中，是一种动态的描述方法。<br />\n优缺点：优点是<strong>推理过程直接、清晰</strong>。其缺点是<strong>不够严格，知识间有交互重叠，灵活性差，知识的增、删极不方便</strong>。</li>\n</ul>\n<h3 id=\"谓词逻辑表示法\"><a class=\"anchor\" href=\"#谓词逻辑表示法\">#</a> 谓词逻辑表示法</h3>\n<p>命题逻辑和谓词逻辑是最先应用于人工智能的两种逻辑，谓词逻辑是在命题逻辑基础上发展起来的，命题逻辑可以看作是谓词逻辑的一种特殊形式。</p>\n<h4 id=\"命题\"><a class=\"anchor\" href=\"#命题\">#</a> 命题</h4>\n<p>命题是具有真假意义的陈述句，通常用大写的英文字母表示</p>\n<ul>\n<li>原子命题：不能分解成更简单的命题。</li>\n<li>复合命题：由连接词、标点符号和原子命题等复合构成的命题</li>\n<li>命题逻辑：研究命题和命题之间关系的符号逻辑系统。</li>\n<li>命题常量（命题常元）：一个命题标识符表示确定的命题。</li>\n<li>命题变元（命题变量） ：命题标识符只表示任意命题的位置标志。</li>\n</ul>\n<h5 id=\"命题的语法\"><a class=\"anchor\" href=\"#命题的语法\">#</a> 命题的语法</h5>\n<ul>\n<li>命题常元：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">True(T)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo stretchy=\"false\">(</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">False(F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">se</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span>；</li>\n<li>命题符号：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> 等；</li>\n<li>联结词： <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\neg</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">¬</span></span></span></span>（非）、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∧</mo></mrow><annotation encoding=\"application/x-tex\">\\wedge</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∧</span></span></span></span>（合取）、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∨</mo></mrow><annotation encoding=\"application/x-tex\">\\vee</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∨</span></span></span></span>（析取）、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span></span></span></span>（蕴含）、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>↔</mo></mrow><annotation encoding=\"application/x-tex\">\\leftrightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">↔</span></span></span></span>（等价）；</li>\n<li>括号：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">( )</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mclose\">)</span></span></span></span>。</li>\n</ul>\n<h5 id=\"命题的特点\"><a class=\"anchor\" href=\"#命题的特点\">#</a> 命题的特点</h5>\n<ul>\n<li>命题逻辑把原子命题作为最基本的单元，不再往下分析。比如说命题 P“π 是无理数” 和命题 Q “无理数是实数” 这两个命题，在命题逻辑的范畴内是找不到什么联系的。</li>\n<li>命题这种表示法有较大的局限性，它无法把它所描述的客观事物的结构及逻辑特征反映出来，也不能把不同事物的共同特征描述出来</li>\n</ul>\n<h4 id=\"谓词\"><a class=\"anchor\" href=\"#谓词\">#</a> 谓词</h4>\n<p>谓词逻辑是命题逻辑的扩充与发展，它将一个原子命题分解成谓词与个体两部分。谓词描述<strong>个体的属性</strong>，以及<strong>个体之间的关系</strong>。谓词对应于语言中的谓语，或谓语 + 宾语，<strong>个体常项</strong>常用单词或 a,b,c 等小写字母表记，<strong>个体变项</strong>常用 x,y,z 等小写字母表记。<br />\n<strong>个体变元</strong>的取值范围称为<strong>个体域</strong>。个体域可以是有限的，也可以是无限的。个体词描述逻辑中的重要名词，作为对象（对象是个体词描述的东西）。<br />\n谓词逻辑：根据对象和对象上的谓词（即对象的属性和对象之间的关系），通过使用连接词和量词来表示世界的符号逻辑系统。</p>\n<h4 id=\"谓词公式\"><a class=\"anchor\" href=\"#谓词公式\">#</a> 谓词公式</h4>\n<h5 id=\"谓词公式的几个重要概念\"><a class=\"anchor\" href=\"#谓词公式的几个重要概念\">#</a> 谓词公式的几个重要概念</h5>\n<ul>\n<li><strong>函数符号与谓词符号</strong>：若函数符号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> 中包含的个体数目为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>, 则称<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 元函数符号。若谓词符号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 中包含的个体数目为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>，则称<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 元谓词符号。</li>\n<li><strong>谓词的阶</strong>：如果谓词 P 中的所有个体都是个体常量、变元、或函数，则该谓词为一阶谓词。如果谓词 P 中某个个体本身又是一个一阶谓词，则称 P 为二阶谓词。</li>\n<li><strong>谓词的项</strong>\n<ol>\n<li>单独一个个体是项 (包括常量和变量)。</li>\n<li>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 元函数符号，而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_1,t_2,…,t_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是项，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(t_1, t_2,…,t_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 是项。</li>\n<li>任何项仅由规则（1）（2）所生成。</li>\n</ol>\n</li>\n</ul>\n<h5 id=\"谓词公式的语法\"><a class=\"anchor\" href=\"#谓词公式的语法\">#</a> 谓词公式的语法</h5>\n<ul>\n<li>谓词公式来表示知识：标点符号、括号、逻辑联结词、常量符号集、变量符号集、n 元函数符号集、n 元谓词符号集、量词</li>\n<li>谓词演算：合法表达式 (原子公式、合式公式)，表达式的演算化简方法，标准式（合取的前束范式或析取的前束范式）</li>\n</ul>\n<h5 id=\"谓词公式的语法元素\"><a class=\"anchor\" href=\"#谓词公式的语法元素\">#</a> 谓词公式的语法元素</h5>\n<ul>\n<li>常量符号。</li>\n<li>变量符号。</li>\n<li>函数符号。</li>\n<li>谓词符号。</li>\n<li>联结词。</li>\n<li>在个体变量及其作用域下：引入量词： <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi></mrow><annotation encoding=\"application/x-tex\">\\forall</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∀</span></span></span></span>（全称量词）、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∃</mi></mrow><annotation encoding=\"application/x-tex\">\\exists</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∃</span></span></span></span>（存在量词）。后面跟着变量，称为量词的<strong>指导变元</strong>。</li>\n<li>公式（原子公式与合式公式）若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 元谓词符号，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_1,t_2,…,t_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 都是项，则称<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(t_1, t_2, …, t_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 为原子公式，简称原子。</li>\n<li>一阶谓词逻辑的（合式）公式（可简称公式）可递归定义如下\n<ol>\n<li>原子公式是公式 (也称为原子公式)。</li>\n<li>若 P、Q 是公式，则 (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>﹁</mtext><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">﹁P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">﹁</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>)、(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>∧</mo><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">P∧Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>)、(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>∨</mo><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">P∨Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>)、(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>→</mo><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">P→Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>)、(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>↔</mo><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">P↔Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↔</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>) 也是公式。</li>\n<li>若 P 是公式，x 是任一个体变元，则 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">(∀x)P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">(∃x)P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 也是公式。</li>\n<li>任何公式都由有限次应用（1）（2）（3）来产生。</li>\n</ol>\n</li>\n</ul>\n<h5 id=\"谓词公式的解释\"><a class=\"anchor\" href=\"#谓词公式的解释\">#</a> 谓词公式的解释</h5>\n<p>一阶谓词逻辑公式的解释：设 D 为谓词公式 P 的非空个体域，若对 P 中的个体、函数、谓词按如下规定赋值：<br />\n（1）为每个个体指派 D 中的一个元素。<br />\n（2）为每个 n 元函数指派一个从 D<sup>n</sup> 到 D 的映射。<br />\n（3）为每个 n 元谓词指派一个从 D<sup>n</sup> 到 {T,F} 的映射。<br />\n则称这些指派为公式 P 在 D 上的一个解释</p>\n<div class=\"note warning\">\n<p>注意：</p>\n<ol>\n<li>在谓词逻辑中，由于公式中可能含有个体常量、个体变元以及函数，因此不能像命题公式那样直接通过真值指派给出解释，必须首先考虑个体常量、和函数在个体域中的取值，然后才能针对常量和函数的具体取值为谓词分别指派真值。</li>\n<li>在给出一阶逻辑公式的一个解释时，需要规定两件事情：公式中个体的定义域、以及公式中出现的常量、函数符号、谓词符号的定义。</li>\n</ol>\n</div>\n<h5 id=\"谓词逻辑知识表示\"><a class=\"anchor\" href=\"#谓词逻辑知识表示\">#</a> 谓词逻辑知识表示</h5>\n<ul>\n<li>谓词逻辑表示的适应范围：适合于表示事物的状态、属性、概念等事实性知识，也可以用来表示事物间具有确定因果关系的规则性知识。</li>\n<li>对事实性知识：可以使用谓词公式中的析取符号与合取符号连接起来的谓词公式来表示</li>\n<li>对规则性知识：通常使用由蕴涵符号连接起来的谓词公式来表示</li>\n<li><strong>谓词公式表示知识的步骤</strong>\n<ol>\n<li>定义谓词及个体，确定每个谓词及个体的确切含义</li>\n<li>根据所要表达的事物或概念，为每个谓词中的变元赋以特定的值</li>\n<li>根据所要表达的知识的语义，用适当的连接符将各个谓词连接起来形成谓词公式</li>\n</ol>\n</li>\n</ul>\n<h5 id=\"谓词逻辑表示的特点\"><a class=\"anchor\" href=\"#谓词逻辑表示的特点\">#</a> 谓词逻辑表示的特点</h5>\n<ul>\n<li>优点：严密性、自然性、通用性、知识易于表达、易于实现</li>\n<li>缺点：效率低、灵活性差、组合爆炸</li>\n</ul>\n",
            "tags": [
                "computer science",
                "learning"
            ]
        },
        {
            "id": "https://blog.ivansnow02.xyz/computer-network/",
            "url": "https://blog.ivansnow02.xyz/computer-network/",
            "title": "计算机网络",
            "date_published": "2024-06-28T08:30:19.000Z",
            "content_html": "<h2 id=\"绪论\"><a class=\"anchor\" href=\"#绪论\">#</a> 绪论</h2>\n<h3 id=\"计算机网络定义\"><a class=\"anchor\" href=\"#计算机网络定义\">#</a> 计算机网络定义</h3>\n<p>计算机网络是互连的、自治的计算机集合。<br />\n计算机网络向用户可以提供<strong>连通性</strong>和<strong>共享</strong>服务</p>\n<h3 id=\"互联网的组成\"><a class=\"anchor\" href=\"#互联网的组成\">#</a> 互联网的组成</h3>\n<h4 id=\"边缘部分\"><a class=\"anchor\" href=\"#边缘部分\">#</a> 边缘部分</h4>\n<p>由各主机构成，用户直接进行信息处理和信息共享；低速连入核心网。</p>\n<h5 id=\"客户服务器模式\"><a class=\"anchor\" href=\"#客户服务器模式\">#</a> 客户 / 服务器模式</h5>\n<ul>\n<li>客户：被用户调用后运行，在打算通信时主动向远地服务器发起通信，必须知道服务器的地址；不需要很特殊的硬件和很复杂的操作系统</li>\n<li>服务器：一种专门用来提供某种服务的程序，可以同时处理多个客户的请求；系统启动后即自动调用并一直不断地运行着，被动地等待着来自各地的客户端的请求，不需要知道客户端的地址；一般需要强大的硬件和高级的操作系统</li>\n</ul>\n<h5 id=\"对等连接\"><a class=\"anchor\" href=\"#对等连接\">#</a> 对等连接</h5>\n<ul>\n<li>对等连接：两个对等的进程之间的通信，两个进程在通信时既可以是客户也可以是服务器，两个进程之间的关系是对等的，没有主从之分</li>\n</ul>\n<h4 id=\"核心部分\"><a class=\"anchor\" href=\"#核心部分\">#</a> 核心部分</h4>\n<p>在网络核心部分其特殊作用的是路由器。路由器是实现分组交换的关键构件。由各路由器连网，负责为边缘部分提供高速远程分组交换。</p>\n<h5 id=\"电路交换的特点\"><a class=\"anchor\" href=\"#电路交换的特点\">#</a> 电路交换的特点</h5>\n<ul>\n<li>电路交换：在通信开始前，通信的两端要先建立一条专用的物理通路，通信结束后再撤销这条通路</li>\n<li>面向连接的</li>\n<li>电路交换的三个阶段：建立连接、通信、释放连接</li>\n<li>优点：端对端通信质量因约定了通信资源获得可靠保障，对连续传送大量数据效率高</li>\n<li>缺点：电路交换传输计算机数据效率低。</li>\n</ul>\n<h5 id=\"报文交换的特点\"><a class=\"anchor\" href=\"#报文交换的特点\">#</a> 报文交换的特点</h5>\n<ul>\n<li>报文交换：通信的两端不需要先建立专用的物理通路，而是直接向网络发送报文，报文中包含目的地址，网络根据目的地址选择合适的路径传送报文、</li>\n<li>优点：无须预约传输带宽，动态逐段利用传输带宽对突发式数据通信效率高，通信迅速。</li>\n<li>缺点：时延较长</li>\n</ul>\n<h5 id=\"分组交换的特点\"><a class=\"anchor\" href=\"#分组交换的特点\">#</a> 分组交换的特点</h5>\n<ul>\n<li>分组交换：报文交换的基础上，将报文划分为固定长度的数据块，称为分组，每个分组都携带有目的地址，网络根据目的地址选择合适的路径传送分组</li>\n<li>（1）报文分组，加首部（2）经路由器储存转发（3）在目的地合并</li>\n<li>优点：\n<ul>\n<li>高效：动态分配传输带宽，对通信链路是逐段占用</li>\n<li>灵活：以分组为传送单位和查找路由</li>\n<li>迅速：不必先建立连接就能向其他主机发送分组</li>\n<li>可靠：保证可靠性的网络协议；分布式的路由选择协议使网络具有很好的生存性</li>\n</ul>\n</li>\n<li>问题：\n<ul>\n<li>分组在各节点存储转发，需要缓存和排队，增加了时延</li>\n<li>分组必须携带的首部也造成了一定开销</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"计算机网络的分类\"><a class=\"anchor\" href=\"#计算机网络的分类\">#</a> 计算机网络的分类</h3>\n<h4 id=\"按网络的作用范围分类\"><a class=\"anchor\" href=\"#按网络的作用范围分类\">#</a> 按网络的作用范围分类</h4>\n<ul>\n<li>广域网（WAN）：覆盖范围广，跨越城市、国家、甚至全球</li>\n<li>城域网（MAN）：覆盖范围小，跨越一个城市</li>\n<li>局域网（LAN）：覆盖范围更小，跨越一个建筑物或者一个校园</li>\n<li>个人区域网（PAN）：覆盖范围更小，跨越个人工作空间</li>\n</ul>\n<h4 id=\"按网络的使用者分类\"><a class=\"anchor\" href=\"#按网络的使用者分类\">#</a> 按网络的使用者分类</h4>\n<ul>\n<li>公用网：为大众提供服务，如电话网、互联网</li>\n<li>专用网：为某个组织或个人提供服务，如企业网、家庭网</li>\n</ul>\n<h3 id=\"计算机网络的性能\"><a class=\"anchor\" href=\"#计算机网络的性能\">#</a> 计算机网络的性能</h3>\n<h4 id=\"速率\"><a class=\"anchor\" href=\"#速率\">#</a> 速率</h4>\n<ul>\n<li>速率：数据传输速率，指单位时间内传输的数据量</li>\n</ul>\n<h4 id=\"带宽\"><a class=\"anchor\" href=\"#带宽\">#</a> 带宽</h4>\n<ul>\n<li>带宽：信道的传输能力，指单位时间内通过信道的最高数据率</li>\n</ul>\n<h4 id=\"吞吐量\"><a class=\"anchor\" href=\"#吞吐量\">#</a> 吞吐量</h4>\n<ul>\n<li>吞吐量：单位时间内通过网络的实际数据量</li>\n</ul>\n<h4 id=\"时延\"><a class=\"anchor\" href=\"#时延\">#</a> 时延</h4>\n<ul>\n<li>时延：数据从网络的一端传输到另一端所需的时间</li>\n<li>发送时延：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>发送时延</mtext><mo>=</mo><mfrac><mtext>数据长度</mtext><mtext>发送速率</mtext></mfrac></mrow><annotation encoding=\"application/x-tex\">发送时延=\\frac{数据长度}{发送速率}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">发送时延</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2173em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">发送速率</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">数据长度</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li>传播时延：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>传播时延</mtext><mo>=</mo><mfrac><mtext>传播距离</mtext><mtext>传播速率</mtext></mfrac></mrow><annotation encoding=\"application/x-tex\">传播时延=\\frac{传播距离}{传播速率}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">传播时延</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2173em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">传播速率</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">传播距离</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li>处理时延：数据包在路由器中排队、检错、转发所需的时间</li>\n<li>排队时延：数据包在路由器的输出队列中等待传输所需的时间</li>\n<li>总时延：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>总时延</mtext><mo>=</mo><mtext>发送时延</mtext><mo>+</mo><mtext>传播时延</mtext><mo>+</mo><mtext>处理时延</mtext><mo>+</mo><mtext>排队时延</mtext></mrow><annotation encoding=\"application/x-tex\">总时延=发送时延+传播时延+处理时延+排队时延</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">总时延</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord cjk_fallback\">发送时延</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord cjk_fallback\">传播时延</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord cjk_fallback\">处理时延</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">排队时延</span></span></span></span></li>\n</ul>\n<h4 id=\"时延带宽积\"><a class=\"anchor\" href=\"#时延带宽积\">#</a> 时延带宽积</h4>\n<ul>\n<li>时延带宽积：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>时延带宽积</mtext><mo>=</mo><mtext>传播时延</mtext><mo>∗</mo><mtext>带宽</mtext></mrow><annotation encoding=\"application/x-tex\">时延带宽积=传播时延*带宽</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">时延带宽积</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">传播时延</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">带宽</span></span></span></span></li>\n<li>时延带宽积反映了网络中的数据量</li>\n</ul>\n<h4 id=\"往返时间rtt\"><a class=\"anchor\" href=\"#往返时间rtt\">#</a> 往返时间 RTT</h4>\n<ul>\n<li>往返时间 RTT：数据从发送端发送到接收端，再返回发送端所需的时间</li>\n</ul>\n<h4 id=\"利用率\"><a class=\"anchor\" href=\"#利用率\">#</a> 利用率</h4>\n<ul>\n<li>利用率：信道的利用率，指信道被占用的时间比例</li>\n<li>网络利用率：全网络信道利用率的加权平均值</li>\n<li>时延<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">D_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 与网络利用率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> 的关系：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo>=</mo><mfrac><msub><mi>D</mi><mn>0</mn></msub><mrow><mn>1</mn><mo>−</mo><mi>U</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">D=\\frac{D_0}{1-U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2918em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8884em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4101em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> 是网络利用率，数值在 0-1 之间</li>\n</ul>\n<h4 id=\"计算机网络的非性能指标\"><a class=\"anchor\" href=\"#计算机网络的非性能指标\">#</a> 计算机网络的非性能指标</h4>\n<ul>\n<li>费用</li>\n<li>质量</li>\n<li>标准化</li>\n<li>可靠性</li>\n<li>可扩展性和可升级性</li>\n<li>易于管理和维护</li>\n</ul>\n<h3 id=\"计算机网络的体系结构\"><a class=\"anchor\" href=\"#计算机网络的体系结构\">#</a> 计算机网络的体系结构</h3>\n<h4 id=\"协议与划分层次\"><a class=\"anchor\" href=\"#协议与划分层次\">#</a> 协议与划分层次</h4>\n<ul>\n<li>协议是<strong>进行网络中的数据交换而建立的规则、标准或约定</strong>，是控制两个对等实体进行通信的规则的集合。在协议的控制下，两个对等实体间的通信使得本层能够向<strong>上一层提供服务</strong>，而要实现本层协议，还需要<strong>使用下面一层提供服务</strong>。</li>\n<li>** 实体（entity）** 表示任何可发送或接收信息的硬件或软件进程</li>\n<li><strong>协议栈</strong>：指计算机网络体系结构采用分层模型后，每层的主要功能由对等层协议的运行来实现，因而每层可用一些主要协议来表征，几个层次画在一起很像一个栈的结构.</li>\n<li><strong>对等层</strong>：在网络体系结构中，通信双方实现同样功能的层</li>\n<li><strong>协议数据单元</strong>：对等层实体进行信息交换的数据单位</li>\n<li><strong>服务访问点</strong>：在同一系统中相邻两层的实体进行交互（即交换信息）的地方</li>\n<li><strong>服务访问点 SAP</strong> 是一个抽象的概念，它实体上就是一个<strong>逻辑接口</strong></li>\n</ul>\n<div class=\"note warning\">\n<p>协议和服务的概念的区分</p>\n<ul>\n<li>协议的实现保证了能够向上一层提供服务。本层的服务用户只能看见服务而无法看见下面的协议。<strong>下面的协议对上面的服务用户是透明的</strong>。</li>\n<li>协议是 “水平的”，即协议是控制两个对等实体进行通信的规则。但服务是 “垂直的”，即<strong>服务是由下层通过层间接口向上层提供的</strong>。上层使用所提供的服务必须与下层交换一些命令，这些命令在 OSI 中称为<strong>服务原语</strong>。</li>\n</ul>\n</div>\n<h5 id=\"网络协议的组成要素\"><a class=\"anchor\" href=\"#网络协议的组成要素\">#</a> 网络协议的组成要素</h5>\n<ul>\n<li>语法：数据与控制信息的结构或格式</li>\n<li>语义：需要发出何种控制信息，完成何种动作以及做出何种响应。</li>\n<li>同步：即事件实现顺序的详细说明。</li>\n</ul>\n<h4 id=\"接口\"><a class=\"anchor\" href=\"#接口\">#</a> 接口</h4>\n<p>接口：同一结点相邻两层间交换信息的连接点，系统内部规定，同一结点相邻两层的实体通过服务访问点 SAP 进行交互，是抽象概念</p>\n<h4 id=\"osi参考模型和tcpip参考模型\"><a class=\"anchor\" href=\"#osi参考模型和tcpip参考模型\">#</a> OSI 参考模型和 TCP/IP 参考模型</h4>\n<table>\n<thead>\n<tr>\n<th>OSI</th>\n<th>TCP/IP</th>\n<th>信息格式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>应用层</td>\n<td rowspan=\"3\">应用层</td>\n<td rowspan=\"3\">报文流</td>\n</tr>\n<tr>\n<td>表示层</td>\n</tr>\n<tr>\n<td>会话层</td>\n</tr>\n<tr>\n<td>传输层</td>\n<td>传输层（TCP、UDP）</td>\n<td>分组</td>\n</tr>\n<tr>\n<td>网络层</td>\n<td>网络互联层（IP）</td>\n<td>IP 数据报</td>\n</tr>\n<tr>\n<td>数据链路层</td>\n<td rowspan=\"2\">网络接口层</td>\n<td rowspan=\"2\">帧比特流</td>\n</tr>\n<tr>\n<td>物理层</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"分层的好处\"><a class=\"anchor\" href=\"#分层的好处\">#</a> 分层的好处</h4>\n<ul>\n<li>各层之间是独立的</li>\n<li>灵活性好</li>\n<li>结构上可分割开</li>\n<li>易于实现和维护</li>\n<li>能促进标准化工作</li>\n</ul>\n<h2 id=\"物理层\"><a class=\"anchor\" href=\"#物理层\">#</a> 物理层</h2>\n<h3 id=\"物理层的基本概念\"><a class=\"anchor\" href=\"#物理层的基本概念\">#</a> 物理层的基本概念</h3>\n<h4 id=\"物理层要解决哪些问题\"><a class=\"anchor\" href=\"#物理层要解决哪些问题\">#</a> 物理层要解决哪些问题</h4>\n<ol>\n<li>物理层要尽可能地<strong>屏蔽掉物理设备和传输媒体</strong>，通信手段的不同，使数据链路层感觉不到这些差异，只考虑完成本层的协议和服务。</li>\n<li>给其服务用户（数据链路层）在一条物理的传输媒体上传送和接收比特流（一般为串行按顺序传输的比特流）的能力，为此，物理层应该<strong>解决物理连接的建立、维持和释放问题</strong>。</li>\n<li>在两个相邻系统之间<strong>唯一地标识数据电路</strong></li>\n</ol>\n<h4 id=\"物理层的主要特点\"><a class=\"anchor\" href=\"#物理层的主要特点\">#</a> 物理层的主要特点</h4>\n<ol>\n<li>由于在 OSI 之前，许多物理规程或协议已经制定出来了，而且在数据通信领域中，这些物理规程已被许多商品化的设备所采用，加之，物理层协议涉及的范围广泛，所以至今没有按 OSI 的抽象模型制定一套新的物理层协议，而是沿用已存在的物理规程，将物理层确定为描述与传输媒体接口的<strong>机械</strong>，<strong>电气</strong>，<strong>功能</strong>和<strong>规程</strong>特性。</li>\n<li>由于物理连接的方式很多，传输媒体的种类也很多，因此，具体的物理协议相当复杂。</li>\n</ol>\n<h4 id=\"物理层的主要任务\"><a class=\"anchor\" href=\"#物理层的主要任务\">#</a> 物理层的主要任务</h4>\n<p>主要任务：确定与传输媒体的接口的一些特性</p>\n<ol>\n<li>机械特性：接口的几何形状、引脚数目、引脚位置等</li>\n<li>电气特性：指明在接口电缆的各条线上出现的电压的范围</li>\n<li>功能特性：指明某条线上出现的某一电平的电压表示何意。</li>\n<li>归程特性：指明对于不同功能的各种可能事件的出现顺序</li>\n</ol>\n<h3 id=\"数据通信的基础知识\"><a class=\"anchor\" href=\"#数据通信的基础知识\">#</a> 数据通信的基础知识</h3>\n<h4 id=\"数据通信系统的模型\"><a class=\"anchor\" href=\"#数据通信系统的模型\">#</a> 数据通信系统的模型</h4>\n<p>一个数据通信系统包括三大部分：原系统、传输系统和目的系统</p>\n<h4 id=\"常用术语\"><a class=\"anchor\" href=\"#常用术语\">#</a> 常用术语</h4>\n<ul>\n<li>数据：运送信息的实体</li>\n<li>信号：数据的电气或电磁的表现</li>\n<li>码元：在一定时间间隔内的信号的离散数值</li>\n<li>模拟信号：代表消息的参数的取值是连续的</li>\n<li>数字信号：代表消息的参数的取值是离散的</li>\n</ul>\n<div class=\"note warning\">\n<p>目前主流：数字信道通信<br />\n优点：抗干扰能力强，传输差错可控制、便于处理、便于加密、可以综合传递各种信息<br />\n数字通信可以传递数字信号，也可以传递经过数字化处理的模拟信号</p>\n</div>\n<h4 id=\"信道的基本概念\"><a class=\"anchor\" href=\"#信道的基本概念\">#</a> 信道的基本概念</h4>\n<p>信道：一般用来表示像某一个方向传送信息的媒体，与通信电路不同</p>\n<h5 id=\"通信双方的交互方式\"><a class=\"anchor\" href=\"#通信双方的交互方式\">#</a> 通信双方的交互方式</h5>\n<ul>\n<li>单工通信（单向通信）：只能有一个方向的通信</li>\n<li>半双工通信（双向交替通信）：通信的双方都可以发送和接收信息，但不能同时进行</li>\n<li>全双工通信（双向同时通信）：通信的双方可以同时发送和接收信息</li>\n</ul>\n<h5 id=\"基带信号的调制\"><a class=\"anchor\" href=\"#基带信号的调制\">#</a> 基带信号的调制</h5>\n<p>基带信号（即基本频带的信号）：来自信源的型号信号，一般是低频信号，不能直接用于传输，需要调制</p>\n<h6 id=\"基带调制编码\"><a class=\"anchor\" href=\"#基带调制编码\">#</a> 基带调制（编码）</h6>\n<ul>\n<li>仅对波形进行变换，使他能与信道的基本特性相适应，仍是数字信号</li>\n<li>信息传输之前编码：传输编码\n<ul>\n<li>提高抗干扰能力；</li>\n<li>携带同步信息实现同步；</li>\n<li>可实现纠错检偏；</li>\n<li>降低传输损耗；</li>\n<li>简化传输设备；</li>\n</ul>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"computer-network/image.png\" alt=\"常用编码方式\" /></p>\n<div class=\"note warning\">\n<ul>\n<li>不归零制：正电平表示 1，负电平表示 0</li>\n<li>归零制：正脉冲表示 1，负脉冲表示 0</li>\n<li>曼彻斯特编码：位周期中心向上跳变表示 0，中心向下跳变表示 1，但也可以反过来</li>\n<li>差分曼彻斯特编码：位开始边界有跳变表示 0，无跳变表示 1</li>\n</ul>\n<p>曼彻斯特编码和差分曼彻斯特编码具有自同步性</p>\n</div>\n<h6 id=\"带通调制\"><a class=\"anchor\" href=\"#带通调制\">#</a> 带通调制</h6>\n<ul>\n<li>带通信号：需要载波</li>\n<li>把型号的频率范围搬移到较高的频段，并转换为模拟信号，以便在模拟信道上传输</li>\n<li>仅在一段频率范围内能够通过信道</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"computer-network/3F7328E4E05FD6B8A73C31DC7DB03F57.png\" alt=\"常用调制方法\" /></p>\n<div class=\"note warning\">\n<ul>\n<li>调幅（AM）：调制信号的幅度随基带信号的变化而变化</li>\n<li>调频（FM）：调制信号的频率随基带信号的变化而变化</li>\n<li>调相（PM）：调制信号的初始相位随基带信号的变化而变化</li>\n</ul>\n</div>\n<h4 id=\"信道的极限容量\"><a class=\"anchor\" href=\"#信道的极限容量\">#</a> 信道的极限容量</h4>\n<h5 id=\"影响因素\"><a class=\"anchor\" href=\"#影响因素\">#</a> 影响因素</h5>\n<ul>\n<li>信道能够通过的频率范围</li>\n<li>信道的信噪比</li>\n</ul>\n<h5 id=\"信道的极限容量带宽\"><a class=\"anchor\" href=\"#信道的极限容量带宽\">#</a> 信道的极限容量 —— 带宽</h5>\n<ul>\n<li>信道的带宽：物理信道能过允许顺利通过的最大的连续频率范围</li>\n<li>带宽是传输介质的一种物理特征，通常取决于介质的材料构成、厚度和长度</li>\n<li>信道的带宽越宽，能够通过的信号高频分量越多，可以用更高的速率传送码元而不出现码间串扰</li>\n<li>码间串扰：如果高频分量在传输时受到衰减，码元之间的界限就会变得模糊，这种现象称为码间串扰</li>\n</ul>\n<h5 id=\"奈氏准则\"><a class=\"anchor\" href=\"#奈氏准则\">#</a> 奈氏准则</h5>\n<p>在带宽为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span>（ Hz）的低通信道中，极限<strong>码元传输速率</strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">2W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> 波特，极限<strong>信息传输速率</strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>（bps）满足：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mn>2</mn><mi>W</mi><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">C=2W\\log_2V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> 代表不同的码元数</p>\n<h5 id=\"信道的极限容量信噪比\"><a class=\"anchor\" href=\"#信道的极限容量信噪比\">#</a> 信道的极限容量 —— 信噪比</h5>\n<ul>\n<li>信噪比：信号功率与噪声功率之比，常记为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi mathvariant=\"normal\">/</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">S/N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>，单位为分贝，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>N</mi><mi>R</mi><mo>=</mo><mn>10</mn><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>10</mn></msub><mfrac><mi>S</mi><mi>N</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">SNR=10\\log_{10}\\frac{S}{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">SNR</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2173em;vertical-align:-0.345em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n<h5 id=\"香农定理\"><a class=\"anchor\" href=\"#香农定理\">#</a> 香农定理</h5>\n<ul>\n<li>香农定理：在有高斯白噪声的信道中，极限<strong>信息传输速率</strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>（bps）满足：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mi>W</mi><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mfrac><mi>S</mi><mi>N</mi></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C=W\\log_2(1+\\frac{S}{N})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2173em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> 为信道的带宽，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 为信号功率，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 为噪声功率</li>\n</ul>\n<div class=\"note warning\">\n<p>码元传输速率受奈氏准则的限制，信息传输速率受香农公式的限制<br />\n香农公式在数据通信中的意义是：只要信息传输速率低于信道的极限传信率，就可实现无差传输。<br />\nbit/s（bps）是<strong>信息传输速率</strong>的单位<br />\n<strong>码元传输速率</strong>，单位波特（Baud），也称为调制速率、波形速率或符号速率。<br />\n<strong>一个码元不一定对应于一个比特</strong></p>\n</div>\n<h3 id=\"物理层下面的传输媒体\"><a class=\"anchor\" href=\"#物理层下面的传输媒体\">#</a> 物理层下面的传输媒体</h3>\n<h4 id=\"导引型传输媒体\"><a class=\"anchor\" href=\"#导引型传输媒体\">#</a> 导引型传输媒体</h4>\n<table>\n<thead>\n<tr>\n<th>传输媒体</th>\n<th>分类</th>\n<th>优点</th>\n<th>缺点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td rowspan=\"2\">双绞线</td>\n<td>屏蔽双绞线（STP）</td>\n<td rowspan=\"2\">价格低、安装方便、易于维护</td>\n<td rowspan=\"2\">传输距离短（几到十几公里）、传输速率低、易受干扰、传输误码率高</td>\n</tr>\n<tr>\n<td>非屏蔽双绞线（UTP）</td>\n</tr>\n<tr>\n<td rowspan=\"2\">同轴电缆</td>\n<td>50Ω 同轴电缆：LAN / 数字传输</td>\n<td rowspan=\"2\">传输距离远、传输速率高、抗干扰能力强</td>\n<td rowspan=\"2\">安装维护困难、价格高</td>\n</tr>\n<tr>\n<td>75Ω 同轴电缆：有线电视 / 模拟传输</td>\n</tr>\n<tr>\n<td rowspan=\"2\">光纤</td>\n<td>多模光纤（近距离）</td>\n<td rowspan=\"2\">电磁绝缘性能好、信号衰减小、频带较宽、传输距离较大（100km 以上）、传输误码率低、保密性好</td>\n<td rowspan=\"2\">断裂连接非常困难、技术要求高、成本高</td>\n</tr>\n<tr>\n<td>单模光纤（远距离）</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"非导引型传输媒体\"><a class=\"anchor\" href=\"#非导引型传输媒体\">#</a> 非导引型传输媒体</h4>\n<ul>\n<li>短波通信：通信质量差，传输速度低</li>\n<li>微波在空间直线传播，分为地面微波接力通信和卫星通信</li>\n</ul>\n",
            "tags": [
                "computer science",
                "learning"
            ]
        },
        {
            "id": "https://blog.ivansnow02.xyz/sql-lab/",
            "url": "https://blog.ivansnow02.xyz/sql-lab/",
            "title": "SQL代码复习",
            "date_published": "2024-05-09T12:11:25.000Z",
            "content_html": "<ul>\n<li>求选修了老师 “王刚” 开课课程且成绩在 90 分以上的学生姓名、课程名称和成绩；（姓名，课程名，成绩）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 学生<span class=\"token punctuation\">.</span>姓名<span class=\"token punctuation\">,</span> 课程<span class=\"token punctuation\">.</span>课程名<span class=\"token punctuation\">,</span> 学习<span class=\"token punctuation\">.</span>成绩</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学生</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 学习 <span class=\"token keyword\">ON</span> 学生<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学习<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 授课 <span class=\"token keyword\">ON</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 授课<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">AND</span> 学习<span class=\"token punctuation\">.</span>教师号 <span class=\"token operator\">=</span> 授课<span class=\"token punctuation\">.</span>教师号</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 教师 <span class=\"token keyword\">ON</span> 授课<span class=\"token punctuation\">.</span>教师号 <span class=\"token operator\">=</span> 教师<span class=\"token punctuation\">.</span>教师号</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 课程 <span class=\"token keyword\">ON</span> 授课<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 课程<span class=\"token punctuation\">.</span>课程号</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">WHERE</span> 教师<span class=\"token punctuation\">.</span>教师名 <span class=\"token operator\">=</span> <span class=\"token string\">'王刚'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token operator\">AND</span> 学习<span class=\"token punctuation\">.</span>成绩 <span class=\"token operator\">></span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>求选修了 “王刚” 老师所授全部课程的学生姓名和学院名称；（姓名，学院名称）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 学生<span class=\"token punctuation\">.</span>姓名<span class=\"token punctuation\">,</span> 学院<span class=\"token punctuation\">.</span>学院名称</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学生</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 学院 <span class=\"token keyword\">ON</span> 学生<span class=\"token punctuation\">.</span>学院代码 <span class=\"token operator\">=</span> 学院<span class=\"token punctuation\">.</span>学院代码</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                  <span class=\"token keyword\">FROM</span> 授课</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                           <span class=\"token keyword\">JOIN</span> 教师 <span class=\"token keyword\">ON</span> 授课<span class=\"token punctuation\">.</span>教师号 <span class=\"token operator\">=</span> 教师<span class=\"token punctuation\">.</span>教师号</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                  <span class=\"token keyword\">WHERE</span> 教师<span class=\"token punctuation\">.</span>教师名 <span class=\"token operator\">=</span> <span class=\"token string\">'王刚'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token operator\">AND</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                    <span class=\"token keyword\">FROM</span> 学习</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                    <span class=\"token keyword\">WHERE</span> 学习<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学生<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                      <span class=\"token operator\">AND</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 授课<span class=\"token punctuation\">.</span>课程号<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>求没有选修课程 “软件工程” 的学生学号和姓名；（学生学号，姓名）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 学生<span class=\"token punctuation\">.</span>学号<span class=\"token punctuation\">,</span> 学生<span class=\"token punctuation\">.</span>姓名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学生</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                  <span class=\"token keyword\">FROM</span> 学习</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                           <span class=\"token keyword\">JOIN</span> 课程 <span class=\"token keyword\">ON</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 课程<span class=\"token punctuation\">.</span>课程号</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                  <span class=\"token keyword\">WHERE</span> 学生<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学习<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token operator\">AND</span> 课程<span class=\"token punctuation\">.</span>课程名 <span class=\"token operator\">=</span> <span class=\"token string\">'软件工程'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>求至少选修了两门课程的学生学号；（学号）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 学号</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学习</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> 学号</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">HAVING</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>课程号<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>求课程 “经济学” 不及格学生姓名和考试成绩；（姓名，成绩）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 学生<span class=\"token punctuation\">.</span>姓名<span class=\"token punctuation\">,</span> 学习<span class=\"token punctuation\">.</span>成绩</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学生</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 学习 <span class=\"token keyword\">ON</span> 学生<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学习<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 课程 <span class=\"token keyword\">ON</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 课程<span class=\"token punctuation\">.</span>课程号</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">WHERE</span> 课程<span class=\"token punctuation\">.</span>课程名 <span class=\"token operator\">=</span> <span class=\"token string\">'经济学'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token operator\">AND</span> 学习<span class=\"token punctuation\">.</span>成绩 <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>求至少选修了与学号 “T06” 同学选修的课程相同的学生学号；（学号）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> 学习<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学习</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> 学号 <span class=\"token operator\">!=</span> <span class=\"token string\">'T06'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token operator\">AND</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                  <span class=\"token keyword\">FROM</span> 学习 <span class=\"token keyword\">AS</span> T06课程</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                  <span class=\"token keyword\">WHERE</span> T06课程<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> <span class=\"token string\">'T06'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token operator\">AND</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                    <span class=\"token keyword\">FROM</span> 学习 学生课程</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                    <span class=\"token keyword\">WHERE</span> 学生课程<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学习<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                      <span class=\"token operator\">AND</span> 学生课程<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> T06课程<span class=\"token punctuation\">.</span>课程号<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>求至少选修了 “C3，C4” 两门课程的学生姓名和学院名称；（姓名，学院名称）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> 学生<span class=\"token punctuation\">.</span>姓名<span class=\"token punctuation\">,</span> 学院<span class=\"token punctuation\">.</span>学院名称</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学生</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 学院 <span class=\"token keyword\">ON</span> 学生<span class=\"token punctuation\">.</span>学院代码 <span class=\"token operator\">=</span> 学院<span class=\"token punctuation\">.</span>学院代码</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>              <span class=\"token keyword\">FROM</span> 学习 <span class=\"token keyword\">AS</span> 学习C3</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>              <span class=\"token keyword\">WHERE</span> 学习C3<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学生<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token operator\">AND</span> 学习C3<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> <span class=\"token string\">'C3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token operator\">AND</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>              <span class=\"token keyword\">FROM</span> 学习 <span class=\"token keyword\">AS</span> 学习C4</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>              <span class=\"token keyword\">WHERE</span> 学习C4<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学生<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token operator\">AND</span> 学习C4<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> <span class=\"token string\">'C4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>查询 “王石” 同学没有选修的课程号和课程名； （课程号，课程名）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 课程<span class=\"token punctuation\">.</span>课程号<span class=\"token punctuation\">,</span> 课程<span class=\"token punctuation\">.</span>课程名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 课程</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                  <span class=\"token keyword\">FROM</span> 学习</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                           <span class=\"token keyword\">JOIN</span> 学生 <span class=\"token keyword\">on</span> 学习<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学生<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                  <span class=\"token keyword\">WHERE</span> 学生<span class=\"token punctuation\">.</span>姓名 <span class=\"token operator\">=</span> <span class=\"token string\">'王石'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token operator\">AND</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 课程<span class=\"token punctuation\">.</span>课程号<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>查询没有被任何学生选修的课程的课程号；（课程号）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 课程<span class=\"token punctuation\">.</span>课程号</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 课程</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                  <span class=\"token keyword\">FROM</span> 学习</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                  <span class=\"token keyword\">WHERE</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 课程<span class=\"token punctuation\">.</span>课程号<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>求选修了全部课程的学生姓名；（姓名）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 学生<span class=\"token punctuation\">.</span>姓名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学生</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                  <span class=\"token keyword\">FROM</span> 课程</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                  <span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                    <span class=\"token keyword\">FROM</span> 学习</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                                    <span class=\"token keyword\">WHERE</span> 学习<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学生<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                      <span class=\"token operator\">AND</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 课程<span class=\"token punctuation\">.</span>课程号<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>查询各学院课程 “经济学” 的平均分，并按照成绩从高到低的顺序排列；（学院名称，平均分）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 学院<span class=\"token punctuation\">.</span>学院名称<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>学习<span class=\"token punctuation\">.</span>成绩<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> 平均分</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学生</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 学院 <span class=\"token keyword\">ON</span> 学生<span class=\"token punctuation\">.</span>学院代码 <span class=\"token operator\">=</span> 学院<span class=\"token punctuation\">.</span>学院代码</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 学习 <span class=\"token keyword\">ON</span> 学生<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学习<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 课程 <span class=\"token keyword\">ON</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 课程<span class=\"token punctuation\">.</span>课程号</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">WHERE</span> 课程<span class=\"token punctuation\">.</span>课程名 <span class=\"token operator\">=</span> <span class=\"token string\">'经济学'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> 学院<span class=\"token punctuation\">.</span>学院名称</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 平均分 <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>查询选修课程 “经济学” 的学生姓名和所在院系，结果按各院系排列，同时成绩从高到低排列；（姓名，学院名称，成绩）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 学生<span class=\"token punctuation\">.</span>姓名<span class=\"token punctuation\">,</span> 学院<span class=\"token punctuation\">.</span>学院名称<span class=\"token punctuation\">,</span> 学习<span class=\"token punctuation\">.</span>成绩</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学生</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 学院 <span class=\"token keyword\">ON</span> 学生<span class=\"token punctuation\">.</span>学院代码 <span class=\"token operator\">=</span> 学院<span class=\"token punctuation\">.</span>学院代码</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 学习 <span class=\"token keyword\">ON</span> 学生<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学习<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 课程 <span class=\"token keyword\">ON</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 课程<span class=\"token punctuation\">.</span>课程号</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">WHERE</span> 课程<span class=\"token punctuation\">.</span>课程名 <span class=\"token operator\">=</span> <span class=\"token string\">'经济学'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 学院<span class=\"token punctuation\">.</span>学院名称<span class=\"token punctuation\">,</span> 学习<span class=\"token punctuation\">.</span>成绩 <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>求学时在 30-45 之间（含 30 和 45）的课程的课程号和课程名称及授课教师；（课程号，课程名，教师姓名）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 课程<span class=\"token punctuation\">.</span>课程号<span class=\"token punctuation\">,</span> 课程<span class=\"token punctuation\">.</span>课程名<span class=\"token punctuation\">,</span> 教师<span class=\"token punctuation\">.</span>教师名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 课程</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 授课 <span class=\"token keyword\">ON</span> 课程<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 授课<span class=\"token punctuation\">.</span>课程号</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 教师 <span class=\"token keyword\">ON</span> 授课<span class=\"token punctuation\">.</span>教师号 <span class=\"token operator\">=</span> 教师<span class=\"token punctuation\">.</span>教师号</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">WHERE</span> 课程<span class=\"token punctuation\">.</span>学时 <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">30</span> <span class=\"token operator\">AND</span> <span class=\"token number\">45</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>检索选修课程 “经济学” 的最高分学生的姓名；（姓名）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 学生<span class=\"token punctuation\">.</span>姓名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 学生</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 学习 <span class=\"token keyword\">ON</span> 学生<span class=\"token punctuation\">.</span>学号 <span class=\"token operator\">=</span> 学习<span class=\"token punctuation\">.</span>学号</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token keyword\">JOIN</span> 课程 <span class=\"token keyword\">ON</span> 学习<span class=\"token punctuation\">.</span>课程号 <span class=\"token operator\">=</span> 课程<span class=\"token punctuation\">.</span>课程号</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">WHERE</span> 课程<span class=\"token punctuation\">.</span>课程名 <span class=\"token operator\">=</span> <span class=\"token string\">'经济学'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 学习<span class=\"token punctuation\">.</span>成绩 <span class=\"token keyword\">DESC</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">LIMIT</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>查询选课人数超过 5 人的课程的课程号及课程名；（课程号，课程名）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> 课程<span class=\"token punctuation\">.</span>课程号<span class=\"token punctuation\">,</span> 课程<span class=\"token punctuation\">.</span>课程名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 课程</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">NATURAL</span> <span class=\"token keyword\">JOIN</span> 学习</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> 课程<span class=\"token punctuation\">.</span>课程号<span class=\"token punctuation\">,</span> 课程<span class=\"token punctuation\">.</span>课程名</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">HAVING</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>学习<span class=\"token punctuation\">.</span>学号<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "computer science",
                "learning"
            ]
        },
        {
            "id": "https://blog.ivansnow02.xyz/DataBaseLearning/",
            "url": "https://blog.ivansnow02.xyz/DataBaseLearning/",
            "title": "数据库系统概论概念整理",
            "date_published": "2024-04-29T05:13:02.000Z",
            "content_html": "<h2 id=\"关系\"><a class=\"anchor\" href=\"#关系\">#</a> 关系</h2>\n<h3 id=\"域\"><a class=\"anchor\" href=\"#域\">#</a> 域</h3>\n<p>域是属性的取值范围，是属性的取值集合。</p>\n<h3 id=\"笛卡尔积\"><a class=\"anchor\" href=\"#笛卡尔积\">#</a> 笛卡尔积</h3>\n<p>给定一组域 D1, D2, ..., Dn，它们的笛卡尔积是指<strong>所有可能</strong>的 n 元组的集合。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub><mo>×</mo><msub><mi>D</mi><mn>2</mn></msub><mo>×</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>×</mo><msub><mi>D</mi><mi>n</mi></msub><mo>=</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">(</mo><msub><mi>d</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>d</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>d</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>d</mi><mn>1</mn></msub><mo>∈</mo><msub><mi>D</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>d</mi><mn>2</mn></msub><mo>∈</mo><msub><mi>D</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>d</mi><mi>n</mi></msub><mo>∈</mo><msub><mi>D</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">D_1 \\times D_2 \\times ... \\times D_n = \\{(d_1, d_2, ..., d_n) | d_1 \\in D_1, d_2 \\in D_2, ..., d_n \\in D_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{(</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></p>\n<h3 id=\"关系的数学定义\"><a class=\"anchor\" href=\"#关系的数学定义\">#</a> 关系的数学定义</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub><mo>×</mo><msub><mi>D</mi><mn>2</mn></msub><mo>×</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>×</mo><msub><mi>D</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">D_1 \\times D_2 \\times ... \\times D_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的一个<strong>子集</strong>称为关系，<strong>关系的元组称为关系的行</strong>，用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><msub><mi>D</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>D</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>D</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(D_1, D_2, ..., D_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 表示，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 是关系名，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 是关系的<strong>度</strong>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>D</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>D</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">D_1, D_2, ..., D_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是关系的<strong>域</strong>。</p>\n<h3 id=\"码\"><a class=\"anchor\" href=\"#码\">#</a> 码</h3>\n<h4 id=\"候选码\"><a class=\"anchor\" href=\"#候选码\">#</a> 候选码</h4>\n<p>在一个关系中，能<strong>惟一标识元组的属性</strong>或<strong>最小属性集</strong>称为关系的候选码。</p>\n<h4 id=\"主码\"><a class=\"anchor\" href=\"#主码\">#</a> 主码</h4>\n<p>若一个关系中有多个候选码，则<strong>选其中的一个为主码</strong>。</p>\n<h4 id=\"外码\"><a class=\"anchor\" href=\"#外码\">#</a> 外码</h4>\n<p>设 F 是基本关系 R 的一个或一组属性，但不是 R 的码。Ks 是基本关系 S 的主码。如果 F 与 Ks 相对应，则称 F 是 R 的外码。并称基本关系 R 为<strong>参照关系</strong>（Referencing Relation），基本关系 S 为<strong>被参照关系</strong>（Referenced Relationship）。</p>\n<h4 id=\"主属性\"><a class=\"anchor\" href=\"#主属性\">#</a> 主属性</h4>\n<p>如果一个属性包含在任何一个候选码中，则称该属性为主属性。<br />\n不包含在任何一个候选码中的属性称为非主属性。</p>\n<h3 id=\"关系的性质\"><a class=\"anchor\" href=\"#关系的性质\">#</a> 关系的性质</h3>\n<p>关系是一个二维表，表的每一行对应一个元组，表的每一列有一个属性名且对应一个域。</p>\n<ol>\n<li>分量必须取原子值</li>\n<li>列是同质的，即每一列的值来自同一域，具有相同的数据类型。每列的属性名是不同的。</li>\n<li>表中的列称为属性，给每列起一个名称即属性名。</li>\n<li>列的排列顺序是无关紧要的，有时为了使用方便，使用时有列序。</li>\n<li>关系中任意两个元组不能完全相同</li>\n<li>行的顺序无关。</li>\n</ol>\n<p>每个关系都有称之为关键字的属性集唯一标识各元组。</p>\n<h3 id=\"关系完整性约束\"><a class=\"anchor\" href=\"#关系完整性约束\">#</a> 关系完整性约束</h3>\n<h4 id=\"实体完整性约束\"><a class=\"anchor\" href=\"#实体完整性约束\">#</a> 实体完整性约束</h4>\n<p>规则：若属性 A 是基本关系 R 的主属性，则属性 A 不能取空值。</p>\n<h4 id=\"参照完整性约束\"><a class=\"anchor\" href=\"#参照完整性约束\">#</a> 参照完整性约束</h4>\n<p>规则：在参照关系 R 中，如果属性 F 是 R 的外码，那么<strong> F 的值必须是被参照关系 S 的主码的值</strong>，或者是<strong>空值</strong>。</p>\n<h4 id=\"用户定义完整性约束\"><a class=\"anchor\" href=\"#用户定义完整性约束\">#</a> 用户定义完整性约束</h4>\n<p>用户定义的完整性约束是指用户自己定义的完整性约束，如：年龄不能为负数。</p>\n<h2 id=\"关系代数\"><a class=\"anchor\" href=\"#关系代数\">#</a> 关系代数</h2>\n<h3 id=\"传统集合运算\"><a class=\"anchor\" href=\"#传统集合运算\">#</a> 传统集合运算</h3>\n<ul>\n<li>并：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∪</mo></mrow><annotation encoding=\"application/x-tex\">\\cup</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∪</span></span></span></span></li>\n<li>交：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∩</mo></mrow><annotation encoding=\"application/x-tex\">\\cap</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∩</span></span></span></span></li>\n<li>差：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo></mrow><annotation encoding=\"application/x-tex\">-</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span></span></span></span></li>\n<li>笛卡尔积：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">×</span></span></span></span></li>\n</ul>\n<h3 id=\"专门的关系运算\"><a class=\"anchor\" href=\"#专门的关系运算\">#</a> 专门的关系运算</h3>\n<h4 id=\"选择sigma\"><a class=\"anchor\" href=\"#选择sigma\">#</a> 选择：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span></h4>\n<p>选择运算是从关系中选择满足某一条件的元组，即从关系 R 中选取满足条件 C 的元组。</p>\n<h4 id=\"投影pi\"><a class=\"anchor\" href=\"#投影pi\">#</a> 投影：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Π</mi></mrow><annotation encoding=\"application/x-tex\">\\Pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Π</span></span></span></span></h4>\n<p>投影运算是从关系中选择出满足某一条件的属性，即从关系 R 中选取满足条件 C 的属性。</p>\n<h4 id=\"连接join\"><a class=\"anchor\" href=\"#连接join\">#</a> 连接：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋈</mo></mrow><annotation encoding=\"application/x-tex\">\\Join</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.51em;vertical-align:-0.005em;\"></span><span class=\"mrel\">⋈</span></span></span></span></h4>\n<p>连接运算是从两个关系中选取满足某一条件的元组，即从关系 R 和 S 中选取满足条件 C 的元组。</p>\n<h5 id=\"自然连接\"><a class=\"anchor\" href=\"#自然连接\">#</a> 自然连接</h5>\n<p>自然连接是指两个关系中的公共属性进行等值比较，相等的元组连接起来。R.A = S.A，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>⋈</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">R \\Join S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6883em;vertical-align:-0.005em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⋈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span></p>\n<h5 id=\"等值连接\"><a class=\"anchor\" href=\"#等值连接\">#</a> 等值连接</h5>\n<p>等值连接是指两个关系中的属性进行等值比较，相等的元组连接起来。R.A = S.B，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo><munder><mo><mo>⋈</mo></mo><mrow><mi>A</mi><mo>=</mo><mi>B</mi></mrow></munder></mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">R \\underset{A=B}{\\Join} S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4327em;vertical-align:-0.7493em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.505em;\"><span style=\"top:-2.3507em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">⋈</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7493em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span></p>\n<h5 id=\"外连接\"><a class=\"anchor\" href=\"#外连接\">#</a> 外连接</h5>\n<p>外连接是指连接运算中，如果某个元组在一个关系中没有匹配的元组，那么在结果中仍然保留这个元组，只是在另一个关系中的元组的属性值为空。</p>\n<h4 id=\"除div\"><a class=\"anchor\" href=\"#除div\">#</a> 除：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>÷</mo></mrow><annotation encoding=\"application/x-tex\">\\div</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">÷</span></span></span></span></h4>\n<p>设 R 和 S 除运算的结果为 T，则<strong> T 包含所有在 R 中但不在 S 中的属性和值</strong>，且 T 的元组与 S 的元组经过组合均能出现在 R 中。即 T = R <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>÷</mo></mrow><annotation encoding=\"application/x-tex\">\\div</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">÷</span></span></span></span> S。<br />\n例如：<br />\nR：</p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>1</td>\n<td>3</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n</tr>\n<tr>\n<td>2</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p>S：</p>\n<table>\n<thead>\n<tr>\n<th>B</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n</tr>\n<tr>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p>则 R <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>÷</mo></mrow><annotation encoding=\"application/x-tex\">\\div</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">÷</span></span></span></span> S：</p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"除运算的代数表达式\"><a class=\"anchor\" href=\"#除运算的代数表达式\">#</a> 除运算的代数表达式</h5>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>÷</mo><mi>S</mi><mo>=</mo><msub><mi mathvariant=\"normal\">Π</mi><mi>A</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi mathvariant=\"normal\">Π</mi><mi>A</mi></msub><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"normal\">Π</mi><mi>A</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>×</mo><msub><mi mathvariant=\"normal\">Π</mi><mi>B</mi></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>−</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R \\div S = \\Pi_{A} (R) - \\Pi_{A} ((\\Pi_{A} (R) \\times \\Pi_B(S)) - R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">÷</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">((</span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></p>\n<h2 id=\"查询优化\"><a class=\"anchor\" href=\"#查询优化\">#</a> 查询优化</h2>\n<h3 id=\"查询优化的准则\"><a class=\"anchor\" href=\"#查询优化的准则\">#</a> 查询优化的准则</h3>\n<ol>\n<li>尽可能早地执行选择操作（减少中间运算结果）</li>\n<li>对关系进行预处理（索引、排序）</li>\n<li>同时进行投影和选择运算</li>\n<li>把投影同其前或后的双目运算结合起来。（合并连接的选择与投影操作，以减少扫描的次数）</li>\n<li>合并选择与笛卡尔积组成一个连接</li>\n<li>寻找公共子表达式</li>\n</ol>\n<h3 id=\"关系代数等价变换规则\"><a class=\"anchor\" href=\"#关系代数等价变换规则\">#</a> 关系代数等价变换规则</h3>\n<h4 id=\"连接-笛卡尔积交换律\"><a class=\"anchor\" href=\"#连接-笛卡尔积交换律\">#</a> 连接、笛卡尔积交换律</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>⋈</mo><mi>S</mi><mo>=</mo><mi>S</mi><mo>⋈</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R \\Join S = S \\Join R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6883em;vertical-align:-0.005em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⋈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6883em;vertical-align:-0.005em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⋈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></li>\n</ul>\n<h4 id=\"连接-笛卡尔积结合律\"><a class=\"anchor\" href=\"#连接-笛卡尔积结合律\">#</a> 连接、笛卡尔积结合律</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>⋈</mo><mo stretchy=\"false\">(</mo><mi>S</mi><mo>⋈</mo><mi>T</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>R</mi><mo>⋈</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>⋈</mo><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">R \\Join (S \\Join T) = (R \\Join S) \\Join T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6883em;vertical-align:-0.005em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⋈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⋈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⋈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⋈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></li>\n</ul>\n<h4 id=\"投影的串接定律注意条件\"><a class=\"anchor\" href=\"#投影的串接定律注意条件\">#</a> 投影的串接定律（注意条件）</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>B</mi><mi>m</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Pi_{A_1, A_2, ..., A_n}(\\Pi_{B_1, B_2, ..., B_m}(R)) = \\Pi_{A_1, A_2, ..., A_n}(R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h4 id=\"选择的串接定律\"><a class=\"anchor\" href=\"#选择的串接定律\">#</a> 选择的串接定律</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>C</mi><mn>2</mn></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>σ</mi><msub><mi>C</mi><mn>1</mn></msub></msub><mo stretchy=\"false\">(</mo><msub><mi>σ</mi><msub><mi>C</mi><mn>2</mn></msub></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma_{C_1 \\land C_2}(R) = \\sigma_{C_1}(\\sigma_{C_2}(R))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">∧</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">))</span></span></span></span></li>\n</ul>\n<h4 id=\"选择与投影的交换律注意条件\"><a class=\"anchor\" href=\"#选择与投影的交换律注意条件\">#</a> 选择与投影的交换律（注意条件）</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma_{C}(\\Pi_{A_1, A_2, ..., A_n}(R)) = \\Pi_{A_1, A_2, ..., A_n}(\\sigma_{C}(R))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">))</span></span></span></span>（条件 C 中只包含 A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>n</sub>）</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>B</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>B</mi><mi>m</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Pi_{A_1, A_2, ..., A_n}(\\sigma_{C}(R)) = \\Pi_{A_1, A_2, ..., A_n}\\sigma_{C}(\\Pi_{A_1, A_2, ..., A_n, B_1, ..., B_m}(R))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">))</span></span></span></span></li>\n</ul>\n<h4 id=\"选择与笛卡尔积的交换律\"><a class=\"anchor\" href=\"#选择与笛卡尔积的交换律\">#</a> 选择与笛卡尔积的交换律</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo>×</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>×</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma_{C}(R \\times S) = \\sigma_{C}(R) \\times S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo>×</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>σ</mi><msub><mi>C</mi><mn>1</mn></msub></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>×</mo><msub><mi>σ</mi><msub><mi>C</mi><mn>2</mn></msub></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma_{C}(R \\times S) = \\sigma_{C_1}(R) \\times \\sigma_{C_2}(S)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo>×</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>σ</mi><msub><mi>C</mi><mn>2</mn></msub></msub><mo stretchy=\"false\">(</mo><msub><mi>σ</mi><msub><mi>C</mi><mn>1</mn></msub></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>×</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma_{C}(R \\times S) = \\sigma_{C_2}(\\sigma_{C_1}(R) \\times S)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h4 id=\"选择与并-差的分配律\"><a class=\"anchor\" href=\"#选择与并-差的分配律\">#</a> 选择与并、差的分配律</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo>∪</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>∪</mo><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma_{C}(R \\cup S) = \\sigma_{C}(R) \\cup \\sigma_{C}(S)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo>−</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>σ</mi><mi>C</mi></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma_{C}(R - S) = \\sigma_{C}(R) - \\sigma_{C}(S)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h4 id=\"投影与并的分配律\"><a class=\"anchor\" href=\"#投影与并的分配律\">#</a> 投影与并的分配律</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo>∪</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>∪</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Pi_{A_1, A_2, ..., A_n}(R \\cup S) = \\Pi_{A_1, A_2, ..., A_n}(R) \\cup \\Pi_{A_1, A_2, ..., A_n}(S)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h4 id=\"投影与笛卡尔积的分配律\"><a class=\"anchor\" href=\"#投影与笛卡尔积的分配律\">#</a> 投影与笛卡尔积的分配律</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>B</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>B</mi><mi>m</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo>×</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>×</mo><msub><mi mathvariant=\"normal\">Π</mi><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>B</mi><mi>m</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Pi_{A_1, A_2, ..., A_n, B_1, B_2, ..., B_m}(R \\times S) = \\Pi_{A_1, A_2, ..., A_n}(R) \\times \\Pi_{B_1, B_2, ..., B_m}(S)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h3 id=\"关系代数表达式的优化算法\"><a class=\"anchor\" href=\"#关系代数表达式的优化算法\">#</a> 关系代数表达式的优化算法</h3>\n<ol>\n<li>把<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mrow><msub><mi>F</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>F</mi><mi>n</mi></msub></mrow></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma_{F_1, F_2, ..., F_n}(R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span> 变换为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><msub><mi>F</mi><mn>1</mn></msub></msub><mo stretchy=\"false\">(</mo><msub><mi>σ</mi><msub><mi>F</mi><mn>2</mn></msub></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">(</mo><msub><mi>σ</mi><msub><mi>F</mi><mi>n</mi></msub></msub><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sigma_{F_1}(\\sigma_{F_2}(...(\\sigma_{F_n}(R))...))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">...</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">))</span><span class=\"mord\">...</span><span class=\"mclose\">))</span></span></span></span>。</li>\n<li>对每一个<strong>选择</strong>尽可能把它移到树的<strong>叶端</strong>。</li>\n<li>对每一个<strong>投影</strong>尽可能把它移到树的<strong>叶端</strong>。</li>\n<li>合并选择和投影或一个选择后跟一个投影。</li>\n<li>将得到的语法树的内节点分组。（<strong>每一双目运算和它所有的直接祖先为一组</strong>）</li>\n<li>生成一个程序，每组节点的计算是程序中的一步。求值顺序为<strong>先子孙，后祖先。</strong></li>\n</ol>\n<h2 id=\"sql\"><a class=\"anchor\" href=\"#sql\">#</a> SQL</h2>\n<h3 id=\"数据定义语言ddl\"><a class=\"anchor\" href=\"#数据定义语言ddl\">#</a> 数据定义语言（DDL）</h3>\n<h4 id=\"create\"><a class=\"anchor\" href=\"#create\">#</a> CREATE</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span><span class=\"token punctuation\">[</span> <span class=\"token operator\">&lt;</span>列级完整性约束条件<span class=\"token operator\">></span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span><span class=\"token punctuation\">[</span> <span class=\"token operator\">&lt;</span>列级完整性约束条件<span class=\"token operator\">></span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>表级完整性约束条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h5>\n<ol>\n<li>定长和变长字符串：CHAR (n)、VARCHAR (n)</li>\n<li>定长和变长二进制串：BIT (n)、BIT VARING (n)</li>\n<li>整型数：INT、SMALLINT、TINYINT</li>\n<li>浮点数：FLOAT、DOUBLE PRECISION</li>\n<li>日期型：DATE</li>\n<li>时间型：TIME</li>\n<li>时标：TIMESTAMP</li>\n</ol>\n<h5 id=\"列级完整性约束条件\"><a class=\"anchor\" href=\"#列级完整性约束条件\">#</a> 列级完整性约束条件</h5>\n<ul>\n<li>主码约束：PRIMARY KEY，只有一个主码时，可以在列定义后面加上 <code>PRIMARY KEY</code></li>\n<li>唯一性约束：UNIQUE</li>\n<li>非空值约束：NOT NULL</li>\n</ul>\n<h5 id=\"表级完整性约束条件\"><a class=\"anchor\" href=\"#表级完整性约束条件\">#</a> 表级完整性约束条件</h5>\n<ul>\n<li>主码约束：PRIMARY KEY， <code>PRIMARY KEY (列名)</code></li>\n<li>参照完整性约束：FOREIGN KEY， <code>FOREIGN KEY (列名) REFERENCES 表名(列名)</code></li>\n</ul>\n<h4 id=\"alter\"><a class=\"anchor\" href=\"#alter\">#</a> ALTER</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token keyword\">ADD</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">COLUMN</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token keyword\">MODIFY</span> <span class=\"token keyword\">COLUMN</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"drop\"><a class=\"anchor\" href=\"#drop\">#</a> DROP</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"添加索引\"><a class=\"anchor\" href=\"#添加索引\">#</a> 添加索引</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">Unique</span><span class=\"token operator\">|</span>CLUSTER<span class=\"token punctuation\">]</span> <span class=\"token keyword\">INDEX</span> <span class=\"token operator\">&lt;</span>索引名<span class=\"token operator\">></span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>次序<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>次序<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>用 <code>&lt;表名&gt;</code>  指定要建索引的基本表名字</li>\n<li>索引可以建立在该表的一列或多列上，各列名之间用逗号分隔</li>\n<li>用 <code>&lt;次序&gt;</code>  指定索引值的排列次序，升序： <code>ASC</code> ，降序： <code>DESC</code> 。缺省值： <code>ASC</code></li>\n<li><code>UNIQUE</code>  表明此索引的每一个索引值只对应唯一的数据记录</li>\n<li><code>CLUSTER</code>  表示要建立的索引是聚集索引</li>\n</ul>\n<h5 id=\"唯一索引\"><a class=\"anchor\" href=\"#唯一索引\">#</a> 唯一索引</h5>\n<ul>\n<li>对于已含重复值的属性列不能建 UNIQUE 索引</li>\n<li>对某个列建立 UNIQUE 索引后，插入新记录时 DBMS 会自动检查新记录在该列上是否取了重复值。这相当于增加了一个 UNIQUE 约束</li>\n</ul>\n<h5 id=\"聚集索引\"><a class=\"anchor\" href=\"#聚集索引\">#</a> 聚集索引</h5>\n<ul>\n<li>聚集索引是一种特殊的索引，它对表中的数据记录进行了物理排序，使得数据记录的物理存储顺序与索引的逻辑顺序一致</li>\n<li>在一个基本表上最多只能建立一个聚簇索引</li>\n<li>聚集索引的用途：对于某些类型的查询，可以提高查询效率</li>\n<li>聚集索引的适用范围\n<ul>\n<li>很少对基表进行增删操作</li>\n<li>很少对其中的变长列进行修改操作</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"删除索引\"><a class=\"anchor\" href=\"#删除索引\">#</a> 删除索引</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> <span class=\"token operator\">&lt;</span>索引名<span class=\"token operator\">></span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"修改索引\"><a class=\"anchor\" href=\"#修改索引\">#</a> 修改索引</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">INDEX</span> <span class=\"token operator\">&lt;</span>索引名<span class=\"token operator\">></span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token keyword\">RENAME</span> <span class=\"token keyword\">TO</span> <span class=\"token operator\">&lt;</span>新索引名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"数据操纵语言dml\"><a class=\"anchor\" href=\"#数据操纵语言dml\">#</a> 数据操纵语言（DML）</h3>\n<h4 id=\"select\"><a class=\"anchor\" href=\"#select\">#</a> SELECT</h4>\n<h5 id=\"单表查询\"><a class=\"anchor\" href=\"#单表查询\">#</a> 单表查询</h5>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>目标列表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">HAVING</span> <span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span><span class=\"token operator\">|</span><span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><code>&lt;目标列表达式&gt;</code> ：可以是常量、列名、表达式、函数等</li>\n<li>常用的查询条件： <code>=</code> 、 <code>&lt;&gt;</code> 、 <code>&lt;</code> 、 <code>&gt;</code> 、 <code>&lt;=</code> 、 <code>&gt;=</code> 、 <code>BETWEEN</code> 、 <code>LIKE</code> 、 <code>IN</code> 、 <code>IS NULL</code> 、 <code>AND</code> 、 <code>OR</code> 、 <code>NOT</code></li>\n<li>字符串匹配： <code>%</code>  表示任意长度的字符串， <code>_</code> 表示一个字符： <code>[NOT] LIKE '&lt;匹配串&gt;' [ESCAPE '&lt;转义字符&gt;']</code> ， <code>ESCAPE</code>  用于指定转义字符。</li>\n<li>使用集函数： <code>COUNT</code> 、 <code>SUM</code> 、 <code>AVG</code> 、 <code>MAX</code> 、 <code>MIN</code> ， <code>COUNT(*)</code>  表示计算行数， <code>&lt;集函数&gt;([DISTINCT|ALL] &lt;列名&gt;)</code></li>\n<li>使用 <code>GROUP BY</code>  后， <code>SELECT</code>  中的列名只能是 <code>GROUP BY</code>  中的列名或集函数</li>\n<li><code>HAVING</code>  和 <code>WHERE</code>  的区别： <code>WHERE</code>  用于对行进行筛选， <code>HAVING</code>  用于对组进行筛选</li>\n</ul>\n<h5 id=\"多表查询\"><a class=\"anchor\" href=\"#多表查询\">#</a> 多表查询</h5>\n<h6 id=\"等值连接-inner-join\"><a class=\"anchor\" href=\"#等值连接-inner-join\">#</a> 等值连接 INNER JOIN</h6>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token number\">2</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h6 id=\"外连接-outer-join\"><a class=\"anchor\" href=\"#外连接-outer-join\">#</a> 外连接 OUTER JOIN</h6>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token number\">1</span><span class=\"token operator\">></span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">LEFT</span><span class=\"token operator\">|</span><span class=\"token keyword\">RIGHT</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token number\">2</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h6 id=\"top-n查询\"><a class=\"anchor\" href=\"#top-n查询\">#</a> TOP-N 查询</h6>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span><span class=\"token operator\">|</span><span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">LIMIT</span> N<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"嵌套查询\"><a class=\"anchor\" href=\"#嵌套查询\">#</a> 嵌套查询</h5>\n<h6 id=\"子查询\"><a class=\"anchor\" href=\"#子查询\">#</a> 子查询</h6>\n<ul>\n<li>限制：不能使用 <code>ORDER BY</code></li>\n<li>不相关子查询：是由里向外逐层处理。即<strong>每个子查询在上一级查询处理之前求解</strong>，子查询的结果用于建立其父查询的查找条件。</li>\n<li>相关子查询\n<ul>\n<li>首先取外层查询中表的第一个元组，根据它与内层查询相关的属性值处理内层查询，若 <code>WHERE</code>  子句返回值为真，则取此元组放入结果表；</li>\n<li>然后再取外层表的下一个元组；</li>\n<li>重复这一过程，直至外层表全部检查完为止。</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"in\"><a class=\"anchor\" href=\"#in\">#</a> IN</h6>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h6 id=\"带有比较运算符的子查询\"><a class=\"anchor\" href=\"#带有比较运算符的子查询\">#</a> 带有比较运算符的子查询</h6>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>比较运算符<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>当能确切知道内层查询返回单值时，可用比较运算符（&gt;，&lt;，=，&gt;=，&lt;=，!= 或 &lt; &gt;）。</li>\n<li>与 ANY 或 ALL 谓词配合使用</li>\n</ul>\n<h6 id=\"带有exists的子查询\"><a class=\"anchor\" href=\"#带有exists的子查询\">#</a> 带有 EXISTS 的子查询</h6>\n<ul>\n<li>\n<p>EXISTS 谓词：判断子查询是否返回结果，返回结果为真，否则为假。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>NOT EXISTS：判断子查询是否返回结果，返回结果为假，否则为真。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>用 EXISTS/NOT EXISTS 实现全称量词</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token keyword\">AS</span> T1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token keyword\">AS</span> T2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token keyword\">AS</span> T3</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">WHERE</span> T1<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">=</span> T2<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">AND</span> T2<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">=</span> T3<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"insert\"><a class=\"anchor\" href=\"#insert\">#</a> INSERT</h4>\n<h5 id=\"插入单行\"><a class=\"anchor\" href=\"#插入单行\">#</a> 插入单行</h5>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>值<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>值<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"插入子查询\"><a class=\"anchor\" href=\"#插入子查询\">#</a> 插入子查询</h5>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>子查询<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>SELECT 子句目标列必须与 INTO 子句匹配\n<ul>\n<li>值的个数</li>\n<li>值的类型</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"update\"><a class=\"anchor\" href=\"#update\">#</a> UPDATE</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SET</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>值<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>值<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"delete\"><a class=\"anchor\" href=\"#delete\">#</a> DELETE</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DELETE</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"视图\"><a class=\"anchor\" href=\"#视图\">#</a> 视图</h3>\n<h4 id=\"创建视图\"><a class=\"anchor\" href=\"#创建视图\">#</a> 创建视图</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">AS</span> <span class=\"token operator\">&lt;</span>子查询<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> <span class=\"token keyword\">CHECK</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><code>WITH CHECK OPTION</code> ：保证视图中的数据满足视图的定义</li>\n</ul>\n<h4 id=\"查询视图\"><a class=\"anchor\" href=\"#查询视图\">#</a> 查询视图</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"更新视图\"><a class=\"anchor\" href=\"#更新视图\">#</a> 更新视图</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SET</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>值<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>值<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"删除视图\"><a class=\"anchor\" href=\"#删除视图\">#</a> 删除视图</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"数据控制语言dcl\"><a class=\"anchor\" href=\"#数据控制语言dcl\">#</a> 数据控制语言（DCL）</h3>\n<h4 id=\"授权grant\"><a class=\"anchor\" href=\"#授权grant\">#</a> 授权 GRANT</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>对象类型<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>对象名<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">TO</span> <span class=\"token operator\">&lt;</span>用户或角色<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>用户或角色<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> <span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><code>&lt;权限&gt;</code> ： <code>SELECT</code> 、 <code>INSERT</code> 、 <code>UPDATE</code> 、 <code>DELETE</code> 、 <code>ALL</code></li>\n<li><code>&lt;对象类型&gt;</code> ： <code>TABLE</code> 、 <code>VIEW</code> 、 <code>DATABASE</code></li>\n<li><code>WITH GRANT OPTION</code> ：允许被授权的用户或角色将权限授予其他用户或角色</li>\n</ul>\n<h4 id=\"撤销revoke\"><a class=\"anchor\" href=\"#撤销revoke\">#</a> 撤销 REVOKE</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">REVOKE</span> <span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>权限<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>对象类型<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>对象名<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>用户或角色<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>用户或角色<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"关系规范化理论\"><a class=\"anchor\" href=\"#关系规范化理论\">#</a> 关系规范化理论</h2>\n<h3 id=\"函数依赖\"><a class=\"anchor\" href=\"#函数依赖\">#</a> 函数依赖</h3>\n<h4 id=\"函数依赖的定义\"><a class=\"anchor\" href=\"#函数依赖的定义\">#</a> 函数依赖的定义</h4>\n<p>设 R (U) 是属性集 U 上的关系模式。X，Y 是 U 的子集。若对于 R (U) 的任意一个可能的关系 r，r 中不可能存在两个元组在 X 上的属性值相等，而在 Y 上的属性值不等，则称 X 函数确定 Y 或 Y 函数依赖于 X，记作 X→Y。</p>\n<ul>\n<li>决定因素：X</li>\n<li>平凡函数依赖：X→Y，Y 是 X 的子集，称为平凡函数依赖</li>\n<li>非平凡函数依赖：X→Y，Y 不是 X 的子集，称为非平凡函数依赖</li>\n<li>互相依赖：X→Y，Y→X，称为互相依赖，记作 X↔Y</li>\n</ul>\n<h4 id=\"完全函数依赖\"><a class=\"anchor\" href=\"#完全函数依赖\">#</a> 完全函数依赖</h4>\n<p>在关系模式 R (U) 中，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，并且对于 X 的任何一个真子集 X'，都有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>↛</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X&#x27; \\nrightarrow Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">↛</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，则称 Y 对 X 完全函数依赖，记作<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo><mover><mo><mo>→</mo></mo><mi>F</mi></mover></mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X \\overset{F}{\\rightarrow} Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1452em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1452em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">→</span></span></span><span style=\"top:-3.5669em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>。</p>\n<h4 id=\"部分函数依赖\"><a class=\"anchor\" href=\"#部分函数依赖\">#</a> 部分函数依赖</h4>\n<p>在关系模式 R (U) 中，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，并且存在 X 的真子集 X'，使得<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X&#x27;→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，则称 Y 对 X 部分函数依赖，记作<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo><mover><mo><mo>→</mo></mo><mi>P</mi></mover></mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X \\overset{P}{\\rightarrow} Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1452em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1452em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">→</span></span></span><span style=\"top:-3.5669em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>。</p>\n<h4 id=\"传递函数依赖\"><a class=\"anchor\" href=\"#传递函数依赖\">#</a> 传递函数依赖</h4>\n<p>在关系模式 R (U) 中，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>⊊</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Y \\subsetneq X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⊊</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>），<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>↛</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Y \\nrightarrow X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">↛</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>，存在 Z，使得<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">Y→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>，则称 Y 对 X 传递函数依赖，记作<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo><mover><mo><mo>→</mo></mo><mi>T</mi></mover></mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X \\overset{T}{\\rightarrow} Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1452em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1452em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">→</span></span></span><span style=\"top:-3.5669em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>。</p>\n<h4 id=\"码的函数依赖\"><a class=\"anchor\" href=\"#码的函数依赖\">#</a> 码的函数依赖</h4>\n<p>设 K 为 R (U,F) 中的属性或属性组，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo><mover><mo><mo>→</mo></mo><mi>F</mi></mover></mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">K \\overset{F}{\\rightarrow} U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1452em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1452em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">→</span></span></span><span style=\"top:-3.5669em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>，则称 K 为 R (U,F) 的候选码。</p>\n<ul>\n<li>主码：若一个关系中有多个候选码，则选其中的一个为主码。</li>\n<li>主属性：如果一个属性包含在任何一个候选码中，则称该属性为主属性。</li>\n<li>非主属性：不包含在任何一个候选码中的属性称为非主属性。</li>\n<li>全码：整个属性组是码</li>\n<li>外码：关系模式 R 中属性或属性组 X 并非 R 的码，但是 X 是另一个关系模式 S 的码，则称 X 为 R 的外码。</li>\n<li>超码：一个包含关键字的属性集合也能用函数决定（不是完全函数依赖，而是部分函数确定）属性全集，这种包含主码的属性集合称为超码。</li>\n</ul>\n<h3 id=\"范式\"><a class=\"anchor\" href=\"#范式\">#</a> 范式</h3>\n<h4 id=\"第一范式\"><a class=\"anchor\" href=\"#第一范式\">#</a> 第一范式</h4>\n<p>关系模式 R (U) 中的每一个属性都是<strong>不可再分</strong>的基本数据项。</p>\n<ul>\n<li>缺点：数据冗余，数据更新异常</li>\n</ul>\n<h4 id=\"第二范式\"><a class=\"anchor\" href=\"#第二范式\">#</a> 第二范式</h4>\n<p>关系模式 R (U) 是第一范式的基础上，<strong>非主属性完全函数依赖于</strong>任何一个候选码。</p>\n<h4 id=\"第三范式\"><a class=\"anchor\" href=\"#第三范式\">#</a> 第三范式</h4>\n<p>关系模式 R (U) 是第二范式的基础上，<strong>非主属性不传递函数依赖于</strong>任何一个候选码。</p>\n<h4 id=\"bcnf范式\"><a class=\"anchor\" href=\"#bcnf范式\">#</a> BCNF 范式</h4>\n<p>关系模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mtext>，</mtext><mi>F</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">R(U，F) ∈1NF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">NF</span></span></span></span>。若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>⊈</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Y⊈ X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0966em;vertical-align:-0.3027em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⊈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 必含有码，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mtext>，</mtext><mi>F</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">R(U，F) ∈BCNF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">BCNF</span></span></span></span>。即：关系模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mtext>，</mtext><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U，F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span> 中，若每一个决定因素都包含码，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mtext>，</mtext><mi>F</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">R(U，F) ∈BCNF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">BCNF</span></span></span></span>。</p>\n<ul>\n<li>一个满足 BCNF 的关系模式有:\n<ul>\n<li>所有非主属性对每一个码都是完全函数依赖。</li>\n<li>所有主属性对每一个不包含它的码也是完全函数依赖。</li>\n<li>没有任何属性完全函数依赖于非码的任何一组属性。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>如果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">R∈3NF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">NF</span></span></span></span>，且 R 只有一个候选码，则 R 必属于 BCNF</p>\n</blockquote>\n<h3 id=\"数据依赖的公理系统\"><a class=\"anchor\" href=\"#数据依赖的公理系统\">#</a> 数据依赖的公理系统</h3>\n<h4 id=\"函数依赖集的闭包\"><a class=\"anchor\" href=\"#函数依赖集的闭包\">#</a> 函数依赖集的闭包</h4>\n<h5 id=\"函数依赖集f的逻辑蕴涵\"><a class=\"anchor\" href=\"#函数依赖集f的逻辑蕴涵\">#</a> 函数依赖集 F 的逻辑蕴涵</h5>\n<p>对于 R (U,F)，如果 X→Y 不在 F 中，但是对于其任何一个关系 r，X→Y 都成立，则称 F 逻辑蕴含 X→Y。或者说： X→Y 可以由 F 导出</p>\n<h5 id=\"函数依赖集f的闭包\"><a class=\"anchor\" href=\"#函数依赖集f的闭包\">#</a> 函数依赖集 F 的闭包</h5>\n<p>定义：在关系模式 R (U，F) 中为 F 及 F 所逻辑蕴含的函数依赖的全体叫做 F 的闭包。记为 F<sup>+</sup>。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>F</mi><mo>+</mo></msup><mo>=</mo><mo stretchy=\"false\">{</mo><mi>X</mi><mo>→</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>F</mi><mtext>及能由</mtext><mi>F</mi><mtext>根据</mtext><mi>A</mi><mi>r</mi><mi>m</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>n</mi><mi>g</mi><mtext>公理导出</mtext><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">F^+=\\{X→Y|F及能由F根据Armstrong公理导出\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord cjk_fallback\">及能由</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord cjk_fallback\">根据</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord cjk_fallback\">公理导出</span><span class=\"mclose\">}</span></span></span></span></p>\n<h4 id=\"armstrong公理\"><a class=\"anchor\" href=\"#armstrong公理\">#</a> Armstrong 公理</h4>\n<p>对于关系模式 R (U,F)，有</p>\n<ol>\n<li>自反律：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>⊂</mo><mi>X</mi><mo>⊂</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">Y \\subset X \\subset U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 所蕴含</li>\n<li>增广律：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 所蕴含，且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><mo>⊂</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">Z \\subset U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mi>Z</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">XZ→YZ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">XZ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 所蕴含</li>\n<li>传递律：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">Y→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 所蕴含，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 所蕴含</li>\n<li>合并律：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→YZ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 所蕴含</li>\n<li>伪传递律：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">WY→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">WY</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">WX→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 所蕴含</li>\n<li>分解律：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 及<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><mo>⊆</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Z \\subseteq Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 所蕴含</li>\n</ol>\n<h4 id=\"属性集闭包与f逻辑蕴涵的充要条件\"><a class=\"anchor\" href=\"#属性集闭包与f逻辑蕴涵的充要条件\">#</a> 属性集闭包与 F 逻辑蕴涵的充要条件</h4>\n<h5 id=\"x关于函数依赖集f的闭包\"><a class=\"anchor\" href=\"#x关于函数依赖集f的闭包\">#</a> X 关于函数依赖集 F 的闭包</h5>\n<p>设 F 为属性集 U 上的一组函数依赖，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">X \\subseteq U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>X</mi><mi>F</mi><mo>+</mo></msubsup><mo>=</mo><mo stretchy=\"false\">{</mo><mi>A</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo>→</mo><mi>A</mi><mtext>能由</mtext><mi>F</mi><mtext>根据</mtext><mi>A</mi><mi>r</mi><mi>m</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>n</mi><mi>g</mi><mtext>公理导出</mtext><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">X_F^+=\\{A|X→A能由F根据Armstrong公理导出\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.105em;vertical-align:-0.2935em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8115em;\"><span style=\"top:-2.4065em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span><span style=\"top:-3.1031em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord cjk_fallback\">能由</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord cjk_fallback\">根据</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord cjk_fallback\">公理导出</span><span class=\"mclose\">}</span></span></span></span>，X<sub>F</sub><sup>+</sup> 称为属性集 X 关于函数依赖集 F 的闭包</p>\n<h5 id=\"f逻辑蕴涵的充要条件\"><a class=\"anchor\" href=\"#f逻辑蕴涵的充要条件\">#</a> F 逻辑蕴涵的充要条件</h5>\n<p>设 F 为属性集 U 上的一组函数依赖，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">X,Y\\subseteq U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 能由 F 根据 Armstrong 公理导出的充分必要条件是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>⊆</mo><msubsup><mi>X</mi><mi>F</mi><mo>+</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">Y\\subseteq X_F^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.105em;vertical-align:-0.2935em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8115em;\"><span style=\"top:-2.4065em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span><span style=\"top:-3.1031em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h5 id=\"求属性集闭包xf的算法\"><a class=\"anchor\" href=\"#求属性集闭包xf的算法\">#</a> 求属性集闭包 X<sub>F</sub><sup>+</sup> 的算法</h5>\n<p>算法：输入：X，F，输出：X<sub>F</sub><sup>+</sup></p>\n<ol>\n<li>令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X^{(0)}=X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">0</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">i=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></li>\n<li>求 B, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>A</mi><mi mathvariant=\"normal\">∣</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>V</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>W</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>V</mi><mo>→</mo><mi>W</mi><mo>∈</mo><mi>F</mi><mo>∧</mo><mi>V</mi><mo>⊆</mo><msup><mi>X</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>∧</mo><mi>A</mi><mo>∈</mo><mi>W</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">B=\\{A|(\\exist V)(\\exist W)(V→W∈F \\wedge V \\subseteq X^{(i)} \\wedge A∈W)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">∣</span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)}</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mi>B</mi><mo>∪</mo><msup><mi>X</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">X^{(i+1)}=B∪X^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></li>\n<li>判断<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><msup><mi>X</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">X^{(i+1)}= X^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span> 吗？</li>\n<li>若相等或<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">X^{(i)}=U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> 则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">X^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span> 就是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>X</mi><mi>F</mi><mo>+</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">X_F^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.105em;vertical-align:-0.2935em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8115em;\"><span style=\"top:-2.4065em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span><span style=\"top:-3.1031em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span></span></span></span>，算法终止。</li>\n<li>若否，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>=</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i=i+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7429em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，返回第 2 步。</li>\n</ol>\n<p>对于属性闭包算法的终止条件，下列四种方法是等价的：</p>\n<ol>\n<li>X<sup>(i+1)</sup> = X<sup>(i)</sup></li>\n<li>当发现 X<sup>(i)</sup> 包含了全部属性时；</li>\n<li>在 F 中的函数依赖的右部属性中，再也找不到 X<sup>(i)</sup> 中未出现过的属性。</li>\n<li>在 F 中未用过的函数依赖的左部属性中已没有 X<sup>(i)</sup> 的子集。</li>\n</ol>\n<h5 id=\"码值理论\"><a class=\"anchor\" href=\"#码值理论\">#</a> 码值理论</h5>\n<p>对于给定的关系 R，和函数依赖集 F，可将其属性分为 4 类：</p>\n<ul>\n<li>L 类：仅出现在左部的属性</li>\n<li>R 类：仅出现在右部的属性</li>\n<li>LR 类：既出现在左部又出现在右部的属性</li>\n<li>N 类：既不出现在左部也不出现在右部的属性</li>\n</ul>\n<h5 id=\"求候选码的相关定理\"><a class=\"anchor\" href=\"#求候选码的相关定理\">#</a> 求候选码的相关定理</h5>\n<ul>\n<li>对于给定的关系模式 R 及其函数依赖集 F，若 X（X∈R）是<strong> L 类</strong>属性，则 X<strong> 一定</strong>是 R 的候选码的成员。</li>\n<li>对于给定的关系模式 R 及其函数依赖集 F，若 X（X∈R）是<strong> N 类</strong>属性，则 X<strong> 一定</strong>是 R 的候选码的成员。</li>\n<li>对于给定的关系模式 R 及其函数依赖集 F，若 X（X∈R）是<strong> R 类</strong>属性，则 X<strong> 必不在</strong>任何候选码中。</li>\n<li>对于给定的关系模式 R 及其函数依赖集 F，若 X（X∈R）是<strong> LR 类</strong>属性，则 X<strong> 可能</strong>是 R 的候选码的成员。</li>\n</ul>\n<h5 id=\"多属性依赖集候选关键字求解算法\"><a class=\"anchor\" href=\"#多属性依赖集候选关键字求解算法\">#</a> 多属性依赖集候选关键字求解算法</h5>\n<ol>\n<li>将 R 的所有属性分为 L、R、N 和 LR 两类，令 X 代表 L 和 N 类，Y 代表 LR 类</li>\n<li>求 X<sup>+</sup>。若 X<sup>+</sup> 包含了 R 的<strong>全部属性</strong>，则 X 为 R 的<strong>惟一候选关键字</strong>，转 5；否则转 3</li>\n<li>在 Y 中取一属性 A，求 (XA)<sup>+</sup> 。若它包含 R 的全部属性，则转 4；否则，<strong>调换一属性</strong>反复进行这一过程，直到试完所有 Y 中的属性。</li>\n<li>如果已找出所有候选关键字，则转 5；否则在 Y 中依次取两个、三个、……，求它们的属性闭包，直到其闭包包含 R 的全部属性</li>\n<li>停止，输出结果</li>\n</ol>\n<h4 id=\"函数依赖的推理规则\"><a class=\"anchor\" href=\"#函数依赖的推理规则\">#</a> 函数依赖的推理规则</h4>\n<p>Armstrong 公理系统是有效的（正确性）、完备的。</p>\n<ul>\n<li>正确性：指公理 1、2、3 是正确的。</li>\n<li>有效性：指由 F 出发根据 Armstrong 公理推导出来的每一个函数依赖一定在 F<sup>+</sup>。</li>\n<li>完备性：指 F<sup>+</sup> 中的每一个函数依赖，必定可以由 F 出发根据 Armstrong 公理推导出来。</li>\n</ul>\n<h4 id=\"函数依赖集的等价和最小函数依赖集\"><a class=\"anchor\" href=\"#函数依赖集的等价和最小函数依赖集\">#</a> 函数依赖集的等价和最小函数依赖集</h4>\n<ul>\n<li>等价定义：如果 G<sup>+</sup>=F<sup>+</sup>，则称 G 和 F 是等价的，记为 G=F。</li>\n<li>F<sup>+</sup>=G<sup>+</sup> 的充要条件是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>⊆</mo><msup><mi>G</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">F \\subseteq G^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span> 且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>⊆</mo><msup><mi>F</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">G \\subseteq F^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span>。</li>\n<li>最小依赖集：如果函数依赖集 F 满足下列条件，则称 F 为一个极小函数依赖集，也称最小依赖集或最小覆盖。\n<ul>\n<li>F 中任一函数依赖的<strong>右部仅含有一个属性</strong>。</li>\n<li>F 中不存在这样的函数依赖 X→A，使得 F 与 F-{X →A} 等价。[<strong>不存在冗余 FD</strong>]</li>\n<li>F 中不存在这样的函数依赖 X→A，X 有真子集 Z 使得 F-{X →A}∪{Z→A} 与 F 等价。[<strong>决定因素不存在冗余</strong>]</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"最小函数依赖集的求解算法\"><a class=\"anchor\" href=\"#最小函数依赖集的求解算法\">#</a> 最小函数依赖集的求解算法</h5>\n<ol>\n<li>将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><msub><mi>A</mi><mn>1</mn></msub><msub><mi>A</mi><mn>2</mn></msub><mo>…</mo><msub><mi>A</mi><mi>k</mi></msub><mo stretchy=\"false\">(</mo><mi>k</mi><mo>&gt;</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X→A_1A_2…A_k(k&gt;2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span> 转换为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><msub><mi>A</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X→A_i(i=1,2,…,k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>。[<strong>将右部属性分解为单个属性</strong>]</li>\n<li>逐个检查函数依赖<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">X→A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>，令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>=</mo><mi>F</mi><mo>−</mo><mo stretchy=\"false\">{</mo><mi>X</mi><mo>→</mo><mi>A</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">G=F-\\{X→A\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">}</span></span></span></span>，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∈</mo><mo stretchy=\"false\">(</mo><mi>X</mi><msubsup><mo stretchy=\"false\">)</mo><mi>G</mi><mo>+</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">A∈(X)_G^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.105em;vertical-align:-0.2935em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8115em;\"><span style=\"top:-2.4065em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span><span style=\"top:-3.1031em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span></span></span></span>，则从 F 中去掉<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">X→A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>。[<strong>逐个检查 F 中的每一项，看是否<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>−</mo><mo stretchy=\"false\">{</mo><mi>X</mi><mo>→</mo><mi>A</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">F-\\{X→A\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">}</span></span></span></span> 与 F 等价</strong>]</li>\n<li>逐个检查函数依赖<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">X→A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><msub><mi>B</mi><mn>1</mn></msub><msub><mi>B</mi><mn>2</mn></msub><mo>…</mo><msub><mi>B</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">X=B_1B_2…B_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，逐个考查<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">B_i(i=1,2,…,m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span>，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∈</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo>−</mo><msub><mi>B</mi><mi>i</mi></msub><msubsup><mo stretchy=\"false\">)</mo><mi>F</mi><mo>+</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">A∈(X-B_i)_F^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.105em;vertical-align:-0.2935em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8115em;\"><span style=\"top:-2.4065em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span><span style=\"top:-3.1031em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2935em;\"><span></span></span></span></span></span></span></span></span></span>，则以<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>−</mo><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X-B_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 取代 X。[<strong>判每个函数依赖左部是否有冗余属性</strong>]</li>\n</ol>\n<h3 id=\"关系模式的分解算法\"><a class=\"anchor\" href=\"#关系模式的分解算法\">#</a> 关系模式的分解算法</h3>\n<h4 id=\"模式分解的定义\"><a class=\"anchor\" href=\"#模式分解的定义\">#</a> 模式分解的定义</h4>\n<p>关系模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U,F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span> 的一个分解<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>R</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>R</mi><mi>k</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">ρ=\\{R_1(U_1,F_1),…,R_k(U_k, F_k)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)}</span></span></span></span> 是若干个关系模式的一个集合，其中，</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo>=</mo><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U=\\bigcup\\limits_{i=1}^n U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3291em;vertical-align:-0.9777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3514em;\"><span style=\"top:-2.1223em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">⋃</span></span></span><span style=\"top:-3.95em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是 F 在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 上的投影。则称 ρ 是 R (U) 的一个分解。</li>\n<li>对每个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">(</mo><mi>𝑖</mi><mo>≤</mo><mi>𝑗</mi><mo>≤</mo><mi>𝑛</mi><mo separator=\"true\">,</mo><mn>1</mn><mo>≤</mo><mi>𝑗</mi><mo>≤</mo><mi>𝑛</mi><mtext>且</mtext><mi>𝑖</mi><mo mathvariant=\"normal\">≠</mo><mi>𝑗</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">i,j(𝑖≤𝑗≤𝑛,1≤𝑗≤𝑛且𝑖≠𝑗)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord cjk_fallback\">且</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span> 有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mo mathvariant=\"normal\">≠</mo><msub><mi>U</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i≠U_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F_i(i=1,2,…,n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> 是 F 在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 上的投影，函数依赖集合<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>X</mi><mo>→</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo>→</mo><mi>Y</mi><mo>∈</mo><msup><mi>F</mi><mo>+</mo></msup><mo>∧</mo><mi>X</mi><mi>Y</mi><mo>⊆</mo><msub><mi>U</mi><mi>i</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{X\\rightarrow Y | X\\rightarrow Y\\in F^+ \\wedge XY \\subseteq U_i\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> 的一个覆盖 F<sub>i</sub> 叫做在属性 U<sub>i</sub> 上的投影。</li>\n</ol>\n<h5 id=\"求fi的算法\"><a class=\"anchor\" href=\"#求fi的算法\">#</a> 求 F<sub>i</sub> 的算法</h5>\n<p>定义：设<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>R</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mn>1</mn></msub><mo>&gt;</mo><mo separator=\"true\">,</mo><msub><mi>R</mi><mn>2</mn></msub><mo>&lt;</mo><msub><mi>U</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mn>2</mn></msub><mo>&gt;</mo><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>R</mi><mi>k</mi></msub><mo>&lt;</mo><msub><mi>U</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mi>k</mi></msub><mo>&gt;</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">ρ=\\{ R_1&lt;U_1,F_1&gt;,R_2&lt;U_2,F_2&gt;,…,R_k&lt;U_k,F_k&gt;\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">}</span></span></span></span> 是关系模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">R&lt;U, F&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span></span></span></span> 的一个分解，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">U= \\{A_1, …, A_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>F</mi><msub><mi>D</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>F</mi><msub><mi>D</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>F</mi><msub><mi>D</mi><mi>m</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">F= \\{ FD_1, FD_2, …, FD_m\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> (假设 F 为最小函数依赖集) 。</p>\n<ol>\n<li>逐一考查 F 中的每一函数依赖<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，若 X,Y 中的每一属性都在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">R_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 中，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mo>∈</mo><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X→Y∈F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，转 (2)；</li>\n<li>依次取<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">R_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 中的单一属性 B，求<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>B</mi><mi>F</mi><mtext>＋</mtext></msubsup></mrow><annotation encoding=\"application/x-tex\">B_F^＋</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1167em;vertical-align:-0.2753em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-2.4247em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">＋</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2753em;\"><span></span></span></span></span></span></span></span></span></span>，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>j</mi></msub><mo>⊆</mo><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_j ⊆ U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>j</mi></msub><mo>⊆</mo><msubsup><mi>B</mi><mi>F</mi><mtext>＋</mtext></msubsup></mrow><annotation encoding=\"application/x-tex\">A_j ⊆ B_F^＋</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1167em;vertical-align:-0.2753em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-2.4247em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">＋</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2753em;\"><span></span></span></span></span></span></span></span></span></span>且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>→</mo><msub><mi>A</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">B→A_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 不能由当前求得的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 逻辑地推出，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>→</mo><msub><mi>A</mi><mi>j</mi></msub><mo>∈</mo><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">B→A_j ∈F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mtext>＝</mtext><msub><mi>U</mi><mi>i</mi></msub><mtext>－</mtext><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">U_i＝ U_i－B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">＝</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">－</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>，转 (3)；</li>\n<li>依次任取<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 中的多个属性构成属性组 X，若 X 不是当前求得的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 中的函数依赖左部的子集，求<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>X</mi><mi>F</mi><mtext>＋</mtext></msubsup></mrow><annotation encoding=\"application/x-tex\">X_F^＋</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1167em;vertical-align:-0.2753em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-2.4247em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">＋</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2753em;\"><span></span></span></span></span></span></span></span></span></span> ，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>j</mi></msub><mo>⊆</mo><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_j⊆U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>j</mi></msub><mo>⊆</mo><msubsup><mi>X</mi><mi>F</mi><mtext>＋</mtext></msubsup></mrow><annotation encoding=\"application/x-tex\">A_j⊆X_F^＋</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1167em;vertical-align:-0.2753em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-2.4247em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">＋</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2753em;\"><span></span></span></span></span></span></span></span></span></span>且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><msub><mi>A</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">X→A_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 不能由当前求得的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 逻辑地推出，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><msub><mi>A</mi><mi>j</mi></msub><mo>∈</mo><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X→A_j ∈F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，转 (4)；</li>\n<li>重复 (3)，直到取尽<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 中的所有属性或所有相同属性个数的 X 均是当前求得的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的某一函数依赖的左部的子集，算法结束。</li>\n</ol>\n<blockquote>\n<p>注：若 F 为最小函数依赖集，此算法求得的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 亦为最小函数依赖集。</p>\n</blockquote>\n<h4 id=\"分解的无损连接性判定\"><a class=\"anchor\" href=\"#分解的无损连接性判定\">#</a> 分解的无损连接性判定</h4>\n<h5 id=\"无损连接性的定义\"><a class=\"anchor\" href=\"#无损连接性的定义\">#</a> 无损连接性的定义</h5>\n<p>如果一个关系模式分解后，可以通过自然连接恢复原模式的信息，这一特性称为分解的无损连接性。</p>\n<h5 id=\"无损连接性的判定\"><a class=\"anchor\" href=\"#无损连接性的判定\">#</a> 无损连接性的判定</h5>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>R</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>R</mi><mi>k</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">ρ=\\{R_1(U_1,F_1),…,R_k(U_k,F_k)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)}</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U,F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span> 的一个分解，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">U=\\{A_1,…,A_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>F</mi><msub><mi>D</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>F</mi><msub><mi>D</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>F</mi><msub><mi>D</mi><mi>p</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">F=\\{FD_1,FD_2,…,FD_p\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span>。</p>\n<ol>\n<li>构造一个 n 列 k 行的二维表 T，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>a</mi><mi>j</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>A</mi><mi>j</mi></msub><mo>∈</mo><msub><mi>R</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>b</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>A</mi><mi>j</mi></msub><mo mathvariant=\"normal\">∉</mo><msub><mi>R</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">T_{ij}=\\begin{cases} a_j &amp; A_j\\in R_i \\\\ b_{ij} &amp; A_j\\notin R_i \\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord\"><span class=\"mrel\">∈</span></span><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"llap\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.0556em;\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li>根据 F 中函数依赖修改表 T 的内容，<strong>修改规则</strong>：逐个考察 F 中的每个函数依赖<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，在属性 X 所在的那些列上找出具有相同符号的行，在这些行上使对应于 Y 的各属性列位置上的符号改为相同，如果其中有一个符号为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>，则把其它符号也改为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>，否则改为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>b</mi><mrow><mi>m</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">b_{mj}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">mj</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>，其中 m 是这些行的最小行号。直至在表中发现一行已变成<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><msub><mi>a</mi><mn>2</mn></msub><mo>…</mo><msub><mi>a</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_1a_2…a_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，或表不能再进行修改为止。</li>\n<li>如果发现表中有一行已变成<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><msub><mi>a</mi><mn>2</mn></msub><mo>…</mo><msub><mi>a</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_1a_2…a_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则表示该分解具有无损连接性，否则分解不是无损连接的。</li>\n</ol>\n<blockquote>\n<p>换的原则：</p>\n<ol>\n<li>有 a，有 b，向 a 看齐。</li>\n<li>只有 b，但下标不同，则<strong>大的向小的看齐</strong></li>\n</ol>\n</blockquote>\n<h5 id=\"独立投影法则\"><a class=\"anchor\" href=\"#独立投影法则\">#</a> 独立投影法则</h5>\n<p>如果 R 只被分解为<strong>两个关系模式</strong>，则可用更简单的方法进行检验：</p>\n<p>定理：设<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>R</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msub><mi>R</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">ρ=\\{R_1(U_1),R_2(U_2)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)}</span></span></span></span> 是 R (U) 的一个分解，则 ρ 为无损分解的<strong>充分必要条件</strong>为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>U</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo>−</mo><msub><mi>U</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>∈</mo><msup><mi>F</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">(U_1∩U_2)\\rightarrow (U_1-U_2)∈F^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span> 或<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>U</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>2</mn></msub><mo>−</mo><msub><mi>U</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>∈</mo><msup><mi>F</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">(U_1∩U_2)\\rightarrow (U_2-U_1) ∈F^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span></p>\n<blockquote>\n<p>结论：如果两个关系模式间的公共属性集至少包含其中一个关系模式的关键字，则此分解必定具有无损连接性（或连接不失真性）</p>\n</blockquote>\n<h4 id=\"分解的保持函数依赖性判定\"><a class=\"anchor\" href=\"#分解的保持函数依赖性判定\">#</a> 分解的保持函数依赖性判定</h4>\n<p>若关系<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U,F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span> 的一个分解<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>R</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>R</mi><mi>k</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">ρ=\\{R_1(U_1,F_1),…,R_k(U_k,F_k)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)}</span></span></span></span> 的所有函数依赖的并集（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></msubsup><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\bigcup\\limits_{i=1}^kF_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.5138em;vertical-align:-0.9777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5361em;\"><span style=\"top:-2.1223em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">⋃</span></span></span><span style=\"top:-3.95em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>）逻辑蕴涵了 F 中所有函数依赖，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></msubsup><msub><mi>F</mi><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mo>+</mo></msup><mo>=</mo><msup><mi>F</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">(\\bigcup\\limits_{i=1}^kF_i)^+=F^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.5138em;vertical-align:-0.9777em;\"></span><span class=\"mopen\">(</span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5361em;\"><span style=\"top:-2.1223em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">⋃</span></span></span><span style=\"top:-3.95em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span>，则称分解 ρ 具有函数依赖保持性。</p>\n<h4 id=\"关系模式的分解\"><a class=\"anchor\" href=\"#关系模式的分解\">#</a> 关系模式的分解</h4>\n<h5 id=\"分解算法1转换为3nf的保持函数依赖的分解\"><a class=\"anchor\" href=\"#分解算法1转换为3nf的保持函数依赖的分解\">#</a> 分解算法 1：转换为 3NF 的保持函数依赖的分解</h5>\n<p>输入：关系模式 R 和函数依赖集 F<br />\n 输出：结果为 3NF 的一个依赖保持分解</p>\n<p>步骤：</p>\n<ol>\n<li>对 R 中的函数依赖集 F 进行<strong>极小化处理</strong>（处理后的函数依赖集仍记为 F）</li>\n<li>找出<strong>不在 F 中出现的属性</strong>，把这样的属性构成一个关系模式，把这些属性从 U 中去掉，剩余的属性仍记为 U</li>\n<li>若有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>A</mi><mo>∈</mo><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">X\\rightarrow A∈F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>，且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mi>A</mi><mo>=</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">XA=U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>R</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">ρ=\\{R\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">}</span></span></span></span>，算法中止</li>\n<li>否则，对于 F 中的每一个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">X\\rightarrow A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>，构成一个关系模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">XA</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathnormal\">A</span></span></span></span>。（如果有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>X</mi><mo>→</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>X</mi><mo>→</mo><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">X\\rightarrow A_1,X\\rightarrow A_2,…,X\\rightarrow A_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>（左部相同），则可以用模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><msub><mi>A</mi><mn>1</mn></msub><msub><mi>A</mi><mn>2</mn></msub><mo>…</mo><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">XA_1A_2…A_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 代替 n 个模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>X</mi><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>X</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">XA_1,XA_2,…,XA_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>;</li>\n<li>算法结束</li>\n</ol>\n<h5 id=\"分解算法2结果为3nf且具有依赖保持和连接不失真的分解\"><a class=\"anchor\" href=\"#分解算法2结果为3nf且具有依赖保持和连接不失真的分解\">#</a> 分解算法 2：结果为 3NF，且具有依赖保持和连接不失真的分解</h5>\n<ol>\n<li>设<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U,F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span> 的码。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U,F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span> 已由前面的算法 1 分解为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>R</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msub><mi>R</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>R</mi><mi>k</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">ρ=\\{R_1(U_1,F_1),R_2(U_2,F_2),…,R_k(U_k,F_k)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)}</span></span></span></span>, 令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>τ</mi><mo>=</mo><mi>ρ</mi><mo>∪</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">τ= ρ∪X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>。</li>\n<li>若有某个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⊆</mo><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X\\subseteq U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 从<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">τ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span></span></span></span> 中去掉</li>\n<li>若有某个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，使得<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⊆</mo><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X \\subseteq U_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">τ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span></span></span></span> 就是所求的分解</li>\n</ol>\n<h2 id=\"数据库事务\"><a class=\"anchor\" href=\"#数据库事务\">#</a> 数据库事务</h2>\n<h3 id=\"关系数据库的事务定义\"><a class=\"anchor\" href=\"#关系数据库的事务定义\">#</a> 关系数据库的事务定义</h3>\n<ul>\n<li>一个事务可以是一条 SQL 语句，或者是一组 SQL 语句，甚至整个程序。</li>\n<li>在一个 SQL 程序中可以包含一个或者多个事务。</li>\n</ul>\n<h3 id=\"两种事务定义方式\"><a class=\"anchor\" href=\"#两种事务定义方式\">#</a> 两种事务定义方式</h3>\n<h4 id=\"隐性控制\"><a class=\"anchor\" href=\"#隐性控制\">#</a> 隐性控制</h4>\n<p>当程序员没有定义显性事务的时候，就由数据库管理系统按缺省的规则自动划分事务。例如，把每条单独的 SQL 语句都视为一个事务</p>\n<h4 id=\"显性控制\"><a class=\"anchor\" href=\"#显性控制\">#</a> 显性控制</h4>\n<ul>\n<li><code>BEGIN TRANSACTION</code> ：是事务开始的标记，表示开始一个事务。</li>\n<li><code>COMMIT</code> ：是事务成功结束的标记，表示提交当前事务。</li>\n<li><code>ROLLBACK</code> ：是事务失败结束的标记，表示撤销当前事务</li>\n</ul>\n<h4 id=\"事务执行的五种状态\"><a class=\"anchor\" href=\"#事务执行的五种状态\">#</a> 事务执行的五种状态</h4>\n<h5 id=\"活动状态active\"><a class=\"anchor\" href=\"#活动状态active\">#</a> 活动状态（Active）</h5>\n<p>事务正在执行，还没有执行最后一条操作语句，此时事务处于活动状态</p>\n<h5 id=\"部分提交状态partially-committed\"><a class=\"anchor\" href=\"#部分提交状态partially-committed\">#</a> 部分提交状态（Partially Committed）</h5>\n<p>当事务中最后一条操作语句被执行之后，事务处于部分提交状态。<br />\n操作的输出可能还驻留在主存中没有及时写入物理磁盘，如果发生故障，则事务对数据库的更新影响依然可能会丢失，不能说事务已经成功完成</p>\n<h5 id=\"提交状态committed\"><a class=\"anchor\" href=\"#提交状态committed\">#</a> 提交状态（Committed）</h5>\n<p>当事务执行 COMMIT 之后就处于提交状态。<br />\n此时，事务不但部分提交了，并且已经将一些必要的信息写入磁盘，确保即使此时发生故障，事务对数据库的更新也能够重建并永久保持。处于提交状态的事务，就成功结束</p>\n<h5 id=\"失败状态failed\"><a class=\"anchor\" href=\"#失败状态failed\">#</a> 失败状态（Failed）</h5>\n<p>当事务运行的过程中发生了故障，不能继续执行下去，则事务执行处于失败状态。<br />\n处于失败状态的事务，必须撤销事务对数据库所造成的任何改变，恢复到事务开始执行之前的数据库状态。</p>\n<h5 id=\"中止状态aborted\"><a class=\"anchor\" href=\"#中止状态aborted\">#</a> 中止状态（Aborted）</h5>\n<p>当事务显式或隐式执行 ROLLBACK 之后就处于中止状态。<br />\n此时，处于失败状态的事务，已经将数据库恢复到事务开始执行之前的状态，处于中止状态的事务，就已经失败结束了。</p>\n<h4 id=\"事务的acid特性\"><a class=\"anchor\" href=\"#事务的acid特性\">#</a> 事务的 ACID 特性</h4>\n<ul>\n<li>原子性（Atomicity）：事务是不可分割的工作单位</li>\n<li>一致性（Consistency）：事务提交后，数据库从一个一致性状态变到另一个一致性状态。</li>\n<li>隔离性（Isolation）：在事务完成之前，它对数据库产生的结果不能被其它事务引用。</li>\n<li>持续性（Durability）： 一旦事务执行成功 (提交)，其对数据产生的效果永久有效</li>\n</ul>\n<h3 id=\"事务恢复策略\"><a class=\"anchor\" href=\"#事务恢复策略\">#</a> 事务恢复策略</h3>\n<h4 id=\"事务故障的恢复\"><a class=\"anchor\" href=\"#事务故障的恢复\">#</a> 事务故障的恢复</h4>\n<p>恢复策略：反向扫描日志文件，将日志中更新前的数据写回到数据库中，直至事务的开始标志。</p>\n<h4 id=\"系统故障的恢复\"><a class=\"anchor\" href=\"#系统故障的恢复\">#</a> 系统故障的恢复</h4>\n<p>恢复策略：撤销故障发生时未完成的事务，重做已完成的事务。</p>\n<blockquote>\n<p>方法：</p>\n<ol>\n<li>正向扫描日志文件；找出故障发生前已经提交的事务，将该事务放入 REDO 队列；找出故障发生前未提交的事务，将其放入 UNDO 队列。</li>\n<li>对 UNDO 队列做撤销操作</li>\n<li>对 REDO 队列做重做操作</li>\n</ol>\n</blockquote>\n<h4 id=\"介质故障的恢复\"><a class=\"anchor\" href=\"#介质故障的恢复\">#</a> 介质故障的恢复</h4>\n<p>恢复策略：利用数据库副本和日志文件副本进行恢复。（需要 DBA 介入）</p>\n<h4 id=\"系统使用检查点进行恢复的步骤\"><a class=\"anchor\" href=\"#系统使用检查点进行恢复的步骤\">#</a> 系统使用检查点进行恢复的步骤</h4>\n<p>从重新开始文件中找到最后一个检查点记录在日志文件中的地址，找到最后一个检查点</p>\n<ul>\n<li>由该检查点找到检查点建立时刻所有的动态事务清单</li>\n<li>从检查点正向扫描日志文件\n<ul>\n<li>如有新开始的事务，放入 UNDO 队列</li>\n<li>如有提交的事务，将该事务从 UNDO 放入 REDO 队列</li>\n</ul>\n</li>\n<li>执行 UNDO 和 REDO 处</li>\n</ul>\n<h2 id=\"并发\"><a class=\"anchor\" href=\"#并发\">#</a> 并发</h2>\n<h3 id=\"并发操作引发的问题\"><a class=\"anchor\" href=\"#并发操作引发的问题\">#</a> 并发操作引发的问题</h3>\n<ul>\n<li>丢失修改：两个事务同时读取同一数据项，一个事务修改后，另一个事务再修改，前一个事务的修改被覆盖</li>\n<li>脏读：一个事务读取到另一个事务未提交的数据</li>\n<li>不可重复读：一个事务读取到另一个事务已提交的数据\n<ul>\n<li>读不一致</li>\n<li>删除幻影</li>\n<li>插入幻影</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"并发调度及可串行化\"><a class=\"anchor\" href=\"#并发调度及可串行化\">#</a> 并发调度及可串行化</h3>\n<h4 id=\"事务的表示方法\"><a class=\"anchor\" href=\"#事务的表示方法\">#</a> 事务的表示方法</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R_i(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> 表示事务<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的读 X 操作<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">W_i(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> 表示事务<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的写 X 操作</p>\n<h4 id=\"冲突操作\"><a class=\"anchor\" href=\"#冲突操作\">#</a> 冲突操作</h4>\n<p>定义：如果两个操作来自不同的事务，它们对同一数据单位进行操作，并且其中至少有一个是写操作，则称这两个操作是相互冲突的或冲突操作。</p>\n<h4 id=\"串行调度\"><a class=\"anchor\" href=\"#串行调度\">#</a> 串行调度</h4>\n<p>调度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 中的任意两个事务<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>，如果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的所有操作都先于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 的所有操作，或者相反，则称<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 为串行调度。</p>\n<blockquote>\n<p>串行调度事务执行的结果总是正确的，串行调度不能够充分利用系统资源</p>\n</blockquote>\n<h4 id=\"并发调度\"><a class=\"anchor\" href=\"#并发调度\">#</a> 并发调度</h4>\n<p>如果在一个调度中，各个事务交叉地执行，这个调度称为并发调度。</p>\n<h4 id=\"可串行化的调度\"><a class=\"anchor\" href=\"#可串行化的调度\">#</a> 可串行化的调度</h4>\n<p>如果一个事务集的并发调度与某一串行调度是等价的，则称该并发调度是可串行化的</p>\n<p>调整次序注意：</p>\n<ul>\n<li>不能改变冲突操作的先后次序</li>\n<li>同一事务的读写先后顺序不能改变</li>\n</ul>\n<blockquote>\n<p>可串行化是作为并发调度正确与否的判定准则！</p>\n</blockquote>\n<h4 id=\"冲突可串行化\"><a class=\"anchor\" href=\"#冲突可串行化\">#</a> 冲突可串行化</h4>\n<p>一个调度 Sc 在保证冲突操作的次序不变的情况下，通过交换两个事务不冲突操作的次序得到另一个调度 Sc’，如果 Sc’是串行的称调度 Sc 为冲突可串行化调度</p>\n<blockquote>\n<p>一个调度是冲突可串行化的，一定是可串行化调度，反之则不成立！</p>\n</blockquote>\n<h4 id=\"冲突可串行化的判定方法构造前驱图\"><a class=\"anchor\" href=\"#冲突可串行化的判定方法构造前驱图\">#</a> 冲突可串行化的判定方法：构造前驱图</h4>\n<p>设 S 是若干事务<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>T</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>T</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>T</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{T_1,T_2,…,T_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> 的一个调度，S 的前驱图<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>V</mi><mtext>，</mtext><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G(V，E)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> 是一个有向图，其构成规则如下：</p>\n<ul>\n<li>V 是由所有参加调度的事务构成的节点</li>\n<li>E 是图中的一条有向边，如果 O<sub>i</sub> 和 O<sub>j</sub> 是冲突操作，且 O<sub>i</sub> 先于 O<sub>j</sub> 执行，则在图中有一条边 T<sub>i</sub>→T<sub>j</sub>\n<ul>\n<li>事务 T<sub>i</sub> 读 x 在事务 T<sub>j</sub> 写 x 之前</li>\n<li>事务 T<sub>i</sub> 写 x 在事务 T<sub>j</sub> 读 x 之前</li>\n<li>事务 T<sub>i</sub> 写 x 在事务 T<sub>j</sub> 写 x 之前</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>若一个调度的前趋图无环，则该调度是调度可串行化的</p>\n</blockquote>\n<p>由于图中无回路，必有一个节点无入弧，将这个节点及其相连的弧删去，并把该节点存入先进先出的队列中。对剩下的图做同样的处理，直至所有节点移入队列中。按照队列中次序串行安排各事务的执行，就可以得到一个等价的串行调度（<strong>拓扑排序</strong>）</p>\n<blockquote>\n<p>冲突可串行化调度是可串行化调度的<strong>充分条件</strong>，不是必要条件！</p>\n</blockquote>\n<h3 id=\"事物的隔离性级别\"><a class=\"anchor\" href=\"#事物的隔离性级别\">#</a> 事物的隔离性级别</h3>\n<h4 id=\"sql92定义了四种隔离性级别\"><a class=\"anchor\" href=\"#sql92定义了四种隔离性级别\">#</a> SQL92 定义了四种隔离性级别</h4>\n<ul>\n<li>读未提交（Read uncommitted）：<strong>最低</strong>的隔离级别，一个事务可以读到另外一个事务未提交的数据，不允许丢失修改，接受读脏数据和不可重复读现象。</li>\n<li>读已提交（Read committed）：若事务还没提交，其他事务不能读取该事务正在修改的数据；不允许丢失修改和读脏数据，接受不可重复读现象。</li>\n<li>可重复读（Repeatable read）：事务多次读取同一数据对象的结果一致。不允许丢失修改、读脏数据和读不一致，接受幻影读现象。</li>\n<li>可串行化（Serializable）<strong>最高</strong>级别的隔离性，保证可串行化，不允许丢失修改、读脏数据、读不一致以及幻影读现象的发生</li>\n</ul>\n<h3 id=\"封锁技术\"><a class=\"anchor\" href=\"#封锁技术\">#</a> 封锁技术</h3>\n<h4 id=\"排它锁x锁写锁\"><a class=\"anchor\" href=\"#排它锁x锁写锁\">#</a> 排它锁（X 锁，写锁）</h4>\n<p>若事务 T 对数据对象 A 加上排它锁，则只允许 T 读取和修改 A，不允许其他任何事务再对 A 加锁，直到 T 释放 A 上的 X 锁。</p>\n<h4 id=\"共享锁s锁读锁\"><a class=\"anchor\" href=\"#共享锁s锁读锁\">#</a> 共享锁（S 锁，读锁）</h4>\n<p>若事务 T 对数据对象 A 加上共享锁，则事务 T 可以读 A 但不能修改 A，其他事务只能对 A 加 S 锁，而不能加 X 锁，直到 T 释放 A 上的 S 锁。</p>\n<h3 id=\"封锁协议\"><a class=\"anchor\" href=\"#封锁协议\">#</a> 封锁协议</h3>\n<table>\n<thead>\n<tr>\n<th>封锁级别</th>\n<th>加锁</th>\n<th>放锁</th>\n<th>解决问题</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>一级</td>\n<td>事务 T 在修改数据 A 之前必须先对其加 X 锁</td>\n<td>事务结束才释放 X 锁</td>\n<td>解决丢失修改问题</td>\n</tr>\n<tr>\n<td>二级</td>\n<td>一级封锁协议加上事务 T 在读取数据 A 之前必须对其加 S 锁</td>\n<td>读完后即可释放 S 锁</td>\n<td>解决丢失修改和读脏数据问题</td>\n</tr>\n<tr>\n<td>三级</td>\n<td>一级封锁协议加上事务 T 在读取数据 A 之前必须对其加 S 锁</td>\n<td>事务结束才释放 S 锁</td>\n<td>解决三种并发操作引起的问题</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"两阶段协议two-phase-locking-protocol-2pl协议\"><a class=\"anchor\" href=\"#两阶段协议two-phase-locking-protocol-2pl协议\">#</a> 两阶段协议（Two- Phase Locking Protocol ，2PL 协议）</h3>\n<p>某一事务在对数据进行读、写之前，先要申请并获得对该数据的封锁。<br />\n在释放一个封锁之后，事务不再申请和获得任何其它封锁</p>\n<blockquote>\n<p>任何一个遵从 2PL 协议的调度都是可串行化的</p>\n<ul>\n<li>说明 1：事务遵守 2PL 协议是可串行化调度的充分条件，而不是必要条件</li>\n<li>说明 2：事务遵守 2PL 协议可达到第 3 级封锁协议的要求</li>\n</ul>\n</blockquote>\n<h3 id=\"封锁导致的问题\"><a class=\"anchor\" href=\"#封锁导致的问题\">#</a> 封锁导致的问题</h3>\n<h4 id=\"死锁\"><a class=\"anchor\" href=\"#死锁\">#</a> 死锁</h4>\n<p>事务 T1 已经封锁 A，而又想申请封锁 B，而此时事务 T2 已经封锁 B，而又想申请封锁 A，这样，T1 等待 T2 释放 B，而 T2 等待 T1 释放 A，使得 T1、T2 均无法继续执行下去，这种情况称为死锁。</p>\n<blockquote>\n<p>死锁检测</p>\n<ul>\n<li>超时法： 事务的等待超过了规定的时限</li>\n<li>等待图法：检测等待图中是否有回路存在。</li>\n</ul>\n</blockquote>\n<h4 id=\"活锁\"><a class=\"anchor\" href=\"#活锁\">#</a> 活锁</h4>\n<p>事务 T1，T2 申请数据对象 A，T1 先给 A 加锁，T1 释放 A 上的锁后，事务 T3 又给 A 加锁，T2 等待，这样，A 始终被其他事务封锁，事务 T2 可能长时间得不到 A，这种情况称为活锁</p>\n<blockquote>\n<p>避免活锁的方法：采用先来先服务的服务</p>\n</blockquote>\n",
            "tags": [
                "computer science",
                "learning"
            ]
        },
        {
            "id": "https://blog.ivansnow02.xyz/ComputerSystem/",
            "url": "https://blog.ivansnow02.xyz/ComputerSystem/",
            "title": "操作系统复习",
            "date_published": "2024-03-07T04:51:59.000Z",
            "content_html": "<h2 id=\"概论\"><a class=\"anchor\" href=\"#概论\">#</a> 概论</h2>\n<h3 id=\"操作系统的定义和功能\"><a class=\"anchor\" href=\"#操作系统的定义和功能\">#</a> 操作系统的定义和功能</h3>\n<h4 id=\"操作系统的定义\"><a class=\"anchor\" href=\"#操作系统的定义\">#</a> 操作系统的定义</h4>\n<ul>\n<li>一组计算机程序的集合，主要用以控制和管理 计算机的硬件和软件资源，合理地组织计算机的工作流程，向应用程序和用户提供方便、快捷、友好的使用接口</li>\n</ul>\n<h4 id=\"操作系统的功能\"><a class=\"anchor\" href=\"#操作系统的功能\">#</a> 操作系统的功能 😊</h4>\n<ul>\n<li>进程管理</li>\n<li>存储管理</li>\n<li>文件管理</li>\n<li>设备管理</li>\n</ul>\n<h4 id=\"操作系统的特征\"><a class=\"anchor\" href=\"#操作系统的特征\">#</a> 操作系统的特征 😎</h4>\n<ul>\n<li>并发</li>\n<li>共享</li>\n<li>虚拟</li>\n<li>异步</li>\n</ul>\n<h3 id=\"操作系统的发展\"><a class=\"anchor\" href=\"#操作系统的发展\">#</a> 操作系统的发展</h3>\n<ol>\n<li>手工操作时代</li>\n<li>早期单道批处理系统时代</li>\n<li>多道批处理系统时代</li>\n</ol>\n<h3 id=\"操作系统的分类\"><a class=\"anchor\" href=\"#操作系统的分类\">#</a> 操作系统的分类 😊</h3>\n<h4 id=\"批处理操作系统\"><a class=\"anchor\" href=\"#批处理操作系统\">#</a> 批处理操作系统</h4>\n<ul>\n<li>主要特征\n<ul>\n<li>用户脱机工作</li>\n<li>成批处理作业</li>\n<li>单 / 多道程序运行</li>\n<li>作业周转时间长</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"分时操作系统\"><a class=\"anchor\" href=\"#分时操作系统\">#</a> 分时操作系统</h4>\n<ul>\n<li>主要特征：\n<ul>\n<li><strong>同时性</strong>。允许各终端用户同时工作，系统分时响应用户请求（使用 CPU 并不同时）</li>\n<li><strong>交互性</strong>。支持联机的操作方式，用户可以在终端上通过操作系统进行人 - 机对话，随时控制和调试程序，以交互的方式工作</li>\n<li><strong>独立性</strong>。用户之间彼此独立的工作，好象独占一台计算机系统一样，互不干扰</li>\n<li><strong>及时性</strong>。用户请求能在较短的时间内得到响应</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"实时操作系统\"><a class=\"anchor\" href=\"#实时操作系统\">#</a> 实时操作系统</h4>\n<ul>\n<li>系统能及时响应外部事件的请求，在规定的时间内完成对该事件的处理，并控制所有实时任务协调一致地运行</li>\n</ul>\n<h4 id=\"个人计算机操作系统\"><a class=\"anchor\" href=\"#个人计算机操作系统\">#</a> 个人计算机操作系统</h4>\n<ul>\n<li>主要特点：\n<ul>\n<li>图形用户接口</li>\n<li>开放性</li>\n<li>多媒体支持</li>\n<li>应用软件丰富</li>\n<li>操作系统管理性能高</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"网络操作系统\"><a class=\"anchor\" href=\"#网络操作系统\">#</a> 网络操作系统</h4>\n<ul>\n<li>除具备通常操作系统功能外，还具备联网功能，支持网络体系结构和各种网络通信协议，提供网络互连能力，支持可靠、有效、安全的数据传输</li>\n<li>主要采用客户机 / 服务器 (C/S) 工作方式\n<ul>\n<li>客户机一般由微型计算机承担，主动从本地向服务器提出服务请求</li>\n<li>服务器接收客户机请求、处理请求的服务、返回服务结果。一般由高档微机、小、中、大型机承担</li>\n</ul>\n</li>\n<li>对等模式：网络中的每台计算机同时具有客户端和服务器两种功能</li>\n</ul>\n<h4 id=\"分布式操作系统\"><a class=\"anchor\" href=\"#分布式操作系统\">#</a> 分布式操作系统</h4>\n<ul>\n<li>特点：\n<ul>\n<li>计算机网络系统的高级形式，由多台计算机组成，计算机之间没有主次之分</li>\n<li>数据和控制及任务的分布性、整体性、资源共享的透明性、各节点的自制性和协同性</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"嵌入式操作系统\"><a class=\"anchor\" href=\"#嵌入式操作系统\">#</a> 嵌入式操作系统</h4>\n<ul>\n<li>\n<p>指运行在嵌入式 (计算机) 环境中，对整个系统各种部件和资源进行统一协调、处理、指挥和控制的系统软件。它具有通常操作系统的基本功能</p>\n</li>\n<li>\n<p>与一般操作系统有很大不同，主要体现在微型化、可定制、实时性、可靠性、易移植、开发工具与使用环境密切相关等特点</p>\n</li>\n</ul>\n<h3 id=\"操作系统的接口\"><a class=\"anchor\" href=\"#操作系统的接口\">#</a> 操作系统的接口</h3>\n<h4 id=\"程序接口\"><a class=\"anchor\" href=\"#程序接口\">#</a> 程序接口</h4>\n<ul>\n<li>系统调用：“系统调用” 可以获得操作系统的底层服务，从而进一步使用或访问系统管理的各种软硬件资源。不同的操作系统提供的系统调用的种类、数量和名字不尽相同</li>\n<li>API（application programming interface）\n<ul>\n<li>常用的 Windows 系统，微软公司只公布了相关的 API，它是一种应用程序编程接口，是在操作系统系统调用的基础经过规范整理出来，面向社会公布的唯一的接口方式</li>\n<li>由于不是直接的系统调用，其效率有所损失。微软公司没有发布全部的 API，也为开发程序带来了一定的难度</li>\n</ul>\n</li>\n<li>系统调用 &amp; POSIX 标准\n<ul>\n<li>系统调用内部的具体实现与硬件相关，直接使用会产生问题：\n<ul>\n<li>接口复杂，使用困难</li>\n<li>应用程序的跨平台可移植性受到很大限制</li>\n</ul>\n</li>\n<li>POSIX 标准：专门规定内核的系统调用接口标准，操作系统若遵循此标准，则应用程序在不同操作系统之间就具有可移植性\n<ul>\n<li>Unix/Linux 遵循此标准</li>\n<li>Windows NT-based 系统不能直接支持新版 POSIX 接口</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>系统调用的处理过程\n<ol>\n<li>应用程序使用系统调用时会产生一条指令（陷入指令或访管指令），该指令中存放了对应系统调用的功能号，有时还附带传递给内核的参数： <code>系统调用—功能号—入口地址表—入口地址</code></li>\n<li>处理机在执行到该访管指令时发出相应的中断信号给 “陷阱处理机制”</li>\n<li>陷阱处理机制启动相关的内核函数完成该系统调用所要求的功能：保护 CPU 现场、获取功能号、根据功能号查找对应内核函数入口地址表、转到入口地址执行内核函数、内核函数执行完，中断处理结束</li>\n<li>恢复 CPU 现场，继续执行中断点的下一条指令</li>\n</ol>\n</li>\n<li>注意：执行系统调用时，应用程序从用户态（目态）转到了核心态（管态），即执行内核函数时必须在核心态下运行，但访管指令本身是在用户态下执行的</li>\n</ul>\n<h4 id=\"操作接口\"><a class=\"anchor\" href=\"#操作接口\">#</a> 操作接口</h4>\n<ul>\n<li>命令界面（CLI，Command Line Interface ）\n<ul>\n<li>简单命令的一般形式：命令 参数 1 参数 2 … 参数 n</li>\n<li>Windows 操作系统的基本命令：type、erase、attrib、copy、xcopy、dir、cd、md、rd、tree、ver 等</li>\n</ul>\n</li>\n<li>图形界面（ GUI，Graphics User Interface ）</li>\n<li>作业控制命令\n<ul>\n<li>专为批处理作业的用户提供的，所以也称批处理用户接口。操作系统提供一个作业控制语言 JCL（Job Control Language），它由一组作业控制语句、作业控制操作命令及相应语法规范组成</li>\n<li>用户利用作业控制语言书写批处理作业控制说明书，操作系统解释作业控制说明书，按其要求一步步地运行用户作业。\n<ul>\n<li>DOS 下的批处理命令是一种简单的作业控制语言（.bat）</li>\n<li>UNIX 的 Shell 语言是现代计算机一种功能强大的作业控制语言</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"操作系统的设计实现方法\"><a class=\"anchor\" href=\"#操作系统的设计实现方法\">#</a> 操作系统的设计实现方法</h3>\n<h4 id=\"操作系统设计与开发\"><a class=\"anchor\" href=\"#操作系统设计与开发\">#</a> 操作系统设计与开发</h4>\n<ul>\n<li>操作系统设计与开发特点\n<ul>\n<li>与硬件关联</li>\n<li>复杂程度高</li>\n<li>生产周期长</li>\n</ul>\n</li>\n<li>操作系统的设计原则\n<ul>\n<li>可靠性</li>\n<li>方便性</li>\n<li>高效率</li>\n<li>易维护性</li>\n<li>可扩充性</li>\n<li>开放性</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"操作系统的体系结构\"><a class=\"anchor\" href=\"#操作系统的体系结构\">#</a> 操作系统的体系结构</h4>\n<ul>\n<li>无结构操作系统</li>\n<li>模块化结构</li>\n<li>分层结构</li>\n<li>客户 / 服务器结构（微内核）</li>\n<li>虚拟机结构</li>\n<li>面向对象结构</li>\n</ul>\n<h2 id=\"进程管理\"><a class=\"anchor\" href=\"#进程管理\">#</a> 进程管理</h2>\n<h3 id=\"程序的执行方式\"><a class=\"anchor\" href=\"#程序的执行方式\">#</a> 程序的执行方式</h3>\n<h4 id=\"程序的顺序执行\"><a class=\"anchor\" href=\"#程序的顺序执行\">#</a> 程序的顺序执行 😊</h4>\n<ul>\n<li><strong>一个具有独立功能的程序独占处理器直至最终结束的过程称为程序的顺序执行</strong>\n<ul>\n<li>程序设计中的顺序控制结构仅能控制程序内部指令的执行序列</li>\n<li>程序的顺序执行意味着运行时程序间的执行序列也是顺序的 —— 一个程序执行完了，才能执行另一个程序</li>\n</ul>\n</li>\n<li>顺序执行的特性：\n<ul>\n<li>顺序性</li>\n<li>封闭性</li>\n<li>可再现性</li>\n<li>程序的顺序执行方式便于程序的编制与调试，但不利于充分利用计算机系统资源，运行效率低下</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"程序的并发执行与并行执行\"><a class=\"anchor\" href=\"#程序的并发执行与并行执行\">#</a> 程序的并发执行与并行执行 😎</h4>\n<ul>\n<li>为了提高系统的运行效率，允许 “同时” 执行多个程序</li>\n<li>并行（parallel）：多个事件在同一时刻发生</li>\n<li>并发（concurrent）：多个事件在同一时期内发生</li>\n<li>显然，<strong>并行是并发的特例</strong>，程序并行执行的硬件前提是系统中有多个 CPU</li>\n<li>并发的<strong>本质</strong>是一个 CPU 在多个程序运行过程中的<strong>时分复用</strong></li>\n<li>并发执行的特性：\n<ul>\n<li><strong>间断性</strong></li>\n<li><strong>开放 / 交互性</strong></li>\n<li><strong>不可再现性</strong></li>\n<li>进行并发程序设计时应当避免由于程序间开放交互引起的不可再现性而产生运行时错误</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"进程概念的引入\"><a class=\"anchor\" href=\"#进程概念的引入\">#</a> 进程概念的引入</h4>\n<ul>\n<li>程序（program）：静态的代码文件（*.exe）</li>\n<li>进程（process）：程序在某个数据集合上的一次执行，系统资源分配的基本单位</li>\n<li>作业（job）：批处理系统要装入系统运行处理的一系列程序步骤和数据</li>\n</ul>\n<h3 id=\"进程的特征与控制\"><a class=\"anchor\" href=\"#进程的特征与控制\">#</a> 进程的特征与控制</h3>\n<h4 id=\"进程的相关概念\"><a class=\"anchor\" href=\"#进程的相关概念\">#</a> 进程的相关概念</h4>\n<ul>\n<li>\n<p>进程有以下特征</p>\n<ul>\n<li>结构性</li>\n<li>动态性</li>\n<li>独立性</li>\n<li>并发性</li>\n</ul>\n</li>\n<li>\n<p>进程分类：系统进程、用户进程</p>\n</li>\n<li>\n<p>进程上下文（process context）</p>\n<ul>\n<li>用户级上下文（user-level context）：进程的代码区、数据区、用户栈区和共享存储区</li>\n<li>系统级上下文（system-level context）：PCB、内存管理信息、进程环境块、系统栈</li>\n<li>寄存器上下文（register context）</li>\n<li>一个进程被系统调度而占有 CPU 时，会发生 CPU 在新老进程之间切换，切换的内容是进程上下文，进程运行是在进程的上下文中执行的</li>\n<li>一个典型的上下文切换过程</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">context_switch</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   Push registers onto stack</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   Save ptrs to code and data<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   Save stack pointer <span class=\"token comment\">// 以上语句保护当前进程上下文</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   Pick next process to execute <span class=\"token comment\">// 选中 / 调度新进程</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 以下语句恢复所选中 / 调度的进程的上下文</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   Restore stack ptr of that process</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   Restore ptrs to code and data<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   Pop registers</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   Return</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"进程状态及转换\"><a class=\"anchor\" href=\"#进程状态及转换\">#</a> 进程状态及转换 😎</h4>\n<ul>\n<li>进程的状态\n<ul>\n<li>就绪状态（ready）：进程在内存中已经具备执行的条件，等待分配 CPU</li>\n<li>运行状态（running）：进程占用 CPU 并正在执行</li>\n<li>阻塞状态（blocked）：也称为等待（waiting）状态 —— 运行的进程由于发生某事件而放弃 CPU</li>\n<li><img loading=\"lazy\" data-src=\"ComputerSystem/1.png\" alt=\"三状态模型\" /></li>\n<li><img loading=\"lazy\" data-src=\"ComputerSystem/2.png\" alt=\"五状态模型\" /></li>\n<li><img loading=\"lazy\" data-src=\"ComputerSystem/3.png\" alt=\"七状态模型\" /></li>\n</ul>\n</li>\n<li>有挂起功能的进程状态：\n<ul>\n<li>挂起就绪（ready suspended）</li>\n<li>挂起阻塞（blocked suspended）</li>\n<li>进程在运行态也可以被挂起，转换为挂起就绪状态</li>\n<li>阻塞状态的进程被挂起后，若阻塞事件或 I/O 请求完成，则进程状态转换为挂起就绪状态 —— 仍然是挂起状态</li>\n<li>创建进程时若没有足够的内存空间，则转入挂起就绪状态</li>\n<li><strong>只有处于就绪态的进程</strong>才有可能被调度分配 CPU 运行</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"进程控制块pcb\"><a class=\"anchor\" href=\"#进程控制块pcb\">#</a> 进程控制块 PCB</h4>\n<ul>\n<li>为了描述和控制进程运行的数据结构 —— 进程控制块（Process Control Block），或称为进程描述符（Process Descriptor），进程存在的惟一标志\n<ol>\n<li>进程标识信息 —— 内部标识符（PID）和外部标识符（进程名）</li>\n<li>现场信息 —— 进程运行时 CPU 的即时状态 —— 各寄存器的值</li>\n<li>控制信息 —— 程序和数据地址、进程同步和通信机制信息、进程的资源清单和链接指针，进程状态、进程优先级……</li>\n</ol>\n</li>\n<li>操作系统根据 PCB 对进程进行控制和管理\n<ul>\n<li>查询进程现行状态及优先级</li>\n<li>恢复现场</li>\n<li>相关进程同步、通信</li>\n</ul>\n</li>\n<li>创建新进程时，建立 / 分配 PCB，进程结束时回收 PCB</li>\n<li>PCB 由系统多个功能模块读写，须<strong>常驻内存</strong>，并进一步组织形成队列</li>\n</ul>\n<h4 id=\"进程控制\"><a class=\"anchor\" href=\"#进程控制\">#</a> 进程控制 😊</h4>\n<ul>\n<li>\n<p>CPU 的运行模式</p>\n<ul>\n<li><strong>核心态</strong>（内核态），也称为管态（supervisor mode），Ring 0：内核代码、设备驱动、特权指令、直接访问物理内存空间、设备端口</li>\n<li><strong>用户态</strong>，也称为目态，Ring 3：普通指令、保护模式安全限制、访问映射的虚拟地址空间、系统许可的映射端口</li>\n</ul>\n</li>\n<li>\n<p>不同于进程切换，也不一定引起进程切换或状态转换</p>\n</li>\n<li>\n<p>一般来说，当<strong>发生中断或系统调用</strong>时，用户进程暂停，CPU 模式从用户态切换到核心态，执行系统服务例程，此时进程仍在原上下文中运行，仅模式变化</p>\n</li>\n<li>\n<p>进程控制 —— 系统对进程生命周期的各个环节进行控制</p>\n<ul>\n<li>进程控制的职能是对<strong>系统中的所有进程实行有效的管理 —— 对一个进程进行创建、撤销或终止，以及在某些进程状态间的转换控制</strong></li>\n<li>允许一个进程创建和控制另一个进程，前者为父进程，后者为子进程</li>\n</ul>\n</li>\n<li>\n<p>进程控制通常由 <strong>原语（primitive）</strong> 完成 。</p>\n</li>\n<li>\n<p>原语的特性：</p>\n<ul>\n<li>由若干条指令组成，实现某个特定功能，在<strong>执行过程中不可被中断的程序段</strong></li>\n<li><strong>不可分割</strong>的执行单位，<strong>不能并发执行</strong></li>\n<li>是操作系统核心（不是由进程而是由一组程序模块所组成）的一个组成部分，且<strong>常驻内存</strong></li>\n<li>通常在<strong>核心态 / 管态</strong>下执行</li>\n</ul>\n</li>\n<li>\n<p>进程控制原语</p>\n<ol>\n<li><strong>创建进程</strong>：建立 PCB、填入信息、插入就绪队列，操作系统创建进程主要步骤<br />\n（1）命名进程：为新进程设置进程标志符；<br />\n（2）从 PCB 集合中为新进程申请一个空 PCB；<br />\n（3）确定新进程的优先级；<br />\n（4）为新进程的程序段、数据段和用户栈分配内存空间；如果进程中需要共享某个已在内存的程序段，则必须建立共享程序段的链接指针；<br />\n（5）为新进程分配除内存外的其它各种资源；<br />\n（6）初始化 PCB，将新进程的初始化信息写入进程控制块；<br />\n（7）如果就绪队列能够接纳新创建的进程，则将新进程插入到就绪队列；<br />\n（8）通知操作系统的记账、性能监控等管理模块<br />\n导致创建进程的事件：登录、作业调度、提供服务 —— 系统内核直接调用创建原语创建新进程、应用请求 —— 由用户调用操作系统提供的系统调用完成（Windows 的 API：CreateProcess）</li>\n<li><strong>撤消与终止进程</strong>：进程完成后，应退出系统而消亡，系统及时收回占有的全部资源以便其它进程使用，撤销原语撤销的是 PCB，而非进程的程序段</li>\n<li><strong>阻塞与唤醒进程</strong>：进程阻塞是进程的自主行为，唤醒则是被动的</li>\n<li><strong>挂起与激活进程</strong>：既可以由该进程自己调用，也可由其它进程或系统调用，但激活原语只能由其它进程或系统调用</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"进程的互斥与同步\"><a class=\"anchor\" href=\"#进程的互斥与同步\">#</a> 进程的互斥与同步</h3>\n<h4 id=\"竞争和协作\"><a class=\"anchor\" href=\"#竞争和协作\">#</a> 竞争和协作</h4>\n<ul>\n<li>竞争，会引发以下两种极端情况：\n<ul>\n<li><strong>死锁（deadlock）</strong>：一组进程都陷入永远等待的状态</li>\n<li><strong>饥饿（starvation）</strong>：被调度程序长期忽视</li>\n</ul>\n</li>\n<li>协作 ——<strong> 同步（synchronization）</strong>\n<ul>\n<li>一个进程的执行依赖于其协作进程的消息或信号</li>\n</ul>\n</li>\n<li>竞争 ——<strong> 互斥（mutual exclusion）</strong>\n<ul>\n<li>互斥也是一种特殊的同步 —— 以一定次序协调地使用共享资源</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"与时间有关的错误\"><a class=\"anchor\" href=\"#与时间有关的错误\">#</a> 与时间有关的错误</h4>\n<ul>\n<li>Bernstein 条件\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">R(p_i)=\\{a_1,a_2,…,a_n\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span>，程序<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 在执行期间引用的变量集</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">{</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>m</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">W(p_i)=\\{b_1,b_2,…,b_m\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span>，程序<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 在执行期间改变的变量集</li>\n<li>若两个程序的变量集交集之和为空集：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>∩</mo><mi>W</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>∪</mo><mi>R</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>∩</mo><mi>W</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>∪</mo><mi>W</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>∩</mo><mi>W</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">R(p_1)∩W(p_2)∪R(p_2)∩W(p_1)∪W(p_1)∩W(p_2)=\\{   \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mclose\">}</span></span></span></span>，则并发进程的执行与时间无关</li>\n</ul>\n</li>\n<li>若两个进程共享了数据集，则可能存在制约关系，形成交互的并发进程</li>\n<li>执行的相对速度无法相互控制，可能会出现所谓与时间有关的错误</li>\n</ul>\n<h4 id=\"临界资源与临界区\"><a class=\"anchor\" href=\"#临界资源与临界区\">#</a> 临界资源与临界区 😊</h4>\n<ul>\n<li><strong>临界资源</strong>：在某段时间内只能允许一个进程使用的资源 (打印机、磁带机等硬件设备和变量、队列等数据结构)</li>\n<li><strong>临界区</strong>：进程中访问临界资源的代码段，几个进程若共享同一临界资源，它们必须以互斥的方式使用这个临界资源</li>\n<li>临界区调度原则：<br />\n1）一次至多一个进程能够执行其临界区代码；<br />\n2）如果已有进程在临界区运行，其它试图进入的进程应等待；<br />\n3）进入临界区内的进程应在有限时间内退出，以便让等待进程中的一个进入<br />\n选择临界区调度策略时，不能因为该原则而造成进程饥饿或死锁<br />\n实现临界区管理有软件和硬件两种方式</li>\n</ul>\n<h5 id=\"软件方法管理临界区\"><a class=\"anchor\" href=\"#软件方法管理临界区\">#</a> 软件方法管理临界区</h5>\n<ul>\n<li>\n<p>实施依据是内存访问的基本互斥性 —— 对内存同一地址的并发访问将被存储管理器序列化，而访问的顺序并无需事先指定，不需要硬件、操作系统或程序设计语言的任何支持</p>\n</li>\n<li>\n<p>Peterson 算法（1981 年）</p>\n<ul>\n<li>为每个进程设置标志 <code>flag</code>  用于表示该进程是否有意访问临界资源（进入临界区），又设置标志 <code>turn</code>  用于表示临界资源此时是否有其它进程在访问</li>\n<li>只有在对方进程的访问标志 <code>flag</code>  为 <code>true</code>  并且 <code>turn</code>  也为该进程标识时，才表明对方进程在访问临界资源，需要等待对方进程访问完并释放资源后才能访问；否则本进程不需要等待对方进程即可访问临界资源</li>\n</ul>\n</li>\n<li>\n<p>软件方法管理临界区的标志算法比较容易出现<strong>标志逻辑混乱</strong>的情况，其<strong>根本原因</strong>在于管理临界区标志要用两条指令：</p>\n<ul>\n<li>一条指令是看对方的标志</li>\n<li>一条指令是设置自己的标志</li>\n</ul>\n</li>\n<li>\n<p>进程并发可能导致进程在执行这两条指令时被另一个进程中断</p>\n</li>\n<li>\n<p>保证进程在执行这两条指令时不被中断，即可很容易地进行临界区管理</p>\n</li>\n</ul>\n<h5 id=\"硬件方式管理临界区\"><a class=\"anchor\" href=\"#硬件方式管理临界区\">#</a> 硬件方式管理临界区</h5>\n<ul>\n<li><strong>禁止中断法</strong>\n<ul>\n<li>在检查临界区标志的两条指令之前将中断关上，临界区访问完后系统才打开中断</li>\n<li>缺点：影响计算机效率、不能及时处理重要程序、对多 CPU 系统无效</li>\n</ul>\n</li>\n<li><strong>特殊指令法</strong>\n<ul>\n<li>特殊的硬件指令保证几个动作的原子性 —— 不会被中断，不受到其它指令的干扰</li>\n<li>“测试并设置（Test and Set）” 指令 <code>TS</code> ，或者交换（exchange）指令 <code>SWAP / xchg</code></li>\n</ul>\n</li>\n<li><code>TS</code>  指令：将布尔变量 x 与临界区关联起来 —— 如果 x 为真，表示没有进程在临界区内，临界资源可用，并立即将 x 置为 false，即阻止其它进程进入临界区，访问临界资源；若 x 为假，则表示有其它进程进入临界区，本进程需要等待。</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">TS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> <span class=\"token operator\">&amp;</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>TS 指令实现互斥：</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> x <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>；</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  process <span class=\"token function\">Pi</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">TS</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    临界区 i</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>coend</pre></td></tr></table></figure><ul>\n<li>用交换指令实现互斥：</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> lock <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  process <span class=\"token function\">Pi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">bool</span> ki <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token function\">SWAP</span><span class=\"token punctuation\">(</span>ki<span class=\"token punctuation\">,</span> lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>ki<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    临界区i</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">SWAP</span><span class=\"token punctuation\">(</span>ki<span class=\"token punctuation\">,</span> lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>coend</pre></td></tr></table></figure><h4 id=\"进程同步机制\"><a class=\"anchor\" href=\"#进程同步机制\">#</a> 进程同步机制 😎</h4>\n<p>常见的同步机制有<strong>锁、信号量、管程和消息传递</strong></p>\n<h5 id=\"信号量机制\"><a class=\"anchor\" href=\"#信号量机制\">#</a> 信号量机制</h5>\n<ul>\n<li>在这一体制下，进程在某一特殊点上被迫停止执行（阻塞）直到接收到一个对应的特殊变量值，这种特殊变量就是信号量 (semaphore)，除了<strong>赋初值</strong>外，<strong>信号量的值只能由 P 操作和 V 操作进行修改</strong>，进程通过 P、V 这两个特殊操作在信号量所关联的系统资源上实现同步与互斥</li>\n<li>信号量表示<strong>系统资源的实体</strong></li>\n<li>具体实现时，信号量是一种<strong>记录型数据结构</strong>，有两个分量：一个是信号量的值，另一个是在信号量关联资源上阻塞的进程队列的队头指针<br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/4.png\" alt=\"信号量\" /></li>\n<li>信号量在操作系统中的主要作用是<strong>封锁临界区</strong>、<strong>进程同步</strong>和<strong>维护资源计数</strong>。</li>\n<li>P 操作和 V 操作原语的功能：\n<ul>\n<li><code>P(s)</code> ：将信号量 <code>s</code>  的值减 1，若结果小于 0，则调用 <code>P(s)</code>  的进程被阻塞，并进入信号量 <code>s</code>  的阻塞队列中；若结果不小于 0，则调用 <code>P(s)</code>  的进程继续运行</li>\n<li><code>V(s)</code> ：将信号量 <code>s</code>  的值加 1，若结果不大于 0，则调用 <code>V(s)</code>  的进程从该信号量阻塞队列中释放、唤醒一个处于等待状态的进程，将其转换为就绪状态，调用 <code>V(s)</code>  的进程继续运行；若结果大于 0，则调用 <code>V(s)</code>  的进程继续运行</li>\n</ul>\n</li>\n<li>信号量的数据类型以及 P、V 操作原语的定义</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">semaphore</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">pcb</span> <span class=\"token operator\">*</span>list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>semaphore <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  s<span class=\"token punctuation\">.</span>value<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>            </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>value <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token function\">block</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span>                     </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>semaphore <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  s<span class=\"token punctuation\">.</span>value<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>            </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>value <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>P 操作意味进程申请一个资源，求而不得则阻塞进程，V 操作意味着释放一个资源，若此时还有进程在等待获取该资源，则被唤醒</li>\n<li>若信号量的值为正数，该正数表示可对信号量可进行的 P 操作的次数，即可用的资源数。信号量的初值一般设为系统中相关资源的总数，对于互斥信号量，初值一般设为 1</li>\n<li>若信号量的值为负，其绝对值表示有多个进程申请该资源而又不能得到，在阻塞队列等待，即在信号量阻塞队列中等待该资源的进程个数</li>\n<li>信号量机制实现进程互斥进入临界区</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>semaphore mutex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  process <span class=\"token function\">Pi</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     临界区i</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>coend</pre></td></tr></table></figure><h4 id=\"进程同步的经典问题\"><a class=\"anchor\" href=\"#进程同步的经典问题\">#</a> 进程同步的经典问题</h4>\n<h5 id=\"生产者-消费者问题\"><a class=\"anchor\" href=\"#生产者-消费者问题\">#</a> 生产者 - 消费者问题</h5>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个生产者进程和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 个消费者进程，连接在一块长度为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个单位的有界缓冲区上（故此问题又称有界缓冲问题）。其中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">P_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 都是<strong>并发进程</strong>，只要缓冲区未满，生产者<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">P_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 生产的产品就可送入缓冲区；只要缓冲区不空，消费者进程<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 就可从缓冲区取走并消耗产品<br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/5.png\" alt=\"生产者-消费者问题\" /></li>\n<li>在并发环境下生产者、消费者进程访问缓冲区的速度不协调、不匹配 ——<strong> 不同步</strong>，或者没有做到互不影响地使用、更新缓冲区 ——<strong> 互斥</strong>，所以会出现<strong>运行错误</strong>甚至是<strong>死锁</strong></li>\n<li>信号量机制解决多个生产者 - 消费者、共享多个缓冲区的生产者 - 消费者问题</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>item B<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 缓冲区，长度 k</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>semaphore empty <span class=\"token operator\">=</span> k<span class=\"token punctuation\">;</span><span class=\"token comment\">// 可用的空缓冲区数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>semaphore full <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 缓冲区内可用的产品数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>semaphore m1 <span class=\"token operator\">=</span> m2 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 互斥信号量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> in <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 缓冲区放入位置</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> out <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 缓冲区取出位置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>process <span class=\"token function\">producer_i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">produce</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 生产一个产品</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>申请空缓冲区</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 申请互斥使用缓冲区</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    append to B<span class=\"token punctuation\">[</span>in<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 产品放入缓冲</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    in <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>in <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> k<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 更新缓冲区指针</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>full<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>process <span class=\"token function\">consumer_j</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>full<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">take</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span> from B<span class=\"token punctuation\">[</span>out<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    out <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>out <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>coend</pre></td></tr></table></figure><h5 id=\"读者-写者问题\"><a class=\"anchor\" href=\"#读者-写者问题\">#</a> 读者 - 写者问题</h5>\n<ul>\n<li>两组并发进程，读者和写者，共享一个文件 F，要求：\n<ul>\n<li>允许多个读者进程同时读文件</li>\n<li>只允许一个写者进程写文件</li>\n<li>任何一个写者进程在完成写操作之前不允许其它读者或写者工作</li>\n<li>写者执行写操作前，应让已有的写者和读者全部退出</li>\n</ul>\n</li>\n<li>信号量机制解决读者 - 写者问题</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> readcount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 读进程计数器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>semaphore ws <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> mutex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>process <span class=\"token function\">reader_i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  readcount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>readcount <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>ws<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  读文件<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  readcount<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>readcount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>ws<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>process <span class=\"token function\">writer_j</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>ws<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  写文件<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>ws<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>coend</pre></td></tr></table></figure><ul>\n<li>写者优先算法</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>semaphore  rmutex<span class=\"token punctuation\">,</span> wmutex<span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">;</span> <span class=\"token comment\">// S 在写者到达后封锁读者</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rmutex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> wmutex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> S <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>process reader <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>rmutex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>wmutex<span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>rmutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  READ FILE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>rmutex<span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>wmutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>rmutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>process writer<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>wmutex<span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  WRITE the FILE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>wmutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>coend</pre></td></tr></table></figure><h5 id=\"哲学家就餐问题\"><a class=\"anchor\" href=\"#哲学家就餐问题\">#</a> 哲学家就餐问题</h5>\n<ul>\n<li>五个哲学家围坐在一张圆桌前，每个哲学家面前有一碗意大利面和一只叉子，哲学家的生活由思考和进餐两个活动组成，进餐时需要两只叉子，但每个哲学家只有两只叉子，所以他们需要共享叉子</li>\n<li>算法 1：给所有哲学家编号，奇数号的哲学家必须首先拿左边的筷子，偶数号的哲学家则反之。</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>semaphore chopsticks <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> chopsticks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>process <span class=\"token function\">philmac_i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//i=0,1,2,3,4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">think</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>chopsticks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>chopsticks<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>chopsticks<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> l<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>chopsticks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>chopsticks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span><span class=\"token function\">chopsticks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>coend</pre></td></tr></table></figure><ul>\n<li>算法 2：通过发放令牌最多允许 4 个哲学家同时吃面</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>semaphore chopsticks<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>semaphore token <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//4 个令牌</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>process <span class=\"token function\">philmac_i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//i=0,1,2,3,4 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">think</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>chopsticks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>chopsticks<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> l<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>chopsticks<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> l<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>chopsticks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>coend</pre></td></tr></table></figure><ul>\n<li>管程解决哲学家就餐问题的算法：</li>\n</ul>\n<p>采用 Hoare 管程实现，算法思想是将哲学家的状态分为思考、饥饿、吃面，并且仅当哲学家左右两边的筷子都可用才允许他拿筷子，否则一只筷子也不拿</p>\n<h5 id=\"睡眠理发师问题\"><a class=\"anchor\" href=\"#睡眠理发师问题\">#</a> 睡眠理发师问题</h5>\n<ul>\n<li>理发店里有一个理发师，一把理发椅，N 个供等候顾客休息的椅子。若无顾客，理发师躺在理发椅上睡觉。顾客到来时唤醒理发师，若理发师正在理发，新来的顾客坐在空闲的休息椅上等候，如果没有空椅子，顾客离开。</li>\n<li>进程 <code>Barber()</code>  和 <code>Customer()</code>  分别描述理发师和顾客，理发师和顾客之间是同步的关系，顾客之间是互斥关系，竞争理发师和休息椅。</li>\n<li>算法采用信号量机制，引入一个控制变量和 3 个信号量：\n<ul>\n<li>控制变量 <code>waiting</code>  用来记录等候理发的顾客数，初值为 0；</li>\n<li>信号量 <code>customers</code>  用来关联表达等候理发的顾客数，并用作阻塞理发师进程，初值为 0；</li>\n<li>信号量 <code>barbers</code>  用来记录正在等候顾客的理发师数，并用作阻塞顾客进程，初值为 0；</li>\n<li>信号量 <code>mutex</code>  用于互斥，初值为 1。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"进程通信\"><a class=\"anchor\" href=\"#进程通信\">#</a> 进程通信 😊</h3>\n<ul>\n<li>进程通信（IPC：Inter-Process Communication）是<strong>进程之间数据的相互交换和信息的相互传递</strong>，是一种 <code>高级通信机制</code></li>\n</ul>\n<h4 id=\"消息传递通信\"><a class=\"anchor\" href=\"#消息传递通信\">#</a> 消息传递通信</h4>\n<ul>\n<li>进程将<strong>通信数据封装在消息</strong>中，消息通过消息缓冲区在进程之间互相传递</li>\n<li><strong>消息</strong>是指进程之间以<strong>不连续</strong>的<strong>成组方式</strong>发送的信息</li>\n<li><strong>消息缓冲区</strong>应包含<strong>消息发送进程标识</strong>、<strong>消息接收进程标识</strong>、<strong>指向下一个消息缓冲区的指针</strong>、<strong>消息长度</strong>、<strong>消息正文</strong>等。缓冲区构成了进程通信的一个<strong>基本单位</strong></li>\n</ul>\n<h5 id=\"直接通信\"><a class=\"anchor\" href=\"#直接通信\">#</a> 直接通信</h5>\n<ul>\n<li>在直接通信方式下，发送进程将发送的数据封装到消息正文后，发送进程必须给出接收进程的标识，然后用发送原语将消息发送给接收进程</li>\n<li>收发消息的原语：\n<ul>\n<li><code>send</code> （接收进程标识，消息队列首指针）</li>\n<li><code>receive</code> （发送进程标识，接收区首地址指针）</li>\n</ul>\n</li>\n<li>在直接通信中隐含着发送进程与接收进程之间的同步问题</li>\n<li><code>send()</code> ：\n<ul>\n<li>查找接收进程的 PCB，存在，则申请一个存放消息的缓冲区，若消息缓冲区已满，则返回到非同步错误处理程序入口，进行特殊处理</li>\n<li>若接收进程因等待此消息的到来而处于阻塞状态，则唤醒此进程。将存放消息的缓冲区连接到接收进程的消息队列上</li>\n<li>两种同步方式\n<ul>\n<li>发送进程阻塞等待接收进程发回的确认信息</li>\n<li>发送进程发送完消息后，不阻塞等待接收进程的回送信息，而是继续执行；限定时间到仍未收到确认消息，重发或放弃</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>receive()</code> ：\n<ul>\n<li>接收进程在其进程空间中确定一个接收区，复制 / 读取消息缓冲区中的内容，释放消息缓冲区</li>\n<li>若无消息可读，则阻塞接收进程至有消息发送来为止</li>\n<li>两种同步方式\n<ul>\n<li>接收进程调用 <code>receive</code>  原语并一直阻塞等待发送来的消息，直到接收到消息 —— 与发送进程的第二种同步方式匹配</li>\n<li>接收进程调用 <code>receive</code>  原语后，不阻塞等待发送来的消息，而是继续执行 —— 与发送进程的第一种同步方式匹配</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"间接通信\"><a class=\"anchor\" href=\"#间接通信\">#</a> 间接通信</h5>\n<ul>\n<li>消息传递的间接通信方式是指发送进程与接收进程之间<strong>通过邮箱</strong>来进行通信，发送进程将消息发送到邮箱，接收进程从邮箱接收消息\n<ul>\n<li>发送原语： <code>send(mailboxname, message)</code> ;</li>\n<li>接收原语： <code>receive(mailboxname, message)</code> ;</li>\n</ul>\n</li>\n<li>与直接通信比较，间接通信<strong>灵活性更大</strong>，不<strong>需要发送进程与接收进程同步</strong>，是一种方便、可靠的进程通信方式</li>\n</ul>\n<h4 id=\"共享内存通信\"><a class=\"anchor\" href=\"#共享内存通信\">#</a> 共享内存通信</h4>\n<ul>\n<li>共享内存通信分为\n<ul>\n<li>基于共享数据结构的通信方式 —— 比较低效，只适于传递少量数据</li>\n<li>基于共享存储区的通信方式<br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/6.png\" alt=\"共享内存通信\" /></li>\n</ul>\n</li>\n<li>共享内存通信的实现过程如下：\n<ul>\n<li>建立共享内存区 —— 标识和长度等参数</li>\n<li>共享内存区的管理</li>\n<li>共享内存区的映射与断开</li>\n</ul>\n</li>\n<li>允许多个进程将共享内存映射到自己的地址空间，进程对各自所映射的地址段的读写操作代码应纳入临界区管理</li>\n</ul>\n<h4 id=\"管道通信\"><a class=\"anchor\" href=\"#管道通信\">#</a> 管道通信</h4>\n<ul>\n<li>管道是连接读、写进程的一个<strong>特殊文件</strong>，允许进程按<strong> FIFO 方式</strong>传送数据，也能使进程同步执行操作。发送进程以字符流形式把数据送入管道，接收进程从管道中接收数据</li>\n<li>管道的实质是一个共享文件（文件系统的高速缓冲区中），进程对管道<strong>应该互斥使用</strong></li>\n<li>写进程把一定数量的数据写入 <code>pipe</code> ，就去睡眠等待，直到读进程取走数据后，将其唤醒</li>\n<li>命名管道（named pipe）用来在不同的地址空间之间进行通信，不仅可以在本机上实现两个进程间的通信，还可以跨网络实现两个进程间的通信，特别为服务器通过网络与客户端交互而设计，是一种<strong>永久通信机制</strong></li>\n<li>每一个命名管道都有一个<strong>唯一的名字</strong></li>\n</ul>\n<h3 id=\"进程调度\"><a class=\"anchor\" href=\"#进程调度\">#</a> 进程调度</h3>\n<ul>\n<li>由于进程总数一般多于 CPU 数，必然会出现竞争 CPU 的情况。进程调度的功能就是按一定策略、动态地把 CPU 分配给处于就绪队列中的某一进程执行</li>\n<li>两种基本的进程调度方式，<strong>抢占方式</strong>和<strong>非抢占方式</strong>，也称<strong>剥夺式（preemptive）<strong>和</strong>非剥夺式（non_preemptive）</strong> 调度</li>\n<li>剥夺原则有：<strong>优先权原则</strong>、<strong>短进程优先原则</strong>、<strong>时间片原则</strong>等</li>\n<li>可能引发进程调度的时机：\n<ul>\n<li>正在运行的进程运行完毕；</li>\n<li>运行中的进程要求 I/O 操作；</li>\n<li>执行某种原语操作 (如 P 操作) 导致进程阻塞；</li>\n<li>比正在运行的进程优先级更高的进程进入就绪队列；</li>\n<li>分配给运行进程的时间片已经用完</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"进程调度模型\"><a class=\"anchor\" href=\"#进程调度模型\">#</a> 进程调度模型 😎</h4>\n<ul>\n<li>三级调度\n<ul>\n<li><strong>高级调度</strong>（High-Level Scheduling），作业调度\n<ul>\n<li>从后备作业中选若干个作业，分配必要的资源，建立相应的用户作业进程和系统服务进程（如输人、输出进程），将其程序和数据调入内存……</li>\n</ul>\n</li>\n<li><strong>中级调度</strong>（Intermediate-Level Scheduling），平衡调度\n<ul>\n<li>在内存紧张时，将一些暂时不能运行的进程对换到外存。当内存有空间时，再将其重新调入内存</li>\n</ul>\n</li>\n<li><strong>低级调度</strong>（Low-Level Scheduling），进程调度\n<ul>\n<li>根据一定的算法将 CPU 分派给就绪队列中的一进程</li>\n<li>最基本的、必须的一种调度<br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/7.png\" alt=\"进程调度模型\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"调度算法选择评价准则\"><a class=\"anchor\" href=\"#调度算法选择评价准则\">#</a> 调度算法选择 / 评价准则</h4>\n<ul>\n<li>调度算法也称为调度策略 ，评价调度算法的参数：\n<ul>\n<li><strong>处理器利用率</strong>（CPU utilization）= CPU 有效工作时间 / CPU 总的运行时间</li>\n<li><strong>响应时间</strong>（response time）：交互环境下用户从键盘提交请求开始，到系统首次产生响应为止的时间；是分时和实时系统调度性能重要指标。</li>\n<li><strong>周转时间</strong>（turnaround time）：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub><mtext> </mtext><mo>=</mo><msub><mi>T</mi><mi>f</mi></msub><mtext>–</mtext><msub><mi>T</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_i =  T_f – T_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"> </span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\">–</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，即：周转时间 = 完成时刻 - 提交时刻；批处理系统重要指标</li>\n<li><strong>带权周转时间</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub><mo>=</mo><mtext> 作业的周转时间</mtext><msub><mi>T</mi><mi>i</mi></msub><mi mathvariant=\"normal\">/</mi><mtext>系统为作业提供的服务时间</mtext><mi>T</mi><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_i = 作业的周转时间T_i / 系统为作业提供的服务时间Ts_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">作业的周转时间</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord cjk_fallback\">系统为作业提供的服务时间</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，显然带权周转时间总大于 1 。实质是，周转时间与系统为其提供服务的时间之比</li>\n<li><strong>平均作业周转时间</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Σ</mi><msub><mi>T</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">T = (ΣT_i) / n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">Σ</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">n</span></span></span></span></li>\n<li><strong>平均作业带权周转时间</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Σ</mi><msub><mi>W</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">W = (ΣW_i) / n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">Σ</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">n</span></span></span></span></li>\n<li><strong>系统吞吐量</strong>（throughput）：单位时间内完成的进程（任务 / 交易）数目</li>\n<li><strong>公平性</strong>：不出现饥饿情况</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"调度算法\"><a class=\"anchor\" href=\"#调度算法\">#</a> 调度算法 😎</h4>\n<h5 id=\"先来先服务first-come-first-servedfcfs\"><a class=\"anchor\" href=\"#先来先服务first-come-first-servedfcfs\">#</a> 先来先服务（First-Come First-Served，FCFS）</h5>\n<ul>\n<li>按进程就绪的先后顺序来调度，到达得越早，就越先执行</li>\n<li>获得 CPU 的进程，未遇到其它情况时，一直运行下去</li>\n<li>是一种<strong>非抢占式</strong>算法，简单易实现</li>\n<li><strong>没有</strong>考虑<strong>执行时间长短</strong>、<strong>运行特性</strong>和<strong>资源</strong>的要求</li>\n<li>FCFS 调度算法适用性\n<ul>\n<li>对<strong>长作业非常有利</strong>，对<strong>短作业不利</strong></li>\n<li>对<strong> CPU 繁忙型</strong>的作业非常<strong>有利</strong>，对<strong> I/O 繁忙型作业</strong>非常<strong>不利</strong> —— 进程 I/O 阻塞结束后需<strong>再次排队</strong></li>\n<li><strong>非抢占式算法</strong>，对<strong>响应时间要求高</strong>的进程<strong>不利</strong></li>\n<li>平均作业周转时间与作业提交的<strong>顺序</strong>有关</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"短作业优先shortest-job-firstsjf\"><a class=\"anchor\" href=\"#短作业优先shortest-job-firstsjf\">#</a> 短作业优先（Shortest-Job-First，SJF）</h5>\n<ul>\n<li>以进入系统的作业所要求的 CPU 服务时间为标准，总选取估计所需 CPU 时间最短的作业优先投入运行。\n<ul>\n<li>算法<strong>易于实现</strong>，<strong>效率不高</strong>，主要弱点是<strong>忽视了作业等待时间</strong>。</li>\n<li>对<strong>长作业不利</strong>，如果系统不断接收短作业，可能会出现<strong>饥饿</strong>现象。</li>\n<li><strong>非抢占式</strong>算法，对<strong>响应时间要求高</strong>的进程<strong>不利</strong>。</li>\n<li>SJF 的<strong>平均作业周转时间</strong>比 FCFS 要<strong>小</strong>，故它的调度<strong>性能</strong>比 FCFS<strong> 好</strong>。</li>\n<li>实现 SJF 调度算法需要知道<strong>作业所需运行时间</strong>，而要精确知道一个作业的运行时间是<strong>办不到</strong>的。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"最短剩余时间优先shortest-remaining-time-firstsrtf\"><a class=\"anchor\" href=\"#最短剩余时间优先shortest-remaining-time-firstsrtf\">#</a> 最短剩余时间优先（Shortest Remaining Time First，SRTF）</h5>\n<ul>\n<li>若一就绪状态的新作业所需的 CPU 时间比当前正在执行的作业剩余任务所需 CPU 时间还短，SRTF 将<strong>打断正在执行作业</strong>，将执行权分配给新作业</li>\n<li>SRTF 将 SJF 算法改为<strong>抢占式</strong>，因此只要有新作业进入<strong>就绪队列</strong>，就可能会引发<strong>进程切换</strong>。</li>\n<li>SRTF 调度算法适用性：\n<ul>\n<li><strong>长进程</strong>仍有可能出现<strong>饥饿</strong>现象</li>\n<li>必须计算运行、剩余时间，系统<strong>开销增大</strong></li>\n<li>因抢占式调度，系统<strong>性能</strong>会比 SJF 要<strong>好</strong></li>\n</ul>\n</li>\n</ul>\n<h5 id=\"高响应比优先highest-response-ratio-firsthrrf\"><a class=\"anchor\" href=\"#高响应比优先highest-response-ratio-firsthrrf\">#</a> 高响应比优先（Highest Response Ratio First，HRRF）</h5>\n<ul>\n<li>是 FCFS 与 SJF 两种算法的<strong>折衷</strong>，既考虑作业<strong>等待</strong>时间，又考虑作业的<strong>运行</strong>时间，既照顾短作业又不使长作业等待过久，<strong>改善</strong>了调度<strong>性能</strong>，仍属于<strong>非抢占式算法</strong>\n<ul>\n<li>响应比为作业的响应时间与作业所需运行时间之比，简化为：响应比 ＝ 1 +（已等待的时间 / 估计运行时间）</li>\n</ul>\n</li>\n<li>HRRF 算法适用性：\n<ul>\n<li>由定义可知，<strong>短作业</strong>容易得到<strong>较高响应比</strong>，长作业在等待了足够长的时间后，也将获得足够高的响应比，因此<strong>不会发生饥饿</strong>现象</li>\n<li>需要经常计算作业的响应比，导致<strong>额外的开销</strong></li>\n<li>HRRF 算法的平均周转时间和平均带权周转时间都<strong>介于 FCFS 与 SJF 算法之间</strong>，比 SJF 算法差，比 FCFS 算法优</li>\n<li>虽然 HRRF 算法的平均周转时间和平均带权周转时间不及 SJF 算法，但是，在现实中其可以实现，结果也比较<strong>可靠</strong></li>\n<li>如果在算法中引入<strong>抢占调度</strong>，则算法过程会更复杂。因为所有作业的响应比是<strong>动态变化</strong>的，抢占时间的计算需要解多个方程得到</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"优先权highest-priority-firsthpf\"><a class=\"anchor\" href=\"#优先权highest-priority-firsthpf\">#</a> 优先权（Highest-Priority-First，HPF）</h5>\n<ul>\n<li>根据进程的<strong>优先权</strong>进行进程调度，每次总是选取优先权高的进程调度，也称<strong>优先级调度算法</strong>，一般是<strong>抢占式</strong>调度\n<ul>\n<li>优先权通常用一个整数表示，也叫优先数\n<ul>\n<li>Windows 系统中有 0~31 共 32 个优先级，31 最高</li>\n<li>Unix 系统中，使用数值 - 20~+19 来表示优先级，-20 优先级最高</li>\n</ul>\n</li>\n<li>优先权可由<strong>系统或用户给定</strong>\n<ul>\n<li>静态优先权</li>\n<li>动态优先权</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"时间片轮转round-ribonrr\"><a class=\"anchor\" href=\"#时间片轮转round-ribonrr\">#</a> 时间片轮转（Round-Ribon，RR）</h5>\n<ul>\n<li>调度程序把 CPU 分配给进程使用一个规定的时段，称为一个<strong>时间片</strong>（如 100ms），就绪队列中的进程轮流获得 CPU 的一个时间片。当一个时间片结束时，系统剥夺该进程执行权，等候下一轮调度，属于<strong>抢占式调度</strong>\n<ul>\n<li>时间片的长短，影响进程的进度</li>\n<li>需要从进程数、切换开销、系统效率和响应时间等方面综合考虑，确定时间片大小</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"多级反馈队列multilevel-feed-queuemfq\"><a class=\"anchor\" href=\"#多级反馈队列multilevel-feed-queuemfq\">#</a> 多级反馈队列（Multilevel-Feed-Queue，MFQ）</h5>\n<ul>\n<li>又称<strong>反馈循环队列</strong>，是一种<strong>基于时间片的进程多级队列调度算法的改进算法</strong>。系统设置多个就绪队列，<strong>最高级就绪队列的优先级最高</strong>，随着就绪队列级别的降低优先级依次下降，<strong>较高级就绪队列的进程获得较短的时间片</strong></li>\n<li>不需事先知道各进程所需运行时间，因而可行性较高，同时综合考虑了进程的时间和优先权因素，既照顾了短进程，又照顾了长进程，是一种<strong>综合调度算法</strong>，被广泛应用于各种操作系统中</li>\n</ul>\n<h4 id=\"多cpu系统中的调度\"><a class=\"anchor\" href=\"#多cpu系统中的调度\">#</a> 多 CPU 系统中的调度</h4>\n<ul>\n<li>多处理器系统的作用是利用系统内的多个 CPU 来并行执行用户进程，以提高系统的吞吐量或用来进行冗余操作以提高系统的可靠性</li>\n<li>系统的多个处理器在物理上处于同一机壳中，有一个单一的系统物理地址空间，多个处理器共享系统内存、外设等资源</li>\n<li>多 CPU 系统的类型主要有两种：\n<ul>\n<li><strong>主 - 从模式</strong>，只有一个主处理器，运行操作系统，管理整个系统资源，并负责为各从处理器分配任务，从处理器有多个，执行预先规定的任务及由主处理器分配的任务。这种类型的系统无法做到负载平衡，可靠性不高，<strong>很少使用</strong>。</li>\n<li><strong>对称处理器模式 SMP（Symmetric MultiProcessor）</strong>，所有处理器都是相同的、平等的，共享一个操作系统，每个处理器都可以运行操作系统代码，管理系统资源。是目前比较常见的多 CPU 系统类型。</li>\n</ul>\n</li>\n<li>多处理器系统中，比较有代表性的进（线）程调度方式有以下几种方式：\n<ul>\n<li>自调度\n<ul>\n<li>设置一个公共的进程或线程的就绪队列</li>\n<li>不会出现处理器空闲</li>\n<li>处理器互斥访问该队列，容易形成系统瓶颈</li>\n<li>高速缓存的使用效率很低</li>\n<li>协作线程很难同时运行</li>\n</ul>\n</li>\n<li>组调度 / 群调度（Gang Scheduling）</li>\n<li>专用处理器分配</li>\n<li>动态调度\n<ul>\n<li>操作系统和进程共同进行调度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"多核cpu中的调度\"><a class=\"anchor\" href=\"#多核cpu中的调度\">#</a> 多核 CPU 中的调度</h4>\n<ul>\n<li>多核处理器是指在<strong>一枚处理器中集成两个或多个计算引擎（内核 /core）</strong>，称为 CMP（Chip multiprocessors）结构，可在特定的时钟周期内执行更多任务，通常采用共享二级 Cache 的结构</li>\n<li>对于多核 CPU，优化操作系统任务调度算法是保证效率的关键\n<ul>\n<li>全局队列调度（多数系统）</li>\n<li>局部队列调度</li>\n</ul>\n</li>\n<li>中断处理 —— 全局中断控制器也需要封装在芯片内部</li>\n<li>系统提供同步与互斥机制 —— 需要利用硬件提供的 “读－修改－写” 的原子操作或其他同步互斥机制</li>\n</ul>\n<h3 id=\"死锁\"><a class=\"anchor\" href=\"#死锁\">#</a> 死锁 😎</h3>\n<ul>\n<li><strong>一个进程集合中的每个进程都在等待只能由该集合中的其它一个进程才能引发的事件</strong>，则称一组进程或系统此时发生了死锁</li>\n<li>死锁一旦发生，会使整个系统瘫痪而无法工作。因此，必须想办法解决死锁问题</li>\n</ul>\n<h4 id=\"死锁产生的原因\"><a class=\"anchor\" href=\"#死锁产生的原因\">#</a> 死锁产生的原因</h4>\n<ul>\n<li>并发进程<strong>对临界资源的竞争</strong></li>\n<li>并发进程<strong>推进顺序不当</strong></li>\n</ul>\n<h4 id=\"死锁产生的必要条件\"><a class=\"anchor\" href=\"#死锁产生的必要条件\">#</a> 死锁产生的必要条件 😎</h4>\n<ul>\n<li>\n<p><strong>互斥条件</strong>（Mutual exclusion）：资源的使用是互斥的</p>\n</li>\n<li>\n<p><strong>请求与保持条件</strong>（Hold and wait）：已经得到某些资源的进程可以再申请新的资源。</p>\n</li>\n<li>\n<p><strong>不剥夺条件</strong>（No pre-emption）：系统或其它进程不能剥夺进程已经获得的资源。</p>\n</li>\n<li>\n<p><strong>环路等待条件</strong>（Circular wait）：系统中若干进程间形成等待环路</p>\n</li>\n<li>\n<p>只要破坏上述几个条件之一，即可<strong>防止死锁</strong></p>\n<ul>\n<li>破坏第 1 个条件，使资源可同时访问而不是互斥使用，<strong>可行性较差</strong></li>\n<li>破坏第 2 个条件，进程必须获得所需的所有资源才能运行 ——<strong> 静态</strong>分配，<strong>严重降低资源利用效率</strong>。</li>\n<li>破坏第 3 个条件，采用<strong>剥夺式调度</strong>方法，<strong>只适用于 CPU 和内存分配</strong></li>\n<li>破坏条件 4，采用<strong>层次分配</strong>策略 —— 按此策略分配资源时系统不会发生死锁</li>\n<li>资源按序分配策略：进程不得在占用资源<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">r_j(1≤j≤m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span> 后再申请<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">r_i(i&lt;j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>进程 - 资源分配图</p>\n<ul>\n<li><strong>圆圈</strong>表示<strong>进程</strong>，<strong>资源类</strong>用<strong>方框</strong>表示，<strong>框中的圆点</strong>代表<strong>单个该类资源</strong>，<strong>有向边</strong>连接进程和资源</li>\n<li><strong>申请边</strong>从<strong>进程指向资源类方框</strong>，表示进程正在等待资源；<strong>分配边</strong>从<strong>单个资源圆点指向进程</strong>，表示进程已经获得资源</li>\n<li><img loading=\"lazy\" data-src=\"ComputerSystem/8.png\" alt=\"进程-资源分配图\" /></li>\n</ul>\n</li>\n<li>\n<p>根据进程 - 资源分配图定义个得出如下结论：</p>\n<ul>\n<li>如果进程 - 资源分配图中<strong>无环路</strong>，则此时系统<strong>没有发生死锁</strong></li>\n<li>如果进程 - 资源分配图中<strong>有环路</strong>，且每个资源类中<strong>仅有一个资源</strong>，则系统中<strong>发生了死锁</strong>，此时，<strong>环路</strong>是系统发生死锁的<strong>充要条件</strong>，<strong>环路中的进程便为死锁进程</strong></li>\n<li>如果进程 - 资源分配图中<strong>有环路</strong>，且涉及的资源类中<strong>有多个资源</strong>，则环路的存在只是产生死锁的<strong>必要条件</strong>而不是充分条件</li>\n</ul>\n</li>\n<li>\n<p>进程 - 资源分配图可用以下步骤化简：</p>\n<ul>\n<li>在资源分配图中，找出一个<strong>既非等待又非孤立</strong>的进程结点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">P_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，由于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">P_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 可获得它所需要的全部资源，且运行完后释放它所占有的全部资源，故可在资源分配图中<strong>消去</strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">P_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><strong> 所有的申请边和分配边</strong>，使之成为既无申请边又无分配边的<strong>孤立</strong>结点；</li>\n<li>将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">P_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 所释放的资源分配给申请它们的进程，即在资源分配图中<strong>将这些进程对资源的申请边改为分配边</strong>；</li>\n<li>重复前两步骤，直到找不到符合条件的进程结点。</li>\n</ul>\n</li>\n<li>\n<p>经过化简后，若能<strong>消去资源分配图中的所有边</strong>，使所有进程都成为孤立结点，则称该图是<strong>可完全化简</strong>的，否则为<strong>不可化简</strong>的</p>\n</li>\n<li>\n<p>系统为死锁状态的<strong>充分条件</strong>是：当且仅当该状态的进程 - 资源分配图是<strong>不可完全简化</strong>的 ——<strong> 死锁定理</strong>。</p>\n</li>\n</ul>\n<h4 id=\"死锁的避免\"><a class=\"anchor\" href=\"#死锁的避免\">#</a> 死锁的避免 😎</h4>\n<ul>\n<li>死锁避免法是通过资源分配算法分析系统是否存在一个并发进程的状态序列，在<strong>确定不会进程循环等待</strong>的情况下，才将资源真正分配给进程，以保证并发进程不会产生死锁。</li>\n<li>死锁避免法能支持<strong>更高的进程并发度</strong>，<strong>动态地</strong>决定是否给进程分配资源 —— 如果进程的资源请求方案会导致死锁，系统拒绝执行，反之，如果一个资源的分配会导致死锁，系统拒绝分配。</li>\n</ul>\n<h5 id=\"银行家调度算法\"><a class=\"anchor\" href=\"#银行家调度算法\">#</a> 银行家调度算法 😎</h5>\n<ul>\n<li>\n<p>Dijkstra 在 1965 年提出了避免死锁的银行家调度算法，该算法是以银行系统所采用的借贷策略（尽可能放贷、尽快回收资金）为基础而建立的算法模型。在此模型中，进程相当于贷款客户，系统资源相当于资金，调度程序相当于银行家（贷款经理）。</p>\n</li>\n<li>\n<p>进程约束条件：</p>\n<ul>\n<li>进程必须事先声明其资源需求</li>\n<li>进程每次提出部分资源申请并获得分配</li>\n<li>进程获得所需资源，执行完毕后，必须及时归还所占资源</li>\n</ul>\n</li>\n<li>\n<p>系统约束条件：</p>\n<ul>\n<li>若进程所请求得最大资源数不超过系统所有的资源总数，则系统一定分配资源给进程；</li>\n<li>系统保证在有限的时间内使资源不足而等待的进程获得资源</li>\n</ul>\n</li>\n<li>\n<p>思路</p>\n<ul>\n<li>在某一时刻，各进程已获得所需的部分资源。有一进程提出新的资源请求，系统将剩余资源试探性地分配给该进程。</li>\n<li>如果此时剩余资源能够满足余下的某些进程的需求，则将剩余资源分配给能<strong>充分满足</strong>的、<strong>资源需求缺口最大</strong>的进程，运行结束后释放的资源再并入系统的剩余资源集合。</li>\n<li>反复执行第 2 步，直到所有的进程都能够获得所需而运行结束。说明第 1 步的进程请求是可行的，系统处于安全状态，相应的进程执行序列称为系统的<strong>安全序列</strong>。</li>\n<li>如果所有的进程都试探过而不能将资源分配给进程，即不存在安全序列，则系统是不安全的。</li>\n</ul>\n</li>\n<li>\n<p>银行家算法所需的数据结构：假设系统中有 n 个进程，m 类资源；</p>\n<ul>\n<li>系统当前资源剩余量向量 <code>Available[m] = &#123; R1，R2，……，Rm &#125;</code> ；</li>\n<li>n 个进程对 m 类资源的需求声明矩阵 <code>Claim[n][m]</code> ， <code>Claim[i][j]</code>  的值表示进程 i 对 j 类资源的总需求量；</li>\n<li>n 个进程已获得的各类资源数量矩阵 <code>Possession[n][m]</code> ， <code>Possession[i][j]</code>  的值 <code>k</code>  表示进程 i 已获得 <code>k</code>  个 j 类资源；</li>\n<li>n 个进程的各类资源需求缺口矩阵 <code>Shortage[n][m] = Claim – Possession</code> ， <code>Shortage[i][j]</code>  的值 <code>s</code>  表示进程 i 还需要（缺） <code>s</code>  个 j 类资源；</li>\n<li>某进程 i 在某时刻发出的资源请求向量 <code>Request[m]</code> ，取值随具体情况而定。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>前 4 个数据结构及其取值确定了系统在某一时刻的状态，如果算法尝试资源分配方案能够使得所有进程安全运行完毕，则说明该状态安全，资源分配方案可行。</p>\n</blockquote>\n<ul>\n<li>\n<p>银行家算法细化说明</p>\n<ul>\n<li>判断请求向量 <code>Request</code>  的有效性 ——<strong> 超过相应进程总需求量则报错</strong>，<strong>超过系统目前剩余量则阻塞</strong>；</li>\n<li>就系统资源剩余量对 <code>Request</code>  进行试分配：<br />\n <code>Available[*] = Available[*] - Request[*]</code> ；<br />\n <code>Possession[i][*] = Possession[i][*] + Request[*]</code> ；<br />\n <code>Shortage[i][*] = Shortage[i][*] - Request[*]</code> ；</li>\n<li>执行安全性测试算法，若安全则确认试分配方案，否则进程 i 阻塞；</li>\n</ul>\n</li>\n<li>\n<p>执行安全性测试算法细化说明：</p>\n<ul>\n<li>定义工作向量 <code>Rest[*] = Available[*]</code> ，进程集合 <code>Running&#123;*&#125;</code> ，布尔量 <code>possible = true</code> ；</li>\n<li>从 <code>Running</code>  集合中找出 <code>Pk</code> ，满足条件 <code>Shortage[k][*] &lt; Rest[*]</code> ；</li>\n<li>找到合格的进程 <code>Pk</code> ，则释放其占用资源（ <code>Rest[*] = Rest[*] + Possession[k][*]</code> ），将其从 <code>Running</code>  集合中去掉，重复步骤②；</li>\n<li>找不到合格的进程 <code>Pk</code> ， <code>possible</code>  为 <code>false</code> ，退出安全性测试算法；</li>\n<li>最终检查 <code>Running</code>  集合，为<strong>空</strong>则返回<strong>安全</strong>，非空则不安全。</li>\n</ul>\n</li>\n<li>\n<p>银行家算法是一个很经典的死锁避免算法，<strong>理论性很强</strong>，看起来似乎很完美，但其实现要求进程不相关，并且事先要知道进程总数和各进程所需资源情况，所以<strong>可行性并不高</strong>。</p>\n</li>\n</ul>\n<h4 id=\"检测与解除\"><a class=\"anchor\" href=\"#检测与解除\">#</a> 检测与解除</h4>\n<ul>\n<li>\n<p>死锁的检测算法可以采用<strong>基于死锁定理的检测</strong>（进程 - 资源分配图化简），也可以采用类似于银行家算法中的<strong>安全性测试算法</strong>，如果算法退出时<strong>仍有未结束</strong>的进程，则系统<strong>不安全</strong>，那些未结束的进程就是死锁的进程。</p>\n</li>\n<li>\n<p>只不过死锁检测的不是试分配之后的系统状态，而是<strong>系统当前状态</strong>，需要考虑检查每个进程还需要的资源能否满足要求。</p>\n</li>\n<li>\n<p>在系统中，需要决定<strong>死锁检测的频率</strong>。如果检测太频繁，会花大量的时间检测死锁，浪费 CPU 的处理时间；如果检测的频率太低，死锁进程和系统资源被锁定的时间过长，资源浪费大。</p>\n</li>\n<li>\n<p>通常的方法是在<strong> CPU 的使用率下降到一定的阈值时实施检测</strong>。当死锁发生次数多，死锁进程数增加到一定程度时，CPU 的处理任务减少，CPU 空闲时间增多。</p>\n</li>\n<li>\n<p>在系统成功地检测到死锁后，常用的死锁解除方法有以下几种：</p>\n<ul>\n<li><strong>重启</strong>：重新启动死锁进程，甚至重启操作系统。</li>\n<li><strong>撤销</strong>：撤销死锁进程，回收资源，优先选择占用资源最多或者撤销代价最小的，撤销一个不行就继续选择撤销进程，直至解除死锁。</li>\n<li><strong>剥夺</strong>：剥夺死锁进程资源再分配，选择原则同上。</li>\n<li><strong>回滚</strong>：根据系统保存的检查点，使进程或系统回退到死锁前的状态。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"线程的基本概念\"><a class=\"anchor\" href=\"#线程的基本概念\">#</a> 线程的基本概念</h3>\n<h4 id=\"线程的引入\"><a class=\"anchor\" href=\"#线程的引入\">#</a> 线程的引入</h4>\n<ul>\n<li>在操作系统中再引入线程则是为了<strong>减少程序并发执行时所付出的时空开销</strong>，使操作系统<strong>并发粒度更小</strong>、<strong>并发性更好</strong>。</li>\n<li>线程是操作系统进程中<strong>能够独立执行的实体（控制流）</strong>，是<strong>处理器调度和分派的基本单位</strong></li>\n<li>线程是进程的<strong>组成部分</strong>，线程只拥有一些在运行中<strong>必不可少的资源</strong>（如<strong>程序计数器</strong>、<strong>一组寄存器</strong>和<strong>栈</strong>），与同属一个进程的其它线程<strong>共享进程所拥有的全部资源</strong></li>\n<li>多个线程间可<strong>并发</strong>执行</li>\n<li><strong>不同进程</strong>间的线程<strong>互不可见</strong>，同一进程内的线程间通信主要<strong>基于全局变量</strong></li>\n</ul>\n<h4 id=\"线程与进程的区别与联系\"><a class=\"anchor\" href=\"#线程与进程的区别与联系\">#</a> 线程与进程的区别与联系</h4>\n<ul>\n<li>线程具有许多传统进程所具有的特征，故又称为<strong>轻型进程</strong> (Light-Weight Process) 或进程元；而把传统的进程称为<strong>重型进程</strong> (Heavy-Weight Process)，它<strong>相当于只有一个线程的任务</strong>。</li>\n<li>在引入了线程的操作系统中，通常一个进程都有若干个线程，<strong>至少需要有一个主线程</strong>。</li>\n<li>进程的<strong>再定义</strong>：进程是操作系统中进行<strong>除处理器外</strong>的资源分配和保护的基本单位，它有一个<strong>独立的虚拟地址空间</strong>，用来<strong>容纳进程映像</strong> (如与进程关联的程序与数据)，并<strong>以进程为单位对各种资源实施保护</strong>，如受保护地访问处理器、文件、外部设备及其它进程 (进程间通信)</li>\n<li>线程与进程在调度、并发性、系统开销、拥有资源等方面有所区别</li>\n<li>在传统的操作系统中，拥有资源的基本单位和独立调度的基本单位都是进程。而在引入线程的操作系统中，则把线程作为 CPU 调度和分配的基本单位，而把进程作为拥有资源的基本单位，使传统进程的两个属性分开，线程便能轻装运行，从而可显著地提高系统的并发程度。</li>\n<li>在同一进程中，<strong>线程的切换不会引起进程的切换</strong>，在<strong>由一个进程中的线程切换到另一个进程中的线程</strong>时，将会<strong>引起进程的切换</strong>。</li>\n<li>不论是传统的操作系统，还是支持线程的操作系统，进程都是拥有资源的独立单位，拥有自己的资源。</li>\n<li>一般地说，线程自己不拥有系统资源 (只有一些必不可少的资源)，但可以<strong>访问、共享其隶属进程的资源</strong> —— 进程的代码段、数据段以及打开的文件、I/O 设备等。</li>\n<li>在进行进程切换时，涉及到当前进程<strong>整个 CPU 环境的保存</strong>以及<strong>新被调度运行的进程的 CPU 环境</strong>的设置。</li>\n<li>而线程切换只需<strong>保存和设置少量寄存器</strong>的内容，并<strong>不涉及存储器管理</strong>方面的操作。可见，进程切换的开销也远大于线程切换的开销</li>\n</ul>\n<h4 id=\"线程的三种模式\"><a class=\"anchor\" href=\"#线程的三种模式\">#</a> 线程的三种模式</h4>\n<ul>\n<li>在操作系统内核实现的<strong>内核级线程</strong>（Kernel Level Thread，KLT），如 Windows，OS/2 等：线程管理的全部工作由操作系统内核<strong>在内核空间实现</strong>。系统为应用开发使用内核级线程提供了 API，除了 API 函数调用外，应用程序<strong>不需要</strong>编写任何线程管理的其它代码，通过调用 API 函数，实现线程的创建和控制管理</li>\n<li>在用户空间实现的<strong>用户级线程</strong>（User Level Thread，ULT），如 Java 的线程库等：线程管理的全部工作由应用程序在用户空间实现，<strong>内核不知道线程的存在</strong>。用户级线程由用户空间运行的用户级线程库实现，应用开发通过线程库进行程序设计，<strong>用户级线程库</strong>是线程运行的<strong>支撑环境</strong></li>\n<li>同时支持两种线程的<strong>混合式线程</strong>实现，如 Solaris 系统。设计恰当的话，混合式线程既可以具备内核级线程实现的优点，又可以具备用户级线程实现的优点。用户级线程与内核级线程之间的关系可以有三种模型表示：<strong>一对一</strong>模型、<strong>多对一</strong>模型、<strong>多对多</strong>模型</li>\n</ul>\n<h3 id=\"管程的基本概念\"><a class=\"anchor\" href=\"#管程的基本概念\">#</a> 管程的基本概念</h3>\n<ul>\n<li>\n<p>管程是一种比信号量机制更先进的<strong>进程同步机制</strong></p>\n</li>\n<li>\n<p>基本思想：把分散在各进程中的控制和管理临界资源的临界区<strong>集中</strong>起来统一管理</p>\n</li>\n<li>\n<p>实质上是把临界区集中并封装成<strong>抽象数据类型</strong>，其中包括与临界资源相关、仅限管程内部访问的公共变量，供管程外的进程调用以访问这些公共变量的接口过程，并提供互斥机制确保进程互斥地使用管程</p>\n</li>\n<li>\n<p>管程具有以下特点：</p>\n<ul>\n<li><strong>模块化</strong> —— 管程是一个基本程序单位，其中不仅有数据，还有对数据的操作；</li>\n<li><strong>隐蔽性</strong> —— 管程内与临界资源相关的数据相当于是管程的私有成员，仅限管程内部访问，通过管程申请使用该资源的进程无法直接访问，只能调用管程提供的接口过程；</li>\n<li><strong>互斥性</strong> —— 任一时刻只能有一个进程真正进入管程内部使用相应系统资源，其它进程必须等待，直至管程再次可用</li>\n</ul>\n</li>\n<li>\n<p>管程采用<strong>条件变量</strong>（condition variable）实现同步机制：</p>\n<ul>\n<li>让进入管程却因资源不足而阻塞的进程暂时放弃管程控制权（开放管程），进入该条件变量的等待队列</li>\n<li>条件变量只能在管程中通过两个原语操作 —— <code>wait</code>  原语和 <code>signal</code>  原语</li>\n<li>一个进程<strong>已进入管程但无法继续执行</strong>，便在相应的条件变量 x 上调用 <code>x.wait()</code> ，将自己阻塞并移入 x 的等待队列中，放弃管程控制权（开放管程），另一进程可以通过对同一个条件变量执行 <code>x.signal()</code>  来唤醒之前在 x 上等待的进程</li>\n<li>条件变量仅起到维护等待队列的作用，不存在相关的值，也<strong>不能像信号量那样加减累计</strong><br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/9.png\" alt=\"管程\" /></li>\n</ul>\n</li>\n<li>\n<p>管程与进程的区别：</p>\n<ul>\n<li>管程把共享变量上的同步操作集中起来，而临界区却分散在每个进程中；</li>\n<li>管程是为管理共享资源而建立的，进程主要是为实现系统并发性而引入的；</li>\n<li>管程被进程调用，<strong>管程和调用它的进程不能并行工作</strong>，而进程之间能并行工作，并发性是其固有特性；</li>\n<li>管程是语言或操作系统的组成部分，不必创建或撤销，而进程有生命周期</li>\n</ul>\n</li>\n<li>\n<p>阻塞进程被另一进程以 signal 原语唤醒时的管程互斥协调方法：</p>\n<ul>\n<li>执行 signal 的进程等待，直到被释放的进程退出管程或因等待另一个条件而阻塞</li>\n<li>被释放进程等待，直到执行 signal 的进程退出管程或因等待另一个条件而阻塞</li>\n</ul>\n</li>\n<li>\n<p>Hoare 采用了第一种办法，Hansen 选择了两者的折衷，规定 signal 原语必须位于管程过程的最后一步，于是当一个进程调用管程过程时执行了 signal 原语，也就意味着该进程立即退出管程</p>\n</li>\n<li>\n<p>Hoare 方法使用信号量和 P、V 操作来实现对管程中过程的互斥调用，从而实现对共享资源互斥使用。</p>\n</li>\n<li>\n<p>Hoare 管程的基本思路为：</p>\n<ul>\n<li>管程中设一互斥信号量 <code>mutex</code>  (初值为 1)，用于进程互斥调用管程内部过程</li>\n<li>设置信号量 <code>urgent</code> （初值为 0）和计数器 <code>urgent_count</code> （初值为 0）</li>\n<li>设置信号量 <code>x</code> （初值为 0）用于阻塞等待资源的进程及相应的计数器 <code>x_count</code> （初值为 0）</li>\n</ul>\n</li>\n<li>\n<p>在管程的实现中，将上述 1、2 两条所引入的量封装在一个结构中，称为 <code>InterfaceModule</code> 。</p>\n</li>\n<li>\n<p>Hoare 管程实现的主要代码：</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">InterfaceModule</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    semaphore mutex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 进程调用管程过程前使用的互斥信号量</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    semaphore urgent <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 发出 signal 的进程挂起自己的信号量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> urgent_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span><span class=\"token comment\">// 在 urgent 上等待的进程数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>InterfaceModule IM<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>semaphore x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> x_count<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">.</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">leave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">.</span>urgent _count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 是否存在因执行 signal 而阻塞在 urgent 上的进程</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">.</span>urgent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 有的话先唤醒一个阻塞在 urgent 上的进程</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">else</span> <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">.</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 没有的话直接开放管程</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">wait</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    x_count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">.</span> urgent_count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">.</span>urgent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token function\">V</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">.</span>urgent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    x_count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x_count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    IM<span class=\"token punctuation\">.</span>urgent_count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token function\">V</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">P</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">.</span>urgent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>IM<span class=\"token punctuation\">.</span>urgent_count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"进程同步的几个经典问题用管程来解决\"><a class=\"anchor\" href=\"#进程同步的几个经典问题用管程来解决\">#</a> 进程同步的几个经典问题，用管程来解决</h4>\n<h5 id=\"管程解决生产者-消费者问题\"><a class=\"anchor\" href=\"#管程解决生产者-消费者问题\">#</a> 管程解决生产者 - 消费者问题</h5>\n<ul>\n<li>采用 <code>Hoare</code>  管程实现，继承 <code>Monitor</code>  中原有的定义（如 <code>wait</code> 、 <code>signal</code>  等），自定义可供生产者、消费者进程调用的接口 <code>put</code>  和 <code>get</code>  过程。</li>\n<li>由于管程本身具备互斥机制，所以代码中没有针对多个生产者、消费者竞争使用缓冲区的信号量及操作，直接使用管程中的 <code>enter</code>  和 <code>leave</code> 。</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Monitor p_c_mon<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  item B<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 缓冲区，长度 k</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  condition empty<span class=\"token punctuation\">,</span> full<span class=\"token punctuation\">;</span><span class=\"token comment\">// 缓冲区空满对应的条件变量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> in<span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 缓冲区存取位置，内容产品数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>item px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> count <span class=\"token operator\">>=</span> k <span class=\"token punctuation\">)</span> empty<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 缓冲区已满，在 empty 上阻塞调用 put 的进程</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    B<span class=\"token punctuation\">[</span>in<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> px<span class=\"token punctuation\">;</span> in <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>in <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> k<span class=\"token punctuation\">;</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>full<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">)</span> full<span class=\"token punctuation\">.</span><span class=\"token function\">signal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">&amp;</span> gx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> full<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    gx <span class=\"token operator\">=</span> B<span class=\"token punctuation\">[</span>out<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> out <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>out <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> k<span class=\"token punctuation\">;</span> count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">)</span> empty<span class=\"token punctuation\">.</span><span class=\"token function\">signal</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> in <span class=\"token operator\">=</span> out <span class=\"token operator\">=</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>………<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">leave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>………<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>process <span class=\"token function\">producer_i</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        生产一个产品x</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        p_c_mon<span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        p_c_mon<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        p_c_mon<span class=\"token punctuation\">.</span><span class=\"token function\">leave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>process <span class=\"token function\">consumer_j</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        p_c_mon<span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        p_c_mon<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        p_c_mon<span class=\"token punctuation\">.</span><span class=\"token function\">leave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        消费 x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>coend</pre></td></tr></table></figure><h5 id=\"管程解决哲学家就餐问题的算法\"><a class=\"anchor\" href=\"#管程解决哲学家就餐问题的算法\">#</a> 管程解决哲学家就餐问题的算法</h5>\n<ul>\n<li>采用 Hoare 管程实现，算法思想是将哲学家的状态分为思考、饥饿、吃面，并且仅当哲学家左右两边的筷子都可用才允许他拿筷子，否则一只筷子也不拿。</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Monitor phil_mac_mon<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">enum</span> <span class=\"token punctuation\">&#123;</span> thinking<span class=\"token punctuation\">,</span> hungry<span class=\"token punctuation\">,</span> eating <span class=\"token punctuation\">&#125;</span> state<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  semaphore self<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> self_count<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  InterfaceModule IM<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    state<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> thinking<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    self_count<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> eating<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> hungry<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> eating<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      state<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> eating<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">pickup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">enter</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    state<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> hungry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> eating<span class=\"token punctuation\">)</span> <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">leave</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">void</span>  <span class=\"token function\">putdown</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">enter</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    state<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> thinking<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">leave</span><span class=\"token punctuation\">(</span>IM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>cobegin</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  process <span class=\"token function\">philmac_i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token function\">think</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      phil_mac_mon<span class=\"token punctuation\">.</span><span class=\"token function\">pickup</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      phil_mac_mon<span class=\"token punctuation\">.</span><span class=\"token function\">putdown</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>coend</pre></td></tr></table></figure><h2 id=\"内存管理\"><a class=\"anchor\" href=\"#内存管理\">#</a> 内存管理</h2>\n<h3 id=\"内存管理概述\"><a class=\"anchor\" href=\"#内存管理概述\">#</a> 内存管理概述</h3>\n<h4 id=\"计算机存储系统的组成\"><a class=\"anchor\" href=\"#计算机存储系统的组成\">#</a> 计算机存储系统的组成</h4>\n<ul>\n<li>内存储器（Memory），是处理器能直接寻址的存储空间，由半导体器件制成，用来存放处理器执行时所需要的程序和数据，以及与硬盘等外部存储器交换的数据，程序和数据只有在内存中才能被处理器直接访问。</li>\n<li>外存储器也叫辅助存储器，用来存放需要长期保存的数据，外存储器的管理属于文件系统的范畴。</li>\n<li>内存储器分两部分：\n<ul>\n<li>一部分是系统区，用来存放操作系统以及一些标准子程序、例行程序等，这些是长驻内存的部分，系统区用户不能使用；</li>\n<li>另一部分称为用户区，分配给用户使用，用来存放用户的程序和数据等。内存管理的主要工作就是对内存储器中的用户区进行管理。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"内存管理的功能\"><a class=\"anchor\" href=\"#内存管理的功能\">#</a> 内存管理的功能</h4>\n<ul>\n<li><strong>内存的分配和回收</strong>：操作系统根据用户程序的请求，在<strong>内存中按照一定算法把找到一块空闲，将其分配给申请者；并负责把释放的内存空间收回</strong>，使之变为空闲区。</li>\n<li><strong>实现地址转换</strong>：用户程序中使用逻辑地址，而 CPU 访问内存时则按物理地址进行，内存管理必须进行地址转换工作，把<strong>逻辑地址转换成物理内存中与之对应的物理地址</strong>，这种地址转换工作也称为<strong>地址重定位</strong>。</li>\n<li><strong>内存的共享和保护</strong>：内存中不仅有系统程序，还有多个用户程序，为了防止各用户程序相互干扰和保护各用户区的信息不受破坏，系统必须负责隔离分配给各用户的内存区，<strong>保证各个用户程序或进程在各自规定的存储区域内操作</strong>，不破坏操作系统区的信息，并且互不干扰。</li>\n<li><strong>内存扩充</strong>：内存管理允许通过虚拟存储技术 “扩充” 内存容量。在计算机软、硬件系统的支持下，可以把磁盘等辅助存储器作为内存的扩充部分使用，<strong>使用户程序在所需内存在比实际物理内存容量大的情况下，也能在内存中运行</strong>。</li>\n</ul>\n<h4 id=\"计算机存储系统的结构\"><a class=\"anchor\" href=\"#计算机存储系统的结构\">#</a> 计算机存储系统的结构</h4>\n<h5 id=\"处理器寄存器和高速缓存\"><a class=\"anchor\" href=\"#处理器寄存器和高速缓存\">#</a> 处理器寄存器和高速缓存</h5>\n<ul>\n<li>处理器寄存器主要包括<strong>通用寄存器</strong>、<strong>指令寄存器</strong>、<strong>地址寄存器</strong>和<strong>数据缓冲寄存器</strong>等一系列寄存器，用于存储器中与控制流和数据流相关的信息。它容量小处，速度快，一般以字（word）为单位。一个计算机系统一般包括几十个甚至上百个寄存器。</li>\n<li><strong>高速缓存</strong>（Cache）是为了解决处理器与内存之间速度不匹配而引入的。其<strong>存储容量比处理器寄存器</strong>大，访问速度比寄存器慢，但远比内存快。</li>\n<li>当处理器要读取数据时，首先访问高速缓存，如果所要访问的数据已经在高速缓存中，则直接从高速缓存中读取信息；如果要访问的数据不在高速缓存中，那就需要从内存中读取信息。随着硬件技术的发展，现在已经将高速缓存封装在处理器芯片中，所以常将高速缓存与处理器寄存器归到一个层次。</li>\n</ul>\n<h5 id=\"内存储器\"><a class=\"anchor\" href=\"#内存储器\">#</a> 内存储器</h5>\n<ul>\n<li>内存储器也称为内存，属于主机范畴。内存中存储处理器执行时所需要的代码和数据。<strong>内存的空间远大于高速缓存，但内存中的数据断电即消失</strong>，无法永久储存。一个计算机系统中所配备的内存容量是衡量计算机性能的一个重要的指标，计算机最大内存容量受到计算机系统结构的限制。</li>\n</ul>\n<h5 id=\"外存储器\"><a class=\"anchor\" href=\"#外存储器\">#</a> 外存储器</h5>\n<ul>\n<li>外存储器是计算机系统中最大规模的存储器，用来存储各种数据和软件。<strong>外存储器容量巨大并能够永久存储信息，断电后数据不会丢失</strong>，外存储器的价格低但是访问速度慢。外存储器包括各种磁盘、磁带、光盘以及其他移动存储设备。磁盘中的硬盘是计算机系统中大量联机信息的保存者，硬盘常常作为内存的补充，用来实现虚拟存储系统。</li>\n</ul>\n<h4 id=\"地址的表示与地址转换\"><a class=\"anchor\" href=\"#地址的表示与地址转换\">#</a> 地址的表示与地址转换 😎</h4>\n<h5 id=\"物理地址空间\"><a class=\"anchor\" href=\"#物理地址空间\">#</a> 物理地址空间</h5>\n<ul>\n<li>当程序运行时，它将被装入内存中的某段空间内，此时程序和数据的实际地址不可能同原来的逻辑地址一致，<strong>程序在物理内存中的实际存储单元称为物理地址，也叫绝对地址</strong>，物理地址的总体就构成了用户程序实际运行的物理地址空间。不同程序的物理地址空间绝对不能冲突。</li>\n<li>在以下章节中，如无特别说明，<strong>地址编址和地址长度的单位都是字节（Byte）</strong>。</li>\n</ul>\n<h5 id=\"逻辑地址空间\"><a class=\"anchor\" href=\"#逻辑地址空间\">#</a> 逻辑地址空间</h5>\n<ul>\n<li>高级语言编写的源程序通过编译或汇编后得到目标程序。<strong>目标程序使用的地址称为逻辑地址，也叫相对地址</strong>，一个用户作业的目标程序的逻辑地址集合称为该作业的<strong>逻辑地址空间</strong>。作业的逻辑地址空间可以是一维的，这时逻辑地址限制在从 0 开始顺序排列的地址空间内；也可以是二维的，这时整个用户作业被分为若干段，每段有不同的段号，<strong>段内地址从 0 开始</strong>。</li>\n</ul>\n<h5 id=\"地址转换\"><a class=\"anchor\" href=\"#地址转换\">#</a> 地址转换</h5>\n<ul>\n<li><strong>只有把程序和数据的逻辑地址转换为物理地址，程序才能正确运行</strong>，该过程称为地址转换或地址重定位。地址转换有静态重定位和动态重定位两种方式。</li>\n</ul>\n<h6 id=\"静态重定位\"><a class=\"anchor\" href=\"#静态重定位\">#</a> 静态重定位</h6>\n<ul>\n<li>这种方式是在用户作业装入内存时由装入程序 (装配程序) 实现从逻辑地址到物理地址的转换，<strong>地址转换在作业执行前一次完成</strong></li>\n<li>静态重定位方式的优点是<strong>实现简单</strong>，从逻辑地址到物理地址变换<strong>不需要专门的硬件</strong>便能完成；<strong>缺点是必须为程序分配一段连续的存储空间</strong>，并且程序在<strong>执行过程中不能在内存中移动</strong>。</li>\n</ul>\n<h6 id=\"动态重定位\"><a class=\"anchor\" href=\"#动态重定位\">#</a> 动态重定位</h6>\n<ul>\n<li>在程序执行过程中，CPU 在<strong>访问程序和数据之前</strong>才实现从逻辑地址到物理地址的转换，称为动态重定位。动态重定位必须借助于<strong>硬件地址转换机构</strong>来实现。硬件系统中设置了一个<strong>定位寄存器</strong>，当操作系统为某程序分配了一块内存区域后，装入程序直接把用户程序装入到所分配的区域中，然后把该内存区域的起始地址置入定位寄存器中。在程序执行过程中随着每条指令或数据的访问，需要进行地址转换时，只需将逻辑地址与定位寄存器中的值相加就可得到物理地址。这种地址转换方式是在程序执行过程中动态进行的，所以称动态重定位。</li>\n<li>采用动态重定位时，由于装入内存的用户程序仍保持逻辑地址，所以可以<strong>实现程序在内存中的移动</strong>。在程序执行过程中，若把程序移动到另一块内存区域后，只要改变定位寄存器中的内容，该程序仍可正确执行。但采用静态定位时，程序在执行过程中是不能移动的。</li>\n<li>动态重定位的优点是<strong>内存的使用更加灵活</strong>，<strong>容易实现内存的动态扩充和共享</strong>；缺点是实现过程中<strong>需要附加硬件支持</strong>，内存的管理也更加复杂。</li>\n</ul>\n<h4 id=\"覆盖与交换技术\"><a class=\"anchor\" href=\"#覆盖与交换技术\">#</a> 覆盖与交换技术</h4>\n<h5 id=\"覆盖技术\"><a class=\"anchor\" href=\"#覆盖技术\">#</a> 覆盖技术</h5>\n<ul>\n<li>一个程序通常由若干个功能上独立的程序段组成，在运行时，并不是所有的程序段都同时进入内存执行。这样，我们就可以按照程序自身的逻辑结构，让不同时执行的程序段先后共享同一块内存区域，这就是<strong>覆盖技术</strong>。</li>\n<li>覆盖技术先将程序必需的部分代码和数据调入内存，其余部分先放在外存中，当要访问的程序或数据不在内存时，由操作系统负责将其从外存中调入，这就解决了在较小的内存空间中运行较大程序的问题。</li>\n<li>覆盖技术首先将大的用户程序划分为一个个相对独立的程序单位，将程序执行时不需要同时装入内存的程序单位组成一个个覆盖段，<strong>每个覆盖段的长度不能超过已有内存空间大小</strong>。各个覆盖段分先后顺序进入到所分配的内存空间中，后进入内存的覆盖段将先进入的段覆盖。</li>\n<li>覆盖技术的<strong>缺点</strong>：\n<ul>\n<li>覆盖技术<strong>对用户不透明</strong>，用户在编程时必须划分程序模块和确定程序模块之间的覆盖关系，增加了编程复杂度。</li>\n<li>从外存装入覆盖文件，是以<strong>时间的延长</strong>来<strong>换取空间的节省</strong>。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"交换技术\"><a class=\"anchor\" href=\"#交换技术\">#</a> 交换技术</h5>\n<ul>\n<li>为了释放部分内存空间，由操作系统根据需要，<strong>将某些暂时不运行的进程或程序段从内存移到外存的交换区中</strong>；<strong>当内存空间富余时再给被移出的进程或程序段重新分配内存</strong>，让其进入内存，这就是交换技术，又称为 “<strong>对换</strong>” 或 “<strong>滚进 / 滚出</strong> (roll-in/roll-out)。</li>\n<li>交换技术能够<strong>提高系统的性能和多道度</strong>，从内存到外存的交换为换出，从外存到内存的交换为换入。通过不断的换入、换出，使得用户看来好像内存扩大了，从而实现了<strong>内存扩充</strong>的目的。</li>\n<li>根据每次交换的单位不同，交换技术在实现中有种情况：\n<ul>\n<li>以整个进程为单位的交换：每次换入或换出的是一个进程，此策略多用于早期的分时系统中，以实现在小型机上的分时运行。</li>\n<li>以进程的一部分为单位的交换：在现代操作系统中，借助于页式或段式内存管理，先将进程的内存空间划分为若干页面或段，然后以页面或段为基本单位进行交换。在操作系统中，常见的有页面置换（在页式存储管理中介绍）和段置换（在段式存储管理中介绍），这也是虚拟存储技术的基础。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"覆盖技术和交换技术的比较\"><a class=\"anchor\" href=\"#覆盖技术和交换技术的比较\">#</a> 覆盖技术和交换技术的比较</h5>\n<ul>\n<li>与覆盖技术相比，交换技术<strong>不要求用户给出程序段之间的逻辑覆盖结构</strong>。</li>\n<li>交换发生在<strong>进程或作业之间</strong>，而覆盖发生在<strong>同一进程或作业内</strong>。</li>\n<li>覆盖<strong>只能覆盖那些与覆盖段无关</strong>的程序段。</li>\n</ul>\n<h3 id=\"分区内存管理\"><a class=\"anchor\" href=\"#分区内存管理\">#</a> 分区内存管理</h3>\n<h4 id=\"单一连续内存管理\"><a class=\"anchor\" href=\"#单一连续内存管理\">#</a> 单一连续内存管理</h4>\n<h5 id=\"单一连续内存管理基本思想\"><a class=\"anchor\" href=\"#单一连续内存管理基本思想\">#</a> 单一连续内存管理基本思想</h5>\n<ul>\n<li>单一连续内存管理适用于<strong>单用户单任务操作系统</strong>，是最简单的内存管理方式。单一连续内存管理将内存空间分为<strong>系统区</strong>和<strong>用户区</strong>，系统区存放操作系统<strong>常驻内存的代码和数据</strong>，用户区全部分配给<strong>一个用户</strong>作业使用。在这种方式下，在任一时刻主存储器<strong>最多只有一道程序</strong>，各个作业只能按次序一个一个地装入主存储器运行。</li>\n<li>通常，<strong>系统区</strong>位于内存底部的<strong>低地址</strong>部分，<strong>用户区</strong>位于内存顶部的<strong>高地址</strong>部分。</li>\n</ul>\n<h5 id=\"单一连续内存管理内存的分配与回收\"><a class=\"anchor\" href=\"#单一连续内存管理内存的分配与回收\">#</a> 单一连续内存管理内存的分配与回收</h5>\n<ul>\n<li>由于内存中的用户区只能装入一个程序运行，所以该程序被装入内存时，就从内存用户区的基地址开始，<strong>连续存放</strong>。在运行过程中，该程序独占内存，直到退出，操作系统收回内存再分配给下一个程序使用</li>\n</ul>\n<h5 id=\"单一连续内存管理地址转换与内存保护\"><a class=\"anchor\" href=\"#单一连续内存管理地址转换与内存保护\">#</a> 单一连续内存管理地址转换与内存保护</h5>\n<ul>\n<li>单一连续内存管理多采用<strong>静态重定位</strong>来进行地址转换。操作系统设置一个<strong>界限寄存器</strong>用来设置内存中系统区和用户区的地址界限；通过装入程序把目标模块装入到从界限地址开始的区域</li>\n<li><strong>内存保护</strong>由<strong>装入程序</strong>来执行，装入时由装入程序检查物理地址是否超过界限地址，超过则可以装入；否则产生<strong>地址错误</strong>，不能装入。这样，用户的程序总是被装入到合法的用户区域内，而不会进入系统区。</li>\n<li>采用静态重定位的优点是实现简单，无需硬件地址变换机构支持。缺点是作业只能分配到一个连续存储区域中，程序执行期间不能在内存中移动，无法实现程序共享。</li>\n<li>单一连续内存管理也可以采用<strong>动态重定位</strong>方式来转换地址。系统设置一个<strong>定位寄存器</strong>，它既用来指出内存中的系统区和用户区的<strong>地址界限</strong>，又作为用户区的<strong>基地址</strong>；装入程序把程序装入到从界限地址开始的区域，但不同时进行地址转换；而是在程序<strong>执行过程</strong>中动态地将<strong>逻辑地址与定位寄存器中的值相加</strong>就可得到绝对地址</li>\n</ul>\n<h5 id=\"单一连续内存管理缺点\"><a class=\"anchor\" href=\"#单一连续内存管理缺点\">#</a> 单一连续内存管理缺点</h5>\n<ul>\n<li>内存利用率低。用户程序所需空间一般均小于内存用户区空间，剩余的内存空间也不能被其它用户使用。</li>\n<li>CPU 利用率低。当运行中的程序进行 I/O 操作时，CPU 会处于空闲等待状态。</li>\n<li>外设利用率低。用户控制所有资源，有些资源在运行期间可能并不使用，也不能为其它用户使用。</li>\n<li>不能进行内存扩充。当内存容量小于某一程序所需要的内存空间时，该程序便无法运行。</li>\n</ul>\n<h4 id=\"固定分区内存管理\"><a class=\"anchor\" href=\"#固定分区内存管理\">#</a> 固定分区内存管理</h4>\n<h5 id=\"固定分区内存管理基本思想\"><a class=\"anchor\" href=\"#固定分区内存管理基本思想\">#</a> 固定分区内存管理基本思想</h5>\n<ul>\n<li>固定分区内存管理是预先把可分配的内存空间分割成若干个大小固定的连续区域，每个区域的大小可以相同，也可以不同，每个区域称为一个分区。每个分区可以装入且只能装入一个用户作业。这样，分区后的内存中就可以装入多道程序，从而支持多道程序并发设计。</li>\n</ul>\n<h5 id=\"固定分区内存管理分区的划分\"><a class=\"anchor\" href=\"#固定分区内存管理分区的划分\">#</a> 固定分区内存管理分区的划分</h5>\n<ul>\n<li>\n<p>分区大小相等</p>\n<ul>\n<li>所有分区的大小都相等，这种方式适合<strong>计算机工业控制系统</strong>。因为在计算机工业控制系统中，所有控制对象都具有相同的条件，完成相同的控制任务和控制指标。</li>\n<li>该方式的缺点是：因为分区大小都一样，所以较小的进程装在分区里会浪费内存，而较大的进程则无法装入内存运行。</li>\n</ul>\n</li>\n<li>\n<p>分区大小不等</p>\n<ul>\n<li>把可分配的内存空间分割为大小不等的多个分区，大的分区可以分配给大的进程，小的分区可以分配给小的进程。与分区大小相等分配方式比较，分区大小不等的分配方式使得内存的分配更加灵活，内存的浪费更少。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"固定分区的内存分配\"><a class=\"anchor\" href=\"#固定分区的内存分配\">#</a> 固定分区的内存分配</h5>\n<ul>\n<li>为了说明各分区的分配和使用情况，系统设置一张 “内存分配表”</li>\n<li>内存分配表指出了各分区的<strong>起始地址</strong>和<strong>分区的长度</strong>，<strong>占用标志位</strong>指示该分区是否被使用，当占用的标志位为 “0” 时，表示该分区尚未被占用。</li>\n<li>只<strong>能将那些占用标志为 “0” 的分区分配给用户作业使用</strong>，当某一分区被分配给一个作业后，就在占用标志栏<strong>填上占用该分区的作业名</strong></li>\n</ul>\n<h5 id=\"固定分区的地址转换与内存保护\"><a class=\"anchor\" href=\"#固定分区的地址转换与内存保护\">#</a> 固定分区的地址转换与内存保护</h5>\n<ul>\n<li>静态重定位：装入程序在进行地址转换时检查其绝对地址是否在指定的分区中，若是，则可把程序装入，否则不能装入。固定分区方式的内存回收很简单，只需 ** 将内存分配表中相应分区的占用标志位置成 “0”** 即可。</li>\n<li>动态重定位：计算机系统设置了一对地址寄存器 ——<strong> 上限 / 下限寄存器</strong>；当一个进程占有 CPU 执行时，操作系统就从内存分配表中取出相应的地址放进上限 / 下限寄存器；硬件的地址转换机构根据<strong>下限寄存器</strong>中保存的<strong>基地址 B1</strong> 与<strong>逻辑地址</strong>相加就得到<strong>绝对地址</strong>；硬件的地址转换机构同时把绝对地址和上限 / 下限寄存器中保存的地址进行比较，就可以实现<strong>存储保护</strong>。</li>\n</ul>\n<h5 id=\"固定分区分配的优点和缺点\"><a class=\"anchor\" href=\"#固定分区分配的优点和缺点\">#</a> 固定分区分配的优点和缺点</h5>\n<ul>\n<li>固定分区的划分在<strong>操作系统初始化时完成</strong>。在系统启动时，系统管理员根据系统要运行的作业的需要来划分分区。当用户作业进入分区时，按照用户作业的大小从分区表中选择适当的空闲分区。</li>\n<li>优点：\n<ul>\n<li>与单一连续分配方式比较，固定分区分配方式使得系统资源的利用率和吞吐量有一定的提高。</li>\n</ul>\n</li>\n<li>缺点：\n<ul>\n<li>内存空间的利用率不高</li>\n<li>由于每个分区大小固定，这样就限制了可容纳的程序的大小。在装入一个程序时，若找不到足够大的分区，则无法装入。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"可变分区内存管理\"><a class=\"anchor\" href=\"#可变分区内存管理\">#</a> 可变分区内存管理</h4>\n<h5 id=\"可变分区内存管理基本思想\"><a class=\"anchor\" href=\"#可变分区内存管理基本思想\">#</a> 可变分区内存管理基本思想</h5>\n<ul>\n<li><strong>事先不确定分区的大小，也不确定分区的数目</strong>。当某一用户作业申请内存时，检查内存中是否有一块能满足该作业的连续存储空间，若有就把这一空间划出一块区域给该用户使用，这种方式就称作可变分区内存管理。</li>\n<li>分区的<strong>大小</strong>是按作业的<strong>实际需要量</strong>来定的，分区的个数也是<strong>随机</strong>的，所以可变分区内存分配可以克服固定分区方式中的内存的浪费现象。</li>\n<li>可变分区克服了固定分区内存利用率低的问题，更适合<strong>多道程序环境</strong>。</li>\n<li>操作系统也可以通过<strong>链表</strong>方式来管理空闲分区，将所有的空闲分区通过前向和后向指针串在一起组成双向空闲分区链</li>\n<li>空闲区链表管理比空闲区表格管理较为<strong>复杂</strong>但其优点是<strong>链表自身不占用存储单元</strong>。为了方便检索空闲分区链，每个空闲分区的首部还设置有分区状态和分区大小标志，这样，系统查找分区链时可直接得知分区的大小和分配情况，省去了查询空闲分区表的时间。</li>\n<li>不论是空闲区链表管理还是空闲区表格管理，链和表中的空闲区都可按一定规则排列，例如，按空闲区从大到小排列或从小到大排列，以方便空闲区的查找和回收。</li>\n</ul>\n<h5 id=\"可变分区的内存分配算法\"><a class=\"anchor\" href=\"#可变分区的内存分配算法\">#</a> 可变分区的内存分配算法</h5>\n<h6 id=\"最先适应分配算法\"><a class=\"anchor\" href=\"#最先适应分配算法\">#</a> 最先适应分配算法</h6>\n<ul>\n<li>每次分配时，总是<strong>从头顺序查找</strong>未分配区表或空闲区链表，将找到的<strong>第一个能满足长度要求</strong>的空闲区分配给用户作业使用。从该空闲分区中分割一部分给作业，另一部分仍作为空闲分区；如果空闲分区全部查找完也不能满足该作业要求，则系统不能为该作业分配内存。</li>\n<li><strong>首先利用内存中的低地址空闲分区</strong>，保留了大的高地址空闲分区，以便能容纳大的用户作业。</li>\n<li>缺点：每次都是从未分配分区表或空闲区链表的开始查找空闲分区，低地址段的空闲分区被不断分割，形成了许多小的、难以利用的空闲分区，称为 “<strong>碎片</strong>”；同时每次都从开始查找，<strong>花费时间较长</strong>。</li>\n</ul>\n<h6 id=\"循环首次适应分配算法\"><a class=\"anchor\" href=\"#循环首次适应分配算法\">#</a> 循环首次适应分配算法</h6>\n<ul>\n<li><strong>循环首次适应法</strong>是对最先适应法的改进。为作业分配内存时，系统不是从空闲分区表的开始处开始查找，而是从<strong>上次为作业分配分区后的位置</strong>开始查找，找到第一个满足作业大小的空闲分区，分配并分割该空闲分区。</li>\n<li>该分区分配算法克服了首次适应算法的缺点，使得空闲分区的分布更加均匀，查找空闲分区所需要的时间更短。但是，小分区或 “<strong>碎片</strong>” 问题仍然不能解决。</li>\n</ul>\n<h6 id=\"最优适应分配算法\"><a class=\"anchor\" href=\"#最优适应分配算法\">#</a> 最优适应分配算法</h6>\n<ul>\n<li>从空闲区中挑选一个能满足作业要求的<strong>最小分区</strong>，这样可以避免分割一个更大的区域，使大作业比较容易装入。</li>\n<li>可把空闲区按长度<strong>递增排列</strong>，查找时总是从<strong>最小的一个区</strong>开始，直到找到一个满足要求的区为止。</li>\n<li>收回一个分区时也必须对空闲区链<strong>重新排列</strong>。</li>\n<li>最优适应分配算法找出的分区一般都是无法正好满足作业的内存要求，分割后剩下的空闲区很小，无法再次使用，成为 “<strong>碎片</strong>”。另外，这些小的空闲区占据了空闲区表的开始部分，<strong>增加了查找空闲区表或空闲区链的时间开销</strong>。</li>\n</ul>\n<h6 id=\"最坏适应分配算法\"><a class=\"anchor\" href=\"#最坏适应分配算法\">#</a> 最坏适应分配算法</h6>\n<ul>\n<li>从空闲区中挑选一个<strong>最大的区</strong>给作业使用，这样可使分割后剩下的空闲区仍然比较大，仍然能满足以后的作业装入要求，也<strong>减少了内存中 “碎片” 的大小和个数</strong>。</li>\n<li>可把空闲区按长度以<strong>递减顺序</strong>排列，查找时只要看第一个分区能否满足作业要求，若能满足，则分配给该作业使用。</li>\n<li>最坏适应分配算法的查找效率很高，<strong>对中、小作业有利</strong>。</li>\n<li>最坏适应分配算法缺点：随着系统的运行，大空闲区会不断减少，这样，<strong>大的作业可能会无法装入内存</strong>。</li>\n</ul>\n<h6 id=\"快速适应算法\"><a class=\"anchor\" href=\"#快速适应算法\">#</a> 快速适应算法</h6>\n<ul>\n<li>把不同长度的空闲区归类，为每种长度的空闲区设立单独的<strong>空闲区链表</strong>。这样，系统中存在多个空闲分区链。</li>\n<li>为作业分配内存时，根据作业大小查找空闲分区表，找到能够容纳它的<strong>最小的空闲分区链表的起始指针</strong>，然后再从相应的空闲分区链中取第一个空闲分区分配给该作业即可。</li>\n<li>优点是查找空闲分区<strong>迅速</strong>，找到的空闲分区是能容纳它的最小空闲区，这样能够保留大的空闲分区。</li>\n<li>缺点是<strong>回收分区较困难</strong>，<strong>算法复杂</strong>，<strong>系统开销大</strong>。</li>\n</ul>\n<h6 id=\"对比分析\"><a class=\"anchor\" href=\"#对比分析\">#</a> 对比分析</h6>\n<ul>\n<li>从搜索空闲区速度及内存利用率来看，每种算法各有其优劣势。如果空闲区按从小到大排列，则最先适应分配算法等于最优适应分配算法。反之，如果空闲区按从大到小排列，则最先适用分配算法等于最坏适应分配算法。空闲区按从小到大排列时，最先适应分配算法能尽可能使用低地址区，从而，在高地址空间有较多较大的空闲区来容纳大的作业。循环首次适应分配算法会使存储器空间得到均衡使用。最优适应分配算法的内存利用率最好，因为，它把刚好或最接近申请要求的空闲区分给作业；但是它可能会导致空闲区分割下来的部分很小。</li>\n</ul>\n<h5 id=\"可变分区的地址转换与内存保护\"><a class=\"anchor\" href=\"#可变分区的地址转换与内存保护\">#</a> 可变分区的地址转换与内存保护</h5>\n<ul>\n<li>可变分区内存管理是采用<strong>动态重定位</strong>方式来装入作业的，其地址转换由<strong>硬件机构</strong>完成。硬件设置了两个专门的寄存器：基址寄存器和限长寄存器。</li>\n<li><strong>基址寄存器</strong>存放分配给作业使用的分区的<strong>起始地址</strong></li>\n<li><strong>限长寄存器</strong>存放该分区的存储<strong>空间的长度</strong>。</li>\n<li>当用户作业占有 CPU 运行时，操作系统把分配给该作业的分区的起始地址和长度送入基址寄存器和限长寄存器，启动作业执行时由<strong>硬件</strong>根据基址寄存器进行地址转换得到绝对地址</li>\n<li>当逻辑地址<strong>小于限长值</strong>时，则由<strong>逻辑地址加基址寄存器</strong>的值就可得到绝对地址；当逻辑地址<strong>大于限长值</strong>时，就表示作业欲访问的内存地址<strong>超出了所分得的内存区域</strong>，<strong>禁止访问</strong>该地址，起到了存储保护的目的。</li>\n<li>在多道程序系统中，只需要<strong>一对基址 / 限长寄存器</strong>就足够了。因为当作业在执行过程中出现等待时，操作系统把基址 / 限长寄存器的内容随同该作业的其它信息，如 PSW，通用寄存器的内容等一起保存起来。当作业 - 被选中执行时，则把选中作业的基址 / 限长值再送入基址 / 限长寄存器。</li>\n<li>世界上最早的巨型机 CDC6600 便采用这一方案</li>\n<li>系统运行一段时间后，内存被多次分配和回收，会产生许多不连续的空闲空间。有可能出现这样的现象：内存中每一块空闲空间都不能满足某一作业的内存请求，而所有空闲空间的总和却能满足该作业。这时可采用<strong>紧凑技术</strong>把内存中的作业改变存放区域，使分散的空闲区能够汇聚成一个大的空闲区，从而有利于大作业的装入</li>\n<li>紧凑技术可以汇聚内存中的空闲区，但也<strong>增加了系统的开销</strong>，而且不是任何时候都能对一道程序进行移动的。</li>\n</ul>\n<h3 id=\"页式内存管理\"><a class=\"anchor\" href=\"#页式内存管理\">#</a> 页式内存管理 😎</h3>\n<h4 id=\"页式内存管理基本思想\"><a class=\"anchor\" href=\"#页式内存管理基本思想\">#</a> 页式内存管理基本思想</h4>\n<ul>\n<li><strong>页</strong>：将用户进程的<strong>逻辑地址空间</strong>划分为大小相等的区，每一个区称为一页或一个页面，并对各页从 0 开始编号，如第 0 页、第 1 页等。</li>\n<li><strong>物理块</strong>：将<strong>物理内存</strong>也划分成与页大小相等的区，每一个区称为一个物理块 (block)，或称为块、页框，也同样对它们加以编号，如 0 号块、1 号块等。</li>\n<li>物理块的尺寸大小通常会取 2 的幂次。物理块的大小由计算机硬件决定，<strong>页的大小由物理块的大小决定</strong>。如 Intel 80386 系列处理器系统和 Motorola 68030 处理器系统的块的大小为 4096B，IBM AS/400 的块的大小为 512B</li>\n<li>内存分配的<strong>基本单位</strong>是页，当装入一个用户程序时，按页为单位，每一页装入一个物理块中，一个用户进程装入到内存中时各个物理块之间不需要连续。</li>\n<li>进程的<strong>最后一页经常装不满一块</strong>，所以会在最后一块内形成不可利用的碎片，称之为 “<strong>页内碎片</strong>”。而其他页在装入内存时，都能填满所在的物理块。</li>\n<li>逻辑地址形式：进程的<strong>逻辑地址</strong>可以用<strong>页号</strong>和<strong>页内偏移</strong>表示，页的大小与物理块的大小相等。</li>\n<li>如果进程的<strong>逻辑地址</strong>是 A，<strong>页面大小</strong>是 L，则页号 P 和页内偏移 d 为：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>=</mo><mi>I</mi><mi>N</mi><mi>T</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mi mathvariant=\"normal\">/</mi><mi>L</mi><mo stretchy=\"false\">]</mo><mtext>   </mtext><mi>d</mi><mo>=</mo><mo stretchy=\"false\">[</mo><mi>A</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">%</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">P=INT[A/L]\\ \\ \\ d = [A] \\% L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">NT</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">L</span><span class=\"mclose\">]</span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">]</span><span class=\"mord\">%</span><span class=\"mord mathnormal\">L</span></span></span></span></li>\n</ul>\n<h4 id=\"页式存储管理的内存的分配与回收\"><a class=\"anchor\" href=\"#页式存储管理的内存的分配与回收\">#</a> 页式存储管理的内存的分配与回收</h4>\n<ul>\n<li>页式存储管理在进行内存分配时，以物理块为单位进行分配，一个作业有多少页，在装入内存时就必须给它分配多少个物理块。但是，和分区式内存管理不同的是分配给作业的物理块可以是<strong>不连续</strong>的。</li>\n<li>在进行内存分配时，首先，操作系统为进入内存的每个用户作业建立一张<strong>页表</strong>，页表用来指出逻辑地址中的页号与内存中物理块号的对应关系。</li>\n<li>同时，在页式存储管理系统中还存在一张<strong>作业表</strong>，作业表中的每个登记项登记了每个作业的<strong>页表始址和长度</strong></li>\n<li>页表的表项中除了有页号和块号外，还有<strong>存取控制字段</strong>，用于实现<strong>对内存物理块的保护</strong>。页表的长度由<strong>用户进程的长度</strong>决定，每个在内存中的用户进程都会建立一张页表。如果进程不处于运行状态，页表的起始地址和长度存放在进程的 PCB 中。</li>\n<li>只有某一进程被调度运行时，系统才会从运行进程的 PCB 中将页表起始地址和长度装入页表寄存器。所以，<strong>一个处理器只需要一个页表寄存器</strong>。</li>\n</ul>\n<h4 id=\"页式存储管理的地址转换\"><a class=\"anchor\" href=\"#页式存储管理的地址转换\">#</a> 页式存储管理的地址转换 😎</h4>\n<ul>\n<li>在页式存储管理中，进程的逻辑地址到物理地址的转换需要硬件来完成，该硬件为<strong>地址转换机构</strong><br />\n当处理器要访问某逻辑地址时，地址转换机构自动从逻辑地址的<strong>低地址部分得到页内偏移</strong>，<strong>从高地址部分得到页号</strong>。</li>\n<li>将<strong>页号</strong>与页表寄存器中的<strong>页表长度</strong>比较，如果页号大于或等于页表长度，表示该页在页表中没有相应项，本次所访问的地址已经超越进程的地址空间，则产生<strong>地址越界中断</strong>；否则，从页表寄存器得到页表在内存中的<strong>起始地址</strong>。用<strong>页号</strong>作为索引查找页表，得到<strong>页表项</strong>，从而可以查到该页在内存中的<strong>物理块号</strong>。</li>\n<li>最后，将<strong>页内偏移</strong>装入物理地址寄存器的<strong>低位字段</strong>中，将<strong>物理块号</strong>装入物理地址寄存器的<strong>高位字段</strong>中，此时物理地址寄存器中的内容就是<strong>物理地址</strong><br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/image.png\" alt=\"页式存储管理的地址转换机构\" /></li>\n</ul>\n<h4 id=\"快表\"><a class=\"anchor\" href=\"#快表\">#</a> 快表 😎</h4>\n<ul>\n<li>由地址转换过程可见，处理器每运行一条指令总是<strong>先根据指令的逻辑地址</strong>，通过<strong>访问内存中的页表</strong>才能得到<strong>物理地址</strong>，根据物理地址再去<strong>访问内存</strong>才能得到需要的指令，即处理器需要<strong>两次</strong>访问内存。同样，处理器要<strong>访问</strong>一个数据也需要<strong>两次</strong>访问内存。</li>\n<li>为了提高程序的运行速度，可以将最近访问过的页的页表项信息存放在<strong>高速缓存</strong>中，高速缓存也称为 “联想存储器”，其中的<strong>页表</strong>称为 “<strong>快表</strong>”。</li>\n<li>计算机系统中通常都设置一个专用的高速缓冲存储器，用来存放页表的一部分，称为<strong>相联存储器</strong>（associative memory），存放在相联存储器中的页表称快表。</li>\n<li>相联存储器的访问速度比内存快，但造价高，故一般都是小容量的，例如 8~16 个单元。高速缓冲存储器由半导体实现，其工作周期与 CPU 的工作周期接近，所以访问快表的速度远快于访问内存中页表的速度。</li>\n<li>借助于快表，<strong>物理地址</strong>形成的过程是：\n<ul>\n<li>按逻辑地址中的页号查快表，若该页已登记在快表中，则由<strong>块号</strong>和<strong>块内偏移</strong>形成<strong>绝对地址</strong>；</li>\n<li>若快表中查不到页号，则只能再查内存中的<strong>页表</strong>来形成绝对地址，同时<strong>将该页登记到快表中</strong>。</li>\n<li>当快表填满后，又要在快表中登记新页时，则需在快表中按<strong>一定策略淘汰一个旧的登记项</strong>，最简单的策略是 “先进先出”，即总是淘汰最先登记的那一页。</li>\n</ul>\n</li>\n<li>多道程序中，当某道程序让出处理器时，应<strong>同时让出相联存储器</strong>。由于快表是动态变化的，所以让出相联存储器时应把快表保护好以便再执行时使用。当一道程序占用处理器时，除设置页表寄存器外还应将它的<strong>快表送入相联存储器</strong>中。</li>\n</ul>\n<h4 id=\"页的共享和保护\"><a class=\"anchor\" href=\"#页的共享和保护\">#</a> 页的共享和保护</h4>\n<ul>\n<li>页式存储管理有利于<strong>实现多个作业共享程序和数据</strong>。在多道程序系统中，编译程序、编辑程序、解释程序、公共子程序、公用数据等都是可共享的，这些共享的信息在内存中只要保留一个副本。</li>\n<li>在实现共享时，必须<strong>区分数据的共享和程序的共享</strong>。</li>\n<li>实现数据共享时，可<strong>允许不同的作业对共享的数据页使用不同的页号</strong>，只要让各自页表中的有关表目指向共享的数据物理块。</li>\n<li>实现程序共享时，由于页式存储的逻辑地址空间是连续的，所以<strong>程序运行前它们的页号应该是确定</strong>的。</li>\n<li>实现信息共享必须解决信息的保护问题。常用的办法是在页表中增加一些<strong>标志位</strong>，用来指出该页的信息是：读 / 写；只读；只可执行；不可访问等，在指令执行时进行核对。</li>\n</ul>\n<h4 id=\"多级页表\"><a class=\"anchor\" href=\"#多级页表\">#</a> 多级页表</h4>\n<ul>\n<li>\n<p>为了快速查找页表页在内存中的物理块号，为这些页表页再设计一个地址索引表，即<strong>页目录表</strong>。页目录表的表项中包含每个页表页所在的内存物理块号和相关信息。</p>\n</li>\n<li>\n<p>页表页中的每个表项记录了<strong>每个页的页号和对应的物理块号</strong><br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/image-1.png\" alt=\"二级页表\" /></p>\n</li>\n<li>\n<p>二级页表的逻辑地址被划分为三部分：<strong>页目录</strong>、<strong>页表页</strong>、<strong>页内偏移</strong></p>\n</li>\n<li>\n<p>地址转换过程：</p>\n<ul>\n<li>首先由<strong>页目录表寄存器</strong>提供当前运行进程的页目录表（一级页表）在内存中的<strong>起始地址</strong>；</li>\n<li>由页目录表（一级页表）在内存中的<strong>起始地址</strong>加上<strong>页目录号</strong>（即需要查找的页表某页在页目录中的编号）, 得到页表某页的<strong>物理块号</strong>；</li>\n<li>通过页表某页的<strong>物理块号</strong>得到<strong>该页表页</strong>（二级页表中的一页），由<strong>页表页号</strong>（某页在页表页中的编号）查询该页表页（二级页表中的一页）项，得到对应的<strong>物理块号</strong>；</li>\n<li>最后将该物理块号加上页内偏移，最终得到物理地址<br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/image-2.png\" alt=\"二级页表地址转换过程\" /></li>\n</ul>\n</li>\n<li>\n<p>二级页表地址变换获取内存信息需要<strong>三次</strong>访问内存：第一次访问的是<strong>页目录表</strong>，第二次访问的是<strong>页表页</strong>，第三次访问通过<strong>物理地址获取内存信息</strong>。</p>\n</li>\n</ul>\n<h3 id=\"段式存储管理\"><a class=\"anchor\" href=\"#段式存储管理\">#</a> 段式存储管理</h3>\n<h4 id=\"段式存储管理的基本原理\"><a class=\"anchor\" href=\"#段式存储管理的基本原理\">#</a> 段式存储管理的基本原理</h4>\n<ul>\n<li>事实上，一个程序往往由一个程序段、若干子程序数组段和工作区段所组成，每个段都从 “0” 开始编址，<strong>段内地址是连续</strong>的。因此，可以按照程序的逻辑段结构，将一个程序按段为单位来分配内存，一段占用一块连续的内存地址空间，段与段之间不需要连续。</li>\n<li>分段式存储管理是以段为单位进行内存分配，逻辑地址空间是一个<strong>二维空间</strong>，分为<strong>段号</strong>和<strong>段内偏移</strong>两部分</li>\n<li>页式存储管理中，<strong>逻辑地址分页用户不可见</strong>，连续的逻辑地址空间根据<strong>内存物理块</strong>的大小自动分页。</li>\n<li>段式存储管理中，由用户来决定逻辑地址如何分段。用户在编程时，每个段的最大长度受到<strong>地址结构</strong>的限制，每个程序中允许的<strong>最多段数</strong>也受限制。</li>\n<li>分段存储管理中操作系统为每个作业创建一张段表，每个段在段表中占有一项。<strong>段表</strong>中有<strong>段号</strong>、<strong>段长</strong>、段在内存的<strong>起始地址</strong>和<strong>存取控制字段</strong>等信息。</li>\n<li>段式存储管理系统还包括一张作业表，每个作业在作业表中有一个<strong>登记项</strong>。</li>\n<li>在段式存储管理中，对内存的分配类似于<strong>可变分区内存分配方式</strong>，因此其内存分配算法可以参照可变分区内存分配算法来设计</li>\n</ul>\n<h4 id=\"段式存储管理的地址转换和内存保护\"><a class=\"anchor\" href=\"#段式存储管理的地址转换和内存保护\">#</a> 段式存储管理的地址转换和内存保护</h4>\n<ul>\n<li>段地址转换借助于<strong>段表</strong>完成。<strong>段表寄存器</strong>用来存放当前占用处理器的作业的<strong>段表始址</strong>和<strong>长度</strong>，查询段表得到每段在内存的起始地址，将<strong>段的起始地址加上段内偏移</strong>则得到<strong>物理地址</strong><br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/image-3.png\" alt=\"段式存储管理的地址转换和存储保护\" /></li>\n<li>段地址转换过程如下：\n<ul>\n<li>将 CPU 给出的逻辑地址由<strong>段号</strong>和<strong>段内地址</strong>（即段内偏移）构成；</li>\n<li>查询<strong>段表寄存器</strong>得到段表在内存的<strong>起始地址</strong>；</li>\n<li>将段号带入<strong>查询段表</strong>，得到该段在内存的<strong>起始地址</strong>和<strong>段长</strong>；</li>\n<li>将段内地址与段长比较，如果段内地址大于段长，则发出<strong>越界中断</strong>；否则合法。段在内存的起<strong>始地址与段内地址相加</strong>，就为该逻辑地址对应的内存<strong>物理地址</strong>。</li>\n</ul>\n</li>\n<li>利用段表寄存器中的段表长度与逻辑地址中的段号比较，若段号超过段表长则产生越界中断，再利用段表项中的段长与逻辑地址中的段内偏移比较，检查是否产生越界中断。</li>\n<li>对段的越权保护可通过在段表中增加相应的存取控制权限字段来实现。权限字段显示对段的读、写是否允许，用它来检查对该段内地址的访问操作是否合法。只有当每次操作都在合法的权限范围内，才能正常完成访问操作，否则出错。</li>\n</ul>\n<h4 id=\"段的共享\"><a class=\"anchor\" href=\"#段的共享\">#</a> 段的共享</h4>\n<ul>\n<li>在段式存储管理中，所谓段的共享，事实上就是<strong>共享分区</strong>，为此计算机系统要提供<strong>多对基址 / 限长寄存器</strong>。这样，几个作业所共享的例行程序就可放在一个公共的分区中，只要让各道的共享部分有相同的<strong>基址 / 限长值</strong>。</li>\n<li>由于段号仅仅用于段之间的相互访问，段内程序的执行和访问<strong>只使用段内地址</strong>，因此不会出现页共享时出现的问题，对数据段和代码段的共享都不要求段号相同。当然<strong>对共享区的信息必须进行保护</strong>，如规定只能读出不能写入，欲想往该区域写入信息时将遭到拒绝并产生中断</li>\n</ul>\n<h4 id=\"分段和分页的比较\"><a class=\"anchor\" href=\"#分段和分页的比较\">#</a> 分段和分页的比较</h4>\n<ul>\n<li>段是信息的<strong>逻辑单位</strong>，由源程序的逻辑结构所决定，<strong>用户可见</strong>，段长可根据用户需要来规定，段起始地址可以从任何地址开始。在分段方式中，源程序 (段号，段内偏移) 经连结装配后仍保持<strong>二维结构</strong>。</li>\n<li>页是信息的<strong>物理单位</strong>，与源程序的逻辑结构无关，<strong>用户不可见</strong>，页长由系统确定，页面只能以页大小的整倍数地址开始。在分页方式中，源程序 (页号，页内偏移) 经连结装配后变成了<strong>一维结构</strong>。</li>\n</ul>\n<h4 id=\"段页式存储管理\"><a class=\"anchor\" href=\"#段页式存储管理\">#</a> 段页式存储管理</h4>\n<ul>\n<li>页式存储基于存储器的物理结构，存储利用率高，便于管理，但难以实现存储共享、保护和动态扩充；段式存储基于应用程序的结构，有利于模块化程序设计，便于段的扩充、动态链接、共享和保护，但往往会形成段之间的碎片，浪费存储空间。</li>\n<li>可以把两者结合起来，在分段式存储管理的基础上实现分页式存储管理，这就是段页式存储管理。</li>\n<li>段页式存储管理的基本原理：\n<ul>\n<li>程序根据自身的逻辑结构划分成若干段，这是段页式存储管理的<strong>段式特征</strong>。</li>\n<li>内存的物理地址空间划分成大小相等的物理块，这是段页式存储管理的<strong>页式特征</strong>。</li>\n<li>将每一段的<strong>线性地址空间划分成与物理块大小相等的页面</strong>，于是形成了段页式存储管理。</li>\n<li>逻辑地址分 3 个部分：<strong>段号</strong>、<strong>段内页号</strong>和<strong>页内位移</strong>，对于用户来说，虚拟地址应该由段号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 和段内位移<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>d</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">d&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 组成，用户看不到如何分页。而是由操作系统自动把<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>d</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">d&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 解释成两部分：段内页号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 和页内位移<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span>，也就是说，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>d</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mi>p</mi><mo>×</mo><mtext>块长</mtext><mo>+</mo><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d&#x27;=p×块长+d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord cjk_fallback\">块长</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span>。</li>\n<li>段页式存储管理的数据结构包括段表和页表，段表中包括<strong>段号</strong>、该段页表的<strong>起始地址</strong>、<strong>页表长度</strong>等信息，页表中包括<strong>页号</strong>、对应的<strong>物理块号</strong>等信息<img loading=\"lazy\" data-src=\"ComputerSystem/image-4.png\" alt=\"段表、页表和内存的关系\" /></li>\n<li>段页式存储管理的<strong>动态地址转换机构</strong>由段表、页表和快表构成，操作系统把正在运行的作业的<strong>段表起始地址</strong>装入<strong>段表寄存器</strong>中，操作系统从<strong>逻辑地址</strong>中取出<strong>段号</strong>和<strong>段内页号</strong>，用<strong>段号</strong>作为<strong>索引查询快表中</strong>的段表，如果从快表得到<strong>页表起始地址</strong>和<strong>页表长度</strong>，再查询快表中的页表，从而得到所在页面对应的<strong>内存物理块号</strong>，将该<strong>物理块号与页内位移拼接</strong>，即为所需要的<strong>物理地址</strong>。如果不能从快表得到段和页的信息，则需要用<strong>段号作为索引查询内存中的段表</strong>，得到<strong>页表长度</strong>和<strong>页表的起始地址</strong>。再以<strong>页号作为索引查询页表</strong>，得到该页所对应的<strong>物理块号</strong>，同时将段表中的<strong>相应段信息</strong>和<strong>页表中的相应信息</strong>写入<strong>快表</strong>，并将<strong>物理块号与页内位移拼接</strong>，就可以得到<strong>物理地址</strong>。<img loading=\"lazy\" data-src=\"ComputerSystem/image-5.png\" alt=\"段页式存储管理地址转换和存储保护\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"虚拟存储技术\"><a class=\"anchor\" href=\"#虚拟存储技术\">#</a> 虚拟存储技术</h3>\n<h4 id=\"程序局部性原理\"><a class=\"anchor\" href=\"#程序局部性原理\">#</a> 程序局部性原理</h4>\n<ul>\n<li>即在一段时间内，整个程序的执行仅限于程序中的某一部分。相应地，执行所访问的存储空间也局限于某个内存区域。局部性原理表现在时间局部性和空间局部性两个方面。</li>\n<li><strong>时间局部性</strong>是指如果程序中的某条指令一旦执行，则不久之后该指令可能再次被执行；如果某数据被访问，则不久之后该数据可能再次被访问。例如，很多程序中存在大量的循环、临时变量和子程序调用等。</li>\n<li><strong>空间局部性</strong>是指一旦程序访问了某个存储单元，则不久之后其附近的存储单元也将被访问。例如程序中对数组、链表或堆栈进行操作。</li>\n<li>程序的局部性原理说明：<strong>程序的一次性装入内存与全部驻留内存都是不必要的</strong>。</li>\n</ul>\n<h4 id=\"虚拟存储技术的基本思想\"><a class=\"anchor\" href=\"#虚拟存储技术的基本思想\">#</a> 虚拟存储技术的基本思想 😎</h4>\n<ul>\n<li>虚拟存储技术的思想：将外存作为内存的扩充，作业运行不需要将作业的全部信息放入内存，将暂时不运行的作业信息放在外存，通过内存与外存之间的对换，使系统逐步将作业信息放入内存，最终达到能够运行整个作业，从逻辑上扩充内存的目的。</li>\n<li>虚拟存储器定义：虚拟存储器是指具有<strong>请求调入</strong>功能和<strong>置换</strong>功能，能够从逻辑上对内存空间进行扩展，允许用户的<strong>逻辑地址空间大于物理内存地址空间</strong>的存储器系统<img loading=\"lazy\" data-src=\"ComputerSystem/image-6.png\" alt=\"虚拟存储器的组织形式\" /></li>\n<li>虚拟存储器的容量由计算机的<strong>地址结构</strong>和<strong>辅助存储器</strong>的容量决定，与实际的主存储器的容量无关。</li>\n<li>虚拟存储技术的实现基础是<strong>内存的分页或分段管理</strong>，采用的是进程的分页或分段在内存与外存之间对换</li>\n<li>虚拟存储技术允许进程的逻辑地址空间比物理内存空间大，即<strong>小空间能够运行大程序</strong>，打破了程序运行受内存空间的约束，使操作系统不但能够接纳更大的作业，而且还能接纳更多的作业，提高了系统的<strong>多道度</strong>和<strong>性能</strong>。</li>\n</ul>\n<h3 id=\"请求分页虚拟存储管理\"><a class=\"anchor\" href=\"#请求分页虚拟存储管理\">#</a> 请求分页虚拟存储管理</h3>\n<h4 id=\"请求分页虚拟存储管理的基本原理\"><a class=\"anchor\" href=\"#请求分页虚拟存储管理的基本原理\">#</a> 请求分页虚拟存储管理的基本原理</h4>\n<ul>\n<li>请求分页虚拟存储管理是在页式存储管理的基础上增加了<strong>请求调页</strong>和<strong>页面置换</strong>功能，其基本原理如下：\n<ul>\n<li>首先，物理的内存空间被划分为<strong>等长的物理块</strong>，并对块编号。同时，用户程序也进行分页，这些与页式存储管理相同。</li>\n<li>在用户程序开始执行前，不将该程序的所有页都一次性装入内存，而是先放在外存。当程序被调度投入运行时，系统先将少数页装入内存，随着程序运行，如果所访问的页在内存中，则对其管理与分页存储管理情况相同。</li>\n<li>若发现所要访问的数据或指令不在内存中，就会产生<strong>缺页中断</strong>，到外存寻找包含所需数据或指令的页，并将其装入到内存的空闲块中。</li>\n<li>在装入一页的过程中，若发现内存无空闲块或分配给该进程的物理块已用完，则需要通过页面置换功能从已在内存的页中挑选一个将其淘汰，释放所占用的物理块后将新的页面装入该块，进程继续运行。</li>\n<li>被淘汰的页面如果刚才被修改过，则还需要将其<strong>回写到外存</strong>，以保留其最新内容。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"请求分页虚拟存储管理的硬件支持\"><a class=\"anchor\" href=\"#请求分页虚拟存储管理的硬件支持\">#</a> 请求分页虚拟存储管理的硬件支持</h4>\n<h5 id=\"请求分页的页表机制\"><a class=\"anchor\" href=\"#请求分页的页表机制\">#</a> 请求分页的页表机制</h5>\n<ul>\n<li>在虚拟存储管理中，页表除了要完成从逻辑地址到物理地址的转换外，还需要提供页面置换的相关信息。因此，页表中除了有<strong>页号</strong>和<strong>物理块号</strong>等信息外，还增加了页的<strong>状态位</strong>、<strong>外存地址</strong>、<strong>修改位</strong>、<strong>访问字段</strong>等信息</li>\n<li><strong>状态位</strong>：用于标志一页是否已装入内存。如果该页已在内存，则该页所对应的状态位置 “1”；否则置 “0”。</li>\n<li><strong>外存地址</strong>：页在外存中的地址。当需要将某页调入内存时，需要查询页表中的外存地址项得到该页在外存的地址，在外存找到该页。</li>\n<li><strong>修改位</strong>：页在内存中是否被修改过的标志，用来确定如果该页被换出内存时，是否需要再回写入外存。如果该页在内存里没有被修改过，那么该页中的内容和在外存中的内容是一致的，则被换出内存时不需要再写入外存，节约了写入外存的时间。如果该页在内存中已经被修改过了，被换出内存时需要再写入外存。</li>\n<li><strong>访问字段</strong>：标志页在内存时是否被访问过。用于进行页面置换时考虑是否将该页换出内存。如果该页被访问过，在进行页面置换时，系统会考虑该页可能以后会被再次访问而不将其换出。</li>\n</ul>\n<h5 id=\"缺页中断机构\"><a class=\"anchor\" href=\"#缺页中断机构\">#</a> 缺页中断机构</h5>\n<ul>\n<li>在进程运行过程中，当发现所访问的页不在内存时，缺页中断机构便产生一个缺页（Page fault）中断信号，操作系统接到此信号后，就运行缺页中断处理程序，将所需要的页调入内存。缺页中断与一般中断类似，都需要经历<strong>保护 CPU 环境</strong>、<strong>分析中断原因</strong>、<strong>转入中断程序处理</strong>、<strong>中断处理后恢复 CPU 环境</strong>等步骤。</li>\n<li>但缺页中断与一般中断也有不同：\n<ul>\n<li><strong>CPU 检测中断的时间不同</strong>。对一般的中断信号，CPU 是在一条指令执行完后检测其是否存在，检测时间以一个指令周期为间隔。而对缺页中断信号，CPU 在一条指令执行期间，只要有中断信息就可检测，不需要等待一个指令周期。因此，CPU 检测缺页中断更及时。</li>\n<li><strong>CPU 可以多次处理</strong>。如果在一个指令周期中多次检测到缺页中断，CPU 都会及时处理。<br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/image-7.png\" alt=\"缺页中断的处理过程\" /></li>\n</ul>\n</li>\n<li><strong>缺页中断处理流程</strong>：\n<ul>\n<li>先查看<strong>内存是否有空闲块</strong>，若有则按该<strong>页在外存中的地址</strong>将该页找出并装入内存，<strong>在页表中填上它占用的块号</strong>且<strong>修改标志位</strong>。</li>\n<li>若内存已<strong>没有空闲块</strong>，则必须<strong>先淘汰已在内存中的某一页</strong>，再将所需的页装入，对页表和内存分配表作相应的修改。</li>\n</ul>\n</li>\n<li>淘汰某页时，要查看该页的<strong>修改位</strong>来判断该页是否修改过，若该页在执行过程中<strong>没有被修改过</strong>，那么<strong>不必重新写回到存储器</strong>中，而<strong>已修改过的页</strong>调出时必须再<strong>将该页写回到外存</strong>中。</li>\n</ul>\n<h5 id=\"地址转换机构\"><a class=\"anchor\" href=\"#地址转换机构\">#</a> 地址转换机构</h5>\n<ul>\n<li>请求分页虚拟存储技术是在<strong>程序执行过程</strong>中逐步将程序页面调入内存的，所以从逻辑地址到物理地址的转换是在程序运行过程中完成的，是<strong>动态重定位装入</strong><img loading=\"lazy\" data-src=\"ComputerSystem/image-8.png\" alt=\"请求分页虚拟存储的地址转换机构\" /></li>\n<li>当进程被调度时，操作系统将进程 PCB 中的页表起始地址和长度装入<strong>页表寄存器</strong>中。</li>\n<li>CPU 从逻辑地址中取得页号，根据页号查询快表，如果快表中有该页的内存块号，则将内存块号与页内偏移一起作为该页在内存的物理地址；如果快表中没有该页的内存块号，则 CPU 从页表寄存器得到页表在内存中的起始地址，查询页表，得到该页的内存块号，则将该块号与页内偏移一起作为该页在内存中的物理地址，同时将该页的页号和内存块号写入快表，以备下次查询时使用。</li>\n<li>如果查询页表而没有得到该页的内存块号，即表示该页不在内存，产生一个缺页中断信号，请求操作系统将该页调入内存。</li>\n<li>在调入一页的过程中，如果进程空间没有空余的物理块，则系统需要调出一页后再将该新页调入内存。同时系统修改页表，从页表中去除调出的页面，加上调入的页面。当这些工作完成后，处理器返回用户进程，继续执行被中断的指令。</li>\n</ul>\n<h4 id=\"页面分配策略与页面调度算法\"><a class=\"anchor\" href=\"#页面分配策略与页面调度算法\">#</a> 页面分配策略与页面调度算法 😎</h4>\n<ul>\n<li>请求分页虚拟存储管理支持多个进程同时装入内存，操作系统为各个进程分别分配部分物理块，并将各自的部分页调入内存，在实施中涉及到以下三个策略：\n<ul>\n<li>页面<strong>分配</strong>策略：分配策略决定系统应该给一个进程分配多少<strong>物理块</strong>，进程才能运行。</li>\n<li>页面<strong>调入</strong>策略：页面调入策略决定如何将进程所需要的<strong>页面调入到内存</strong>。</li>\n<li>页面<strong>置换</strong>策略：页面置换策略决定内存中的哪些页面被<strong>换出内存</strong>。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"页面分配策略\"><a class=\"anchor\" href=\"#页面分配策略\">#</a> 页面分配策略</h5>\n<h6 id=\"固定分配方式\"><a class=\"anchor\" href=\"#固定分配方式\">#</a> 固定分配方式</h6>\n<ul>\n<li>\n<p>为每个进程分配固定数量的物理块，其数量在进程创建时，由进程的类型（交互性、批处理或应用性）或根据用户的要求确定，在进程的整个运行期间都<strong>不再改变</strong>。</p>\n</li>\n<li>\n<p>具体的分配方式包括按进程平均分配法、进程按比例分配法和进程优先权分配法等。</p>\n</li>\n<li>\n<p><strong>进程平均分配</strong>法：将内存中所有可分配的物理块平均分配给进入系统的各个进程。如果有 m 个<strong>内存物理块</strong>，n 个<strong>进程</strong>，则每个进程分得的<strong>内存物理块数</strong>为 m/n 取整数（小数部分不计）。</p>\n<ul>\n<li>该分配方法实现简单，但没考虑各个进程大小不一，常常会<strong>造成内存的浪费</strong>。</li>\n<li>该分配方式另一个特点：分配给每个进程的物理块数会随着内存中进程数的多少而变化。</li>\n</ul>\n</li>\n<li>\n<p><strong>进程按比例分配</strong>法：根据进程的大小，进程<strong>按照比例</strong>分配内存物理块数。如果系统中有 m 个内存物理块，n 个并发进程，每个进程的页面数为 S<sub>i</sub>。则系统中每个进程能够分得的内存物理块数 b<sub>i</sub> 为（b<sub>i</sub> 取整）：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub><mo>=</mo><mo stretchy=\"false\">(</mo><mi>m</mi><msub><mi>S</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>÷</mo><mo stretchy=\"false\">(</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>S</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">b_i=(mS_i)\\div(\\sum\\limits_{i=1}^n S_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">÷</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3291em;vertical-align:-0.9777em;\"></span><span class=\"mopen\">(</span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3514em;\"><span style=\"top:-2.1223em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.95em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p><strong>进程优先权分配</strong>法：<strong>高优先级</strong>的、<strong>时间要求紧迫</strong>的进程，操作系统给其分配较多的内存物理块，使其能够快速完成。在实际应用中，将<strong>按比例分配法和进程优先级结合</strong>起来考虑，系统把内存中可以分配的物理块分为两部分，一部分按照比例分配给各并发进程，另一部分根据进程的优先级进行适当增加。</p>\n</li>\n</ul>\n<h6 id=\"可变分配方式\"><a class=\"anchor\" href=\"#可变分配方式\">#</a> 可变分配方式</h6>\n<ul>\n<li>可变分配方式是指分配给进程的物理块数，在该进程的运行期间可以<strong>动态变化</strong>。它用来<strong>解决由于事先分配给进程的物理块太少而导致的频繁缺页问题</strong>。</li>\n<li>具体实现时，先为每一进程分配必要数量的物理块，使之可以开始运行，系统中余下的空闲物理块组成一个空闲物理块队列，当某一进程在运行过程中发生缺页时，系统从空闲物理块队列中取出一个空闲块分配给该进程。只要该空闲队列中还有物理块，凡发生缺页的进程都可以才该队列中申请并获得物理块。</li>\n</ul>\n<h6 id=\"进程的最小物理块数\"><a class=\"anchor\" href=\"#进程的最小物理块数\">#</a> 进程的最小物理块数</h6>\n<ul>\n<li>最小物理块数是保证进程正常运行所需要的<strong>最小内存块数</strong>。进程需要的最小物理块数与计算机的硬件结构有关，取决于计算机的<strong>指令格式</strong>、<strong>功能</strong>和<strong>寻址方式</strong>。</li>\n</ul>\n<h5 id=\"页面调入策略\"><a class=\"anchor\" href=\"#页面调入策略\">#</a> 页面调入策略</h5>\n<h6 id=\"请求页调入\"><a class=\"anchor\" href=\"#请求页调入\">#</a> 请求页调入</h6>\n<ul>\n<li>请求页调入简称请调，是指在 CPU 需要访问进程某页面时，发现所访问的页面不在内存，CPU 发出缺页中断信号，请求将该页调入内存。操作系统接收到缺页中断请求后，为之分配物理块并从外存将该页调入内存。</li>\n<li>每个进程在刚开始执行时，所需的页面很多，会产生多次缺页中断，页面被逐一调入内存。根据程序的局部性原理，当进程运行一段时间后，所需要的页面会逐步减少，缺页中断次数会逐渐下降，最后趋向于很低的水平，进程运行进入相对平稳阶段。</li>\n<li>请求页调入策略的优点是只有在需要时才将页面调入内存，<strong>节省了内存空间</strong>。</li>\n<li>请求页调入策略的缺点：\n<ul>\n<li>在进程初次执行时，<strong>开始阶段</strong>会有大量的页调入内存，这时的<strong>进程切换开销很大</strong>。</li>\n<li>发生缺页中断时操作系统会调入页面，而每次又仅调入一个页面，启动磁盘作 I/O 的频率很高。由于每次启动磁盘时会产生一个时间延迟，因此，会造成系统<strong>用于 I/O 的时间增长</strong>，系统效率降低。</li>\n<li>对于执行<strong>顺序跳跃性大</strong>的程序，<strong>缺页情况变化大</strong>，难以趋向稳定的水平，从而引起系统不稳定。</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"预先页调入\"><a class=\"anchor\" href=\"#预先页调入\">#</a> 预先页调入</h6>\n<ul>\n<li>预先页调入简称预调，是指由操作系统根据某种算法，预先估计进程可能要访问的页面，并在处理器需要访问页面之前先将页面预先调入内存。</li>\n<li>该调入策略的优点是一次可将多个页面调入内存，减少了缺页中断的次数和 I/O 操作次数，系统付出的开销减少。如果预先动态估计准确率高，该调入策略会大大提高系统效率。</li>\n<li>调入策略的缺点：\n<ul>\n<li>如果预先动态估计准确率较低，调入的页面不被使用的可能性大，系统效率较低。</li>\n<li>如果程序员不能预先提供所需程序部分的信息，则该调度策略难以实施。</li>\n</ul>\n</li>\n<li>在实际应用中，页面调入会将请求页调入和预先页调入结合起来。在进程<strong>刚开始执行</strong>时或每次<strong>缺页中断</strong>时，<strong>采用预先页调入</strong>。在进程<strong>运行稳定后</strong>，如果发现缺页，系统可采用<strong>请求页调入</strong></li>\n</ul>\n<h5 id=\"页面置换策略\"><a class=\"anchor\" href=\"#页面置换策略\">#</a> 页面置换策略</h5>\n<ul>\n<li>当需要从外存调入页到内存时，如果当前内存没有空闲物理块，则操作系统需要将某些页置换出内存，再将新的页面换入内存。选择被置换出的页有两种策略：全局置换和局部置换</li>\n</ul>\n<h6 id=\"全局置换\"><a class=\"anchor\" href=\"#全局置换\">#</a> 全局置换</h6>\n<ul>\n<li>全局置换是指操作系统从<strong>所有当前位于内存的页面</strong>中选择一个页面淘汰，释放出对应的物理块，而不是仅从需要该页的进程的物理块换出。这种置换方法会影响大多数进程的运行，是一种<strong>动态方法</strong></li>\n</ul>\n<h6 id=\"局部置换\"><a class=\"anchor\" href=\"#局部置换\">#</a> 局部置换</h6>\n<ul>\n<li>局部置换是指当某进程有页面需要换入到内存时，只能从<strong>该进程目前已在内存的页面</strong>中选择一页淘汰，该置换方法<strong>对其它进程没有影响</strong>。</li>\n<li>局部置换与全局置换比较有明显的<strong>缺点</strong>：如果进程在执行期间所需要的内存物理块数发生变化，页面置换发生频繁，即使系统有空闲的物理块，也不可能增加给该进程；另外，如果系统给某进程分配的物理块数太多，系统不会收回，最终会造成内存空间浪费。</li>\n</ul>\n<h5 id=\"页面置换与页面分配的关联\"><a class=\"anchor\" href=\"#页面置换与页面分配的关联\">#</a> 页面置换与页面分配的关联</h5>\n<h6 id=\"固定分配局部置换\"><a class=\"anchor\" href=\"#固定分配局部置换\">#</a> 固定分配局部置换</h6>\n<ul>\n<li>为每个进程分配<strong>固定数量</strong>的物理块，在进程的整个运行期间都不再改变。当一个进程运行中发生缺页中断时，操作系统只从该进程在内存中的页面中选择一页淘汰。</li>\n<li>该策略不足在于：应为每个进程分配多少物理块数难以确定。如果分配给进程的物理块太少，缺页中断率高，进而导致整个多道程序系统运行缓慢；给多了，会使内存中能同时执行的进程数减少，进而造成处理器空闲和其他设备空闲，浪费资源。</li>\n</ul>\n<h6 id=\"可变分配全局置换\"><a class=\"anchor\" href=\"#可变分配全局置换\">#</a> 可变分配全局置换</h6>\n<ul>\n<li>先为每一进程<strong>分配必要数量的物理块</strong>，使之可以开始运行，系统中余下的空闲物理块组成一个<strong>空闲物理块队列</strong>，当某一进程在运行中发生缺页时，系统从空闲物理块队列中取出一个空闲块分配给该进程。直到系统拥有的空闲物理块耗尽，才会从内存中选择一页淘汰，该页可以是内存中任一进程的页面。</li>\n<li><strong>该策略易于实现</strong>，且可以有效地减少缺页中断率，是采用得较多的一种分配和置换策略。</li>\n</ul>\n<h6 id=\"可变分配局部置换\"><a class=\"anchor\" href=\"#可变分配局部置换\">#</a> 可变分配局部置换</h6>\n<ul>\n<li>新进程装入内存时，根据应用类型、程序要求，先分配给一定数目物理块。当产生缺页中断时，系统只能从产生缺页中断的进程的页面中选一个页面淘汰，不能影响其他进程的运行。操作系统要<strong>不时重新评价</strong>进程的物理块分配情况，<strong>增加或减少分配给进程的物理块</strong>以改善系统总的性能。</li>\n</ul>\n<h4 id=\"页面置换算法\"><a class=\"anchor\" href=\"#页面置换算法\">#</a> 页面置换算法 😎</h4>\n<h5 id=\"缺页率\"><a class=\"anchor\" href=\"#缺页率\">#</a> 缺页率</h5>\n<ul>\n<li>一个进程或一个作业在运行中成功的页面访问次数为 S，即所访问的页面在内存中；不成功的页面访问次数为 F，即访问的页面不在内存，需要缺页中断并调入内存；需要访问的页面的总次数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mtext> </mtext><mo>=</mo><mtext> </mtext><mi>S</mi><mtext> </mtext><mo>+</mo><mtext> </mtext><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">A = S + F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\"> </span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"> </span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"> </span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>。则缺页率 f 为：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mtext> </mtext><mo>=</mo><mtext> </mtext><mi>F</mi><mtext> </mtext><mi mathvariant=\"normal\">/</mi><mtext> </mtext><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">f = F / A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\"> </span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"> </span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"> / </span><span class=\"mord mathnormal\">A</span></span></span></span></li>\n<li>影响缺页率的因素如下：\n<ul>\n<li>进程分得的<strong>内存物理块数</strong>越多，缺页率越低。</li>\n<li>划分的<strong>页面</strong>越大，缺页率越低。</li>\n<li>如果<strong>程序局部性</strong>好，则缺页率低。</li>\n<li>如果选取的<strong>置换算法</strong>优，则缺页率低。</li>\n</ul>\n</li>\n<li>在进程的内存物理块数和页面大小不能改变的情况下，要减少缺页率，就要考虑选择合适的页面置换算法。</li>\n</ul>\n<h5 id=\"先进先出fifo页面置换算法\"><a class=\"anchor\" href=\"#先进先出fifo页面置换算法\">#</a> 先进先出（FIFO）页面置换算法</h5>\n<ul>\n<li>先进先出（Fist In First Out）算法的基本思想：总是选择<strong>最先进入内存</strong>的页面或<strong>驻留时间最长</strong>的页面先淘汰。该算法最早出现，易于实现。</li>\n<li>实现：可以将所有页面按照进入内存的次序排成一个<strong>队列</strong>，设置一个替换指针指向队头的一页。当需要进行页面淘汰时，替换指针指向的即为当前最先进入内存的页面，该页被淘汰，然后修改指针指向淘汰页后一个页面即可，调入的新的页面排入队尾。</li>\n<li>先进先出页面置换算法<strong>开销低</strong>、<strong>容易编程实现</strong>，<strong>适合于线性顺序特性好</strong>的程序。但是该算法没有考虑到页面的访问频率，很可能刚被换出的页面马上又要被访问，使得<strong>缺页率偏高</strong></li>\n<li>为了改善 FIFO 算法，减少缺页率，科学家尝试在进程发生缺页时给进程增加物理块。在实验中，Belady 发现了一个奇怪的现象，该现象也被称为<strong> Belady 异常现象</strong>。即：<strong>当页数在一定范围内时，缺页率反而随分配给进程的物理块数的增加而增加</strong></li>\n</ul>\n<h5 id=\"最佳opt页面置换算法\"><a class=\"anchor\" href=\"#最佳opt页面置换算法\">#</a> 最佳（OPT）页面置换算法</h5>\n<ul>\n<li>最佳（optimal）页面置换算法由 Belady 在 1966 年提出，基本思想：在选择页面置换时应该考虑该页面将来使用的情况，<strong>将来最长时间不用的页面被淘汰</strong>。在进程采用固定页面分配的情况下，最佳页面置换算法具有最低的缺页率。</li>\n</ul>\n<h5 id=\"最近最少使用lru页面置换算法\"><a class=\"anchor\" href=\"#最近最少使用lru页面置换算法\">#</a> 最近最少使用（LRU）页面置换算法</h5>\n<ul>\n<li>实现方法：系统须维护一个<strong>页面淘汰队列</strong>，该队列中存放当前在内存中的页号，每当访问一页时就调整一次，使队尾总指向最近访问的页，而队列头部就是最近最少用的页，发生缺页中断时总淘汰队列头所指示的页；而执行一次页面访问后，需要从队列中把该页调整到队列尾。</li>\n</ul>\n<h5 id=\"时钟clock置换算法\"><a class=\"anchor\" href=\"#时钟clock置换算法\">#</a> 时钟（clock）置换算法</h5>\n<ul>\n<li>时钟置换算法的基本思想是：\n<ul>\n<li>将内存中所有的页面组织成一个<strong>循环队列</strong>，形成一个类似于时钟表面的环形表，循环队列指针类似于钟的指针，用来指向可能被淘汰的页面，指针开始时指向最先进入内存的页面。</li>\n<li>时钟置换算法需要在页表中为每一页增加一个访问位 <code>R</code> 。当页面<strong>首次装入内存</strong>时， <code>R</code>  的初值设置为 “0”。当某个页面被访问过后， <code>R</code>  的值被设置为 “1”。</li>\n<li>选择淘汰页面的方法是从指针当前指向的页面位置开始扫描时钟环，如果某个页面页表中的 <code>R</code>  为 “1”，表明该页被访问过，将 <code>R</code>  清 “0”，并跳过该页；如果某个页面页表中的 <code>R</code>  为 “0”，表明该页没有被访问过，该页被淘汰，指针推进一步；如果所有的页面都被访问过，指针绕环一圈，将所有页面的 <code>R</code>  清 “0”，指针回到起始位置，选择该页淘汰，指针推进一步。</li>\n</ul>\n</li>\n<li>为了提高置换效率，在页面置换时，如果被淘汰的页面没有被修改过，则不需写回外存。这样，将页表中的访问位 <code>R</code>  和页表中的修改位 <code>M</code>  配合，产生改进的时钟置换算法。</li>\n<li>访问位 <code>R</code>  和修改位 <code>M</code>  的组合有下面四种情况：\n<ul>\n<li>最近没有被访问（ <code>R = 0</code> ），没有被修改（ <code>M = 0</code> ）：从指针当前位置开始，选择第一个 <code>R = 0</code> ， <code>M = 0</code>  的页面淘汰。</li>\n<li>最近没有被访问（ <code>R = 0</code> ），但是被修改过（ <code>M = 1</code> ）：如果没有 <code>R = 0</code> ， <code>M = 0</code>  的页面，则从开始位置重新开始查找第一个 <code>R = 0</code> ， <code>M = 1</code>  的页面并淘汰之。</li>\n<li>最近被访问（ <code>R = 1</code> ），没有被修改（ <code>M = 0</code> ）：如果没有 <code>R = 0</code> ， <code>M = 1</code>  的页面，表示所有的页面 <code>R = 1</code> 。在再次回到开始位置时，所有页面的访问位 <code>R</code>  都被清 “0”。从开始位置查找第一个 <code>M = 0</code>  的页面并淘汰之，此时不用将淘汰页面 “写” 回外存。</li>\n<li>最近被访问（ <code>R = 1</code> ），被修改（ <code>M = 1</code> ）：当前面三种情况都不存在时才考虑 <code>R = 1</code> ， <code>M = 1</code>  的情况。</li>\n</ul>\n</li>\n<li>该策略的主要优点是没有被修改过的页面会被淘汰，但不必写回外存，<strong>节省了 I/O 时间</strong>。但是<strong>查找淘汰页面</strong>可能需要<strong>多次扫描时钟</strong>，增加了算法的开销。</li>\n</ul>\n<h4 id=\"影响请求页式存储管理性能的因素\"><a class=\"anchor\" href=\"#影响请求页式存储管理性能的因素\">#</a> 影响请求页式存储管理性能的因素</h4>\n<h5 id=\"分配给进程的内存块数与缺页率的关系\"><a class=\"anchor\" href=\"#分配给进程的内存块数与缺页率的关系\">#</a> 分配给进程的内存块数与缺页率的关系</h5>\n<ul>\n<li>实验结果表明，对每个进程来说，为其分配进程空间页面数约一半的物理块时，请求页式的效果最好</li>\n</ul>\n<h5 id=\"页面大小对系统性能的影响\"><a class=\"anchor\" href=\"#页面大小对系统性能的影响\">#</a> 页面大小对系统性能的影响</h5>\n<ul>\n<li>从页表大小考虑：如果页面较小，页数就要增加，页表也随之扩大，为了控制页表所占的内存空间，应选择较大的页面尺寸。</li>\n<li>从内存利用率考虑：内存以块为单位，一般情况下进程的最后一个页面总是装不满一个物理块，会产生内部碎片，为了减少内部碎片，应选择小的页面尺寸。</li>\n<li>从读写一个页面所需的时间考虑：作业存放在辅助存储器上，从磁盘读入一个页面的时间包括等待时间（移臂时间 + 旋转时间）和传输时间，通常等待时间远大于传输时间。显然，加大页面的尺寸，有利于提高 I/O 的效率。</li>\n</ul>\n<blockquote>\n<p>页面长度是由 CPU 中的 <code>MMU</code>  规定的，操作系统通过特定寄存器的指示位来指定当前选用的页面长度。</p>\n</blockquote>\n<h5 id=\"缺页率对系统性能的影响\"><a class=\"anchor\" href=\"#缺页率对系统性能的影响\">#</a> 缺页率对系统性能的影响</h5>\n<ul>\n<li>用 <code>p</code>  表示缺页率，如果 <code>p = 0</code> ，则不缺页；如果 <code>p = 1</code> ，则始终缺页。</li>\n<li>抖动：由于缺页而引起的一种系统现象，即处理器频繁地处理页面的换出和调入，使得处理器实际处理程序的能力大大减小。“抖动” 现象常在<strong>缺页率非常高</strong>时发生。</li>\n<li>用 <code>st</code>  表示缺页处理时间。缺页处理时间包括<strong>从外存取相关页面并将其放入内存的时间</strong>。</li>\n<li>用 <code>ma</code>  表示对内存一个页面的访问时间。</li>\n<li>用 <code>vt</code>  表示有效访问时间。</li>\n<li>在非缺页的情况下， <code>vt = ma</code></li>\n<li>在缺页率为 p 的情况下， <code>vt = (1 − p) × ma + p × st</code></li>\n<li>在任何情况下，缺页处理时间由下面三个主要部分构成：\n<ul>\n<li>缺页中断服务时间；</li>\n<li>读页面时间；</li>\n<li>恢复进程时间。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>有效访问时间直接正比于缺页率</p>\n</blockquote>\n<h3 id=\"请求分段虚拟存储管理\"><a class=\"anchor\" href=\"#请求分段虚拟存储管理\">#</a> 请求分段虚拟存储管理</h3>\n<h4 id=\"请求分段虚拟存储管理的基本原理\"><a class=\"anchor\" href=\"#请求分段虚拟存储管理的基本原理\">#</a> 请求分段虚拟存储管理的基本原理</h4>\n<ul>\n<li>请求分段的<strong>基本思想</strong>：将用户程序的所有段首先放在辅助存储器中，当用户程序被调度投入运行时，首先把当前需要的一段或几段装入内存，在执行过程中访问到不在内存的段时再把它们从外存装入。</li>\n<li>请求分段的<strong>段表</strong>包括：段号、段长、存取权限、在内存中的起始地址、在外存中的起始地址、是否在内存、修改标志、共享标志和扩充位等。</li>\n<li><strong>在程序执行中需要访问某段时</strong>，查段表，若该段在内存，则按段式存储管理进行地址转换得到绝对地址。</li>\n<li><strong>若该段不在内存中</strong>，则硬件发出一个缺段中断。操作系统处理这个中断时，先查找内存分配表，找出一个足够大的连续区域容纳该分段。如果找不到足够大的连续区域则检查空闲区的总和，若空闲区总和能满足该分段要求，那么进行适当移动后，再将该段装入内存。若空闲区总和不能满足要求，则可调出一个或几个分段在辅助存储器上，再将该分段装入内存。</li>\n<li>在执行过程中，<strong>有些数据段的大小会随输入数据多少而变化</strong>。这就需要在该分段尾部添加新信息，但添加后的段的总长度不应超过硬件允许的每段最大长度。对于这种变化的数据段，当要往其中添加新数据时，由于欲访问的地址超出原有的段长，<strong>硬件首先会产生一个越界中断</strong>。操作系统处理这个中断时，<strong>先去判断该段的 “扩充位” 标志，如可以扩充，则允许增加段的长度</strong>，如该段不允许扩充，那么这个越界中断就表示程序出错。<br />\n<img loading=\"lazy\" data-src=\"ComputerSystem/image-9.png\" alt=\"分段式存储管理的地址转换和存储保护\" /></li>\n</ul>\n<h4 id=\"请求分段虚拟存储管理的段的共享和保护\"><a class=\"anchor\" href=\"#请求分段虚拟存储管理的段的共享和保护\">#</a> 请求分段虚拟存储管理的段的共享和保护</h4>\n<ul>\n<li>请求分段虚拟存储管理为了实现段的共享，除了原有的进程段表外，还要在系统中建立一张段共享表，每个共享分段占一个表项，每个表项包含两部分内容：\n<ul>\n<li>第一部分包含共享段名、段长、内存起址、状态位（如在不在内存）、辅存地址、共享进程个数计数器。</li>\n<li>第二部分包含共享该段的所有进程名、状态、段号、存取控制位（通常为只读）。</li>\n</ul>\n</li>\n<li>当出现笫一个要使用某个共享段的进程时，操作系统为此共享段分配一块内存，再将共享段装入该区。同时将共享段在内存的<strong>起始地址填入共享段表中对应项的内存始址</strong>处，<strong>共享进程个数计数器加 1，修改状态位为 1（在内存）</strong>，填写使用该共享段的进程的有关信息（进程名、使用共享段的段号、存取控制等）。而进程段表中共享段的表项指向内存共享段表地址。此后，当又有进程要使用该共享段时，仅需直接填写共享段表和进程段表，以及把共享进程个数计数器加 1 就可以了。</li>\n<li>当进程<strong>不再使用共享段时，应释放该共享段</strong>，除了在共享段表中删去进程占用项外，还要把共享进程个数计数器减 1。共享进程个数计数器为 0 时，说明已没有进程使用此共享段了，系统需要回收该共享段的物理内存，并把占用表项也取消。</li>\n<li>优点：不同进程可以用不同段号使用同一个共享段；由于进程段表中共享段的表项指向内存共享段表地址，所以，每当共享段被移动、调出或再装入时，只要修改共享段表的项目，不必要修改共享该段的每个进程的段表。</li>\n<li>由于每个分段在逻辑上是独立的，实现存储保护很方便：\n<ul>\n<li><strong>越界检查</strong>：在段表寄存器中存放了段长信息，在进程段表中存放了每个段的段长。在存储访问时，首先，把指令逻辑地址中的段号与段表长度进行比较，如果段号等于或大于段表长度，将发出地址越界中断；其次，还需检查段内地址是否大于段长，若是的话将产生地址越界中断，从而确保每个进程只在自己的地址空间内运行。</li>\n<li><strong>存取控制检查</strong>：在段表的每个表项中，均设有存取控制字段，用于规定此段的访问方式，通常设置的访问方式有：只读、读写、只执行等。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"请求段页式虚拟存储管理\"><a class=\"anchor\" href=\"#请求段页式虚拟存储管理\">#</a> 请求段页式虚拟存储管理</h4>\n<ul>\n<li>请求段页式虚拟存储管理是在段页式存储管理的基础上增加了<strong>用以实现虚拟存储的缺页中断机制、缺段中断机制来实现的</strong>。</li>\n<li>与传统的段页式存储管理一样，用户的逻辑地址空间被划分为段号、段内页号与页内偏移。但是，<strong>请求段页式管理并没有将一个作业的所有段在作业运行前全部装入内存，只是部分段装入内存</strong>，因此，还需要有<strong>作业表</strong>来记载进入内存的作业段的情况。</li>\n</ul>\n<h2 id=\"设备管理\"><a class=\"anchor\" href=\"#设备管理\">#</a> 设备管理</h2>\n<h3 id=\"设备管理概述\"><a class=\"anchor\" href=\"#设备管理概述\">#</a> 设备管理概述</h3>\n<h4 id=\"设备管理的逻辑结构\"><a class=\"anchor\" href=\"#设备管理的逻辑结构\">#</a> 设备管理的逻辑结构</h4>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-10.png\" alt=\"设备管理的逻辑结构\" /></p>\n<h4 id=\"设备控制器\"><a class=\"anchor\" href=\"#设备控制器\">#</a> 设备控制器</h4>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-11.png\" alt=\"设备控制器的构成\" /></p>\n<h3 id=\"设备控制方法\"><a class=\"anchor\" href=\"#设备控制方法\">#</a> 设备控制方法 😎</h3>\n<h4 id=\"程序循环查询方式\"><a class=\"anchor\" href=\"#程序循环查询方式\">#</a> 程序循环查询方式</h4>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-12.png\" alt=\"程序循环查询方式\" /></p>\n<ul>\n<li><strong>CPU 要不断的发送 I/O 测试指令</strong>用以测试设备控制器的<strong>忙 / 闲（busy）标志位</strong>，若设备不忙，则主存与外部设备交换一个字符或一个字。若设备忙，则 I/O 测试指令不断对它进行测试，直到设备空闲为止。</li>\n<li>由于 CPU 的速度远高于 I/O 设备的速度，使得 CPU 绝大部分时间都处于等待 I/O 完成的循环测试之中。显然，这对 CPU 是极大的浪费。但是，它的控制简单，<strong>在 CPU 速度慢、要求不高的场合下</strong>常被采用。</li>\n</ul>\n<h4 id=\"中断驱动方式\"><a class=\"anchor\" href=\"#中断驱动方式\">#</a> 中断驱动方式</h4>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-13.png\" alt=\"中断驱动方式\" /></p>\n<ul>\n<li>引入中断机构是为了<strong>消除设备驱动程序不断地轮询控制器状态寄存器的开销</strong>，当 I/O 操作结束后，由设备控制器 “自动地” 通知设备驱动程序</li>\n</ul>\n<h4 id=\"直接内存访问方式\"><a class=\"anchor\" href=\"#直接内存访问方式\">#</a> 直接内存访问方式</h4>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-14.png\" alt=\"直接内存访问方式\" /></p>\n<ul>\n<li>数据传输的基本单位是数据块，即每次传送至少一个数据块。</li>\n<li>所传送的数据是从设备直接送入内存，或者直接读出内存的。</li>\n<li>在传输时 CPU 参与更少，<strong>仅在传送一个或多个数据块的开始和结束时</strong>，才需 CPU 干预，整块数据的传送是在控制器的控制下完成的。</li>\n</ul>\n<h4 id=\"通道方式\"><a class=\"anchor\" href=\"#通道方式\">#</a> 通道方式</h4>\n<ul>\n<li>I/O 通道方式是 DMA 方式的发展，它可进一步减少 CPU 的干预，即把对一个数据块的读 (或写) 为单位的干预，减少为对一组数据块的读 (或写) 及有关的控制和管理为单位的干预</li>\n<li><strong>有专门用于 I/O 的处理单元</strong>。在进行 I/O 操作时，接受 CPU 的委托，独立地执行自己的通道程序来实现内存与外设之间的数据传输。</li>\n<li>使 CPU 从对 I/O 设备的繁忙直接控制中解脱出来，极大地提高了 CPU 与外设并行工作的程度，从而更有效地提高整个系统的资源利用率</li>\n</ul>\n<h5 id=\"通道分类\"><a class=\"anchor\" href=\"#通道分类\">#</a> 通道分类</h5>\n<ul>\n<li>字节多路通道</li>\n<li>选择通道</li>\n<li>成组多路通道</li>\n</ul>\n<h5 id=\"通道工作方式\"><a class=\"anchor\" href=\"#通道工作方式\">#</a> 通道工作方式</h5>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-15.png\" alt=\"通道与CPU之间通信示意图\" /></p>\n<ul>\n<li>通道 I/O 操作由两种命令实现控制：CPU 的 I/O 指令和通道本身提供的通道程序。</li>\n<li>CPU 的 I/O 指令的功能一般包括有：清除、停止、启动、查询等功能，除了操作码之外，I/O 指令中还有通道地址和设备地址域。I/O 指令属特权指令，只能由操作系统使用。</li>\n<li>通道程序一般有读、写、查询、控制和转移等功能</li>\n<li>在通道 I/O 工作过程中，CPU 对通道的通信是向通道发出启动、查询和停止通道指令；而通道向 CPU 的通信则采用中断方式向 CPU 汇报。</li>\n</ul>\n<h3 id=\"缓冲技术\"><a class=\"anchor\" href=\"#缓冲技术\">#</a> 缓冲技术</h3>\n<h4 id=\"缓冲技术的作用\"><a class=\"anchor\" href=\"#缓冲技术的作用\">#</a> 缓冲技术的作用</h4>\n<ul>\n<li>它能改善中央处理器与外围设备之间速度不匹配的矛盾，提高 CPU 和 I/O 设备的并行性。</li>\n<li>它能减少 I/O 对 CPU 的中断次数和放宽对 CPU 中断响应时间的要求</li>\n<li>缓冲技术还能协调逻辑记录大小与物理记录大小不一致的问题</li>\n</ul>\n<h4 id=\"缓冲的分类\"><a class=\"anchor\" href=\"#缓冲的分类\">#</a> 缓冲的分类</h4>\n<h5 id=\"单缓冲\"><a class=\"anchor\" href=\"#单缓冲\">#</a> 单缓冲</h5>\n<ul>\n<li>单缓冲指当一个进程发出 I/O 请求时，操作系统便在主存中为之分配一个缓冲区，用来临时存放输入／输出数据。它是操作系统提供的一种简单的缓冲形式。</li>\n<li>在数据的输入或者过程中，在某一时刻该缓冲区只能存放输入数据或输出数据，而不能既是输入数据又是输出数据，否则会引起缓冲区中数据的混乱。对缓冲区来说，信息的输入和输出实际上是串行工作的。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-16.png\" alt=\"无缓冲与单缓冲比较\" /></p>\n<h5 id=\"双缓冲\"><a class=\"anchor\" href=\"#双缓冲\">#</a> 双缓冲</h5>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-17.png\" alt=\"双缓冲\" /></p>\n<ul>\n<li>双缓冲指在操作系统中为某一设备设置两个缓冲区，当一个缓冲区中的数据尚未被处理时可使用另一个缓冲区存放从设备读入或读出的数据，以此来进一步提高 CPU 和外设的并行程度。</li>\n<li>在输入数据时，首先填满缓冲区 1，操作系统可从缓冲区 1 把数据送到用户进程区，用户进程便可对数据进行加工计算；与此同时，输入设备填充缓冲区 2。</li>\n<li>当缓冲区 1 空出后，输入设备再次向缓冲区 1 输入。操作系统又可以把缓冲区 2 的数据传送到用户进程区，用户进程开始加工缓冲区 2 的数据。</li>\n<li>这样两个缓冲区交替使用，使 CPU 和 I/O 设备的并行性进一步提高。仅当两个缓冲区都空或者都满，进程还要提取数据或者写入数据时，它才被迫等待</li>\n</ul>\n<h5 id=\"多缓冲\"><a class=\"anchor\" href=\"#多缓冲\">#</a> 多缓冲</h5>\n<h6 id=\"循环缓冲\"><a class=\"anchor\" href=\"#循环缓冲\">#</a> 循环缓冲</h6>\n<ul>\n<li>为了使缓冲区资源得到充分利用，操作系统从主存区域中分配一组缓冲区，如图，根据用途分为：输入缓冲区组和输出缓冲区组。</li>\n<li>每个缓冲区有一个链接指针指向下一个缓冲区，最后一个缓冲区指针指向第一个缓冲区，组成了循环缓冲。每个缓冲区的大小可以等于物理记录的大小</li>\n<li>这种循环式的多缓冲区是系统的公共资源，并由系统统一分配和管理，可供各个进程共享。为了管理各缓冲区，进行统一调度和管理，操作系统中通常要设立专门的机构来管理它们。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-18.png\" alt=\"循环缓冲\" /></p>\n<h6 id=\"缓冲池\"><a class=\"anchor\" href=\"#缓冲池\">#</a> 缓冲池</h6>\n<ul>\n<li>缓冲池由内存中的一组缓冲区构成，各缓冲区之间并不一定采用循环链表的方式进行链接，操作系统与用户进程将轮流地使用各个缓冲区，以改善系统性能。</li>\n<li>缓冲池中多个缓冲区可供多个进程使用，既可用于输出又可用于输入，是一种现代操作系统经常采用的一种公用缓冲技术</li>\n<li>缓冲池中的缓冲区一般按照内容被组织成三个队列：空闲缓冲区队列 <code>emq</code> 、输入缓冲区队列 <code>inq</code> 、输出缓冲区队列 <code>outq</code> 。</li>\n<li>每个缓冲区根据其当前的工作性质不同，分为四种状态：收容输入、提取输入、收容输出、提取输出。</li>\n<li>对缓冲池的管理，有两个基本操作 <code>Getbuf</code>  过程和 <code>Putbuf</code>  过程。 <code>Getbuf（type）</code> 用于从 <code>type</code>  所指定的队列的队首摘下一个缓冲区； <code>Putbuf（type，number）</code> 用于将由参数 <code>number</code>  所指示的缓冲区挂在 <code>type</code>  队列上。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-19.png\" alt=\"缓冲区\" /></p>\n<h3 id=\"输入输出软件\"><a class=\"anchor\" href=\"#输入输出软件\">#</a> 输入输出软件</h3>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-20.png\" alt=\"I/O软件的层次\" /></p>\n<h4 id=\"中断处理程序\"><a class=\"anchor\" href=\"#中断处理程序\">#</a> 中断处理程序</h4>\n<ul>\n<li>凡是涉及到输入 / 输出设备开始、结束或者异常时，一般都会发生中断信号。</li>\n<li>当一个中断信号发生时，若能及时得到相应，则正在运行的进程将被挂起，直到 I/O 操作结束并发出一个中断请求，CPU 响应后便转向中断处理程序，然后解除相应进程的阻塞状态。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-21.png\" alt=\"中断处理流程\" /></p>\n<h4 id=\"设备驱动程序\"><a class=\"anchor\" href=\"#设备驱动程序\">#</a> 设备驱动程序</h4>\n<ul>\n<li>所谓设备驱动程序是指驱动物理设备和 DMA 控制器或 I/O 控制等直接进行 I/O 操作的程序集合</li>\n<li>不同类型的设备应有不同的设备驱动程序，设备驱动程序主要负责启动指定设备，即负责设置与相关设备有关的寄存器的值，启动设备进行 I/O 操作，指定操作的类型和数据流向等。</li>\n</ul>\n<h5 id=\"设备驱动程序的处理过程\"><a class=\"anchor\" href=\"#设备驱动程序的处理过程\">#</a> 设备驱动程序的处理过程</h5>\n<ol>\n<li>接收由 I/O 进程发来的命令和参数，并将命令中的抽象要求转换为具体要求。</li>\n<li>检查用户 I/O 请求的合法性，了解 I/O 设备的状态，传递有关参数，设置设备的工作方式</li>\n<li>发出 I/O 命令，如果设备空闲，便立即启动 I/O 设备去完成指定的 I/O 操作；如果设备处于忙碌状态，则将请求者的请求块挂在设备队列上等待</li>\n<li>及时响应由控制器或通道发来的中断请求，并根据其中断类型调用相应的中断处理程序进行处理。对于设置有通道的计算机系统，驱动程序还应能够根据用户的 I/O 请求，自动地构成通道程序。</li>\n<li>I/O 完成后，由通道（或设备）产生中断信号。CPU 接到中断请求后，如果条件符合（中断优先级高于运行程序的优先级），则响应中断，然后转去执行相应的中断处理程序，唤醒因等待 I/O 完成而睡眠的进程，调度用户进程继续运行</li>\n</ol>\n<h5 id=\"设备驱动程序的特点\"><a class=\"anchor\" href=\"#设备驱动程序的特点\">#</a> 设备驱动程序的特点</h5>\n<ul>\n<li>与一般的操作系统程序和应用程序不同，设备驱动程序由于与物理设备有关，具有以下特性：\n<ul>\n<li>驱动程序指在请求 I/O 的进程与设备控制器之间的一个通信和转换程序。它的主要任务是接受上层软件发来的抽象要求并将设备控制器发来的信号传送给上层</li>\n<li>驱动程序与设备控制器和 I/O 设备的硬件特性紧密相关，因而对不同类型的设备应配置不同的驱动程序。</li>\n<li>驱动程序与 I/O 设备所采用的 I/O 控制方式紧密相关</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"设备独立性程序\"><a class=\"anchor\" href=\"#设备独立性程序\">#</a> 设备独立性程序</h4>\n<ul>\n<li>所谓设备独立性，也称为设备无关性，<strong>是指在用户程序中不要直接使用物理设备名（或设备的物理地址），而只能使用逻辑设备名</strong>。</li>\n<li>逻辑设备是实际物理设备属性的抽象，它不限于某类具体设备。逻辑设备究竟和哪一个具体的物理设备相对应，还要由系统根据当时的设备忙、闲情况来决定或由系统管理员指定</li>\n<li>在应用程序中使用逻辑设备名来请求使用某类设备，而<strong>系统在实际执行时，使用物理设备名</strong>。</li>\n<li>系统必须根据对应关系将逻辑设备名转换成物理设备名，进一步找到物理设备的驱动程序地址</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-22.png\" alt=\"逻辑设备与物理设备对应表\" /></p>\n<ul>\n<li>\n<p>引入设备独立性这一概念，使得用户程序可使用逻辑设备名，而不必使用物理设备名，有以下优点：</p>\n<ul>\n<li>使得设备分配更加灵活，提高了设备的利用率。当多用户多进程请求分配设备时，系统可根据设备当时的忙闲情况，合理调整逻辑设备名与物理设备名之间的对应情况，以保证设备的充分使用。</li>\n<li><strong>可以实现 I/O 重定向</strong>。所谓 I/O 重定向是指可以<strong>更换 I/O 操作的设备而不必改变应用程序</strong></li>\n</ul>\n</li>\n<li>\n<p>设备驱动程序是一个与硬件（或设备）紧密相关的软件，为了实现设备独立性，就必须在驱动程序之上设置一层与设备无关的软件，其主要功能如下：</p>\n<ul>\n<li>向用户层软件提供统一接口。</li>\n<li>设备无关程序负责将设备名映射到相应的设备驱动程序。</li>\n<li>设备保护。</li>\n<li>协调不同设备数据块的差异。</li>\n<li>差错控制。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"用户层软件\"><a class=\"anchor\" href=\"#用户层软件\">#</a> 用户层软件</h4>\n<ul>\n<li>用户层的 I/O 软件实际上就是面向设备具体应用的软件，它是 I/O 系统软件的最上层软件</li>\n</ul>\n<h3 id=\"设备分配与回收\"><a class=\"anchor\" href=\"#设备分配与回收\">#</a> 设备分配与回收</h3>\n<h4 id=\"设备信息描述\"><a class=\"anchor\" href=\"#设备信息描述\">#</a> 设备信息描述</h4>\n<h5 id=\"系统设备表sdt\"><a class=\"anchor\" href=\"#系统设备表sdt\">#</a> 系统设备表 SDT</h5>\n<ul>\n<li><strong>系统设备表记录系统中所有设备资源的状态</strong>。在整个系统中设置惟一的系统设备表 <code>SDT</code> ，是系统范围的数据结构，记录了系统中全部设备情况，并为每个设备设置了一个表项。 <code>SDT</code>  的每个表项主要包括：设备类型、设备标识符、指向 <code>DCT</code>  的指针以及驱动程序入口。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-23.png\" alt=\"SDT\" /></p>\n<h5 id=\"设备控制表dct\"><a class=\"anchor\" href=\"#设备控制表dct\">#</a> 设备控制表 DCT</h5>\n<ul>\n<li>对系统范围内的任何一台设备，操作系统都配置了一张设备控制表 <code>DCT</code> ，用来<strong>记录设备的特性、设备和 I/O 控制器的连接情况以及设备的分配和使用情况</strong>。 <code>DCT</code>  在系统生成时或在该设备和系统连接时创建，但表中的内容则可根据系统执行情况动态修改。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-24.png\" alt=\"DCT\" /></p>\n<h5 id=\"控制器控制表coct\"><a class=\"anchor\" href=\"#控制器控制表coct\">#</a> 控制器控制表 COCT</h5>\n<ul>\n<li>系统为每个控制器都设置了一个 <code>COCT</code> ，用它来<strong>反映 I/O 控制器的使用情况以及所连接的通道情况</strong></li>\n<li>主要包括：控制器标识符、控制器的状态、与控制器相连接的通道表指针、控制器队列的队首指针、控制器队列的队尾指针，各相应项意义与 <code>DCT</code>  类似。</li>\n</ul>\n<h5 id=\"通道控制表chct\"><a class=\"anchor\" href=\"#通道控制表chct\">#</a> 通道控制表 CHCT</h5>\n<ul>\n<li>在设置有通道的系统中，操作系统为每个通道都配有一张通道控制表，它与 <code>COCT</code>  类似。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-25.png\" alt=\"CHCT\" /></p>\n<h4 id=\"设备分配策略\"><a class=\"anchor\" href=\"#设备分配策略\">#</a> 设备分配策略</h4>\n<ul>\n<li><strong>独占方式</strong>就是把一台设备<strong>固定地分配给一个用户或进程</strong>，直到它运行结束。这种方式对用户来说是方便的，管理起来也简单，但资源往往造成浪费。因为用户程序或进程运行过程中不会自始至终都使用像打印机这类设备</li>\n<li><strong>共享方式</strong>是指设备可以在多个用户（或进程）“<strong>交替</strong>” 使用，即一个进程需要时，便申请它，获得后使用它，用完就释放它。其他进程也如此方式使用。磁盘、磁带就是可共享方式分配、使用的设备。</li>\n<li><strong>虚拟方式</strong>：为了提高独占设备的利用率，提高进程并行程度，引入了虚拟设备技术。虚拟设备技术就是利用快速、共享设备（例如磁盘）把慢速、独占设备模拟成为同类物理设备。</li>\n</ul>\n<h4 id=\"spooling技术\"><a class=\"anchor\" href=\"#spooling技术\">#</a> SPOOLing 技术</h4>\n<h5 id=\"spooling系统的组成\"><a class=\"anchor\" href=\"#spooling系统的组成\">#</a> SPOOLing 系统的组成</h5>\n<ul>\n<li><strong>输入井</strong>模拟假脱机输入，用于收容输入的数据。</li>\n<li><strong>输出井</strong>模拟脱机输出，用于收容用户程序的输出数据。</li>\n<li><strong>预输入程序</strong>模拟脱机输入时的外围控制机，将输入设备的输入信息送到输入井，当相关进程需要输入数据时，直接从输入井读入到内存中的用户程序区。</li>\n<li><strong>缓输出程序</strong>模拟脱机输出时的外围控制机，把用户要求输出的信息从用户程序区送到输出井，待输出设备空闲时，将输出井中的信息送到输出设备上。</li>\n<li><strong>井管理程序</strong>负责管理输入井与输出井的协调工作。在进程执行过程中，如果请求启动某台设备的输入或者输出工作，操作系统得到该请求并调出井管理程序，控制从相应输入井读取信息或将信息送至输出井内。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-26.png\" alt=\"SPOOLing系统结构\" /></p>\n<h5 id=\"共享打印机\"><a class=\"anchor\" href=\"#共享打印机\">#</a> 共享打印机</h5>\n<ul>\n<li>为了实现打印机的虚拟共享，应创建一个特殊的守护进程以及一个特殊的目录 —— <code>SPOOLing</code>  目录。</li>\n<li>当用户进程请求打印输出时， <code>SPOOLing</code>  系统同意为它打印输出，但并不真正立即把打印机分配给该用户进程， 而只为它做两件事：\n<ul>\n<li>由输出进程在输出井中为之申请一个空闲磁盘块区，并将要打印的数据送入其中。</li>\n<li>输出进程再为用户进程申请一张空白的用户请求打印表，并将用户的打印要求填入其中， 再将该表挂到请求打印队列上。</li>\n</ul>\n</li>\n<li>实际上，当进程把该文件放到 <code>SPOOLing</code>  系统中之后就可以认为打印过程已经完成，虽然打印机还没有进行该文件的打印，因此 <code>SPOOLing</code>  也称为打印的 “假脱机” 过程。</li>\n<li>而整个的打印作业由该守护进程进行处理，只有该守护进程能够真正使用打印机设备文件</li>\n</ul>\n<h5 id=\"spooling技术的特点\"><a class=\"anchor\" href=\"#spooling技术的特点\">#</a> SPOOLing 技术的特点</h5>\n<ul>\n<li><strong>提高了 I/O 的速度</strong>，缓和了高速的处理器与低速输入输出设备之间的矛盾。</li>\n<li><strong>将独占设备改造为共享设备</strong>，提高了设备的利用率。</li>\n<li><strong>实现了虚拟设备功能</strong>，将物理的单个设备变换为多个对应的逻辑设备。</li>\n</ul>\n<h4 id=\"设备分配算法\"><a class=\"anchor\" href=\"#设备分配算法\">#</a> 设备分配算法</h4>\n<ul>\n<li><strong>先来先服务算法</strong>。系统允许多个进程请求同一个设备，也允许一个进程请求多个设备。当有多个进程对同一设备提出 I/O 请求时，或者是在同一设备上进行多次 I/O 操作时，系统按照提出请求的先后顺序，将对应进程组织成一个设备请求队列。当设备空闲时，设备分配程序总是把此设备首先分配给队首进程</li>\n<li><strong>优先级高者优先算法</strong>。首先对有 I/O 的进程按照其优先级的高低进行排列，高优先级进程排在设备队列前面，低优先级进程排在后面。当有一个新进程要加入设备请求队列中时，并不是简单地把它挂在队尾，而是根据进程的优先级插在适当的位置。这样就能保证在该设备空闲时，系统能从 I/O 请求队列的队首取下一个具有最高优先级进程，并将设备分配给它。</li>\n</ul>\n<h4 id=\"设备分配\"><a class=\"anchor\" href=\"#设备分配\">#</a> 设备分配</h4>\n<ul>\n<li>当系统中已经具备了设备分配的数据结构，而且在设备分配总原则下确定了一定分配算法后，若某进程提出 I/O 请求，设备分配程序便可进行分配。</li>\n<li>设备分配过程是逐步由抽象信息表格到具体物理设备的过程，首先使用了管理逻辑设备信息的系统设备表，继而查找设备控制表，然后通过设备控制器利用通道启动设备，传输信息。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-27.png\" alt=\"设备分配过程\" /></p>\n<h4 id=\"设备回收\"><a class=\"anchor\" href=\"#设备回收\">#</a> 设备回收</h4>\n<ul>\n<li>当某一作业（或进程）使用完设备后，则需 “释放设备”，设备回收过程是设备分配过程的逆过程。</li>\n<li>回收时，要请求操作系统依次修改与设备有关的通道控制表、设备控制器控制表、设备控制表和系统设备表，主要是修改其中的状态信息，以使设备能够及时被下一个进程使用。</li>\n</ul>\n<h2 id=\"文件系统\"><a class=\"anchor\" href=\"#文件系统\">#</a> 文件系统</h2>\n<h3 id=\"文件系统概述\"><a class=\"anchor\" href=\"#文件系统概述\">#</a> 文件系统概述</h3>\n<h4 id=\"文件的概念\"><a class=\"anchor\" href=\"#文件的概念\">#</a> 文件的概念</h4>\n<ul>\n<li>在计算机系统中，<strong>文件</strong>是指存储在外部存储介质上的、由文件名标识的一组相关信息的集合。</li>\n</ul>\n<h4 id=\"文件系统的概念\"><a class=\"anchor\" href=\"#文件系统的概念\">#</a> 文件系统的概念</h4>\n<ul>\n<li>操作系统中负责管理和存取文件信息的软件机构叫做<strong>文件管理</strong></li>\n<li>文件系统：操作系统中与文件管理有关的那部分软件和被管理的文件，以及实现管理所需要的一些数据结构的总体。</li>\n<li>文件系统的功能\n<ul>\n<li>实现文件的 “按名存取” 功能。</li>\n<li>实现能够快速定位文件的目录结构 ；考虑如何组织目录文件。</li>\n<li>向用户提供一套使用方便、简单的操作命令。</li>\n<li>管理磁盘、磁带等组成的文件存储器。</li>\n<li>实现逻辑文件到物理文件的转换。</li>\n<li>保证文件信息的安全可靠。</li>\n<li>便于文件的共享。</li>\n</ul>\n</li>\n<li>常用文件系统举例\n<ul>\n<li>EXT2：Linux 最为常用的文件系统，设计易于向后兼容，所以新版的文件系统代码无需改动就可以支持已有的文件系统。</li>\n<li>NFS：网络文件系统，允许多台计算机之间共享文件系统，易于从网络中的计算机上存取文件。</li>\n<li>HPFS：高性能文件系统，是 IBM OS/2 的文件系统。</li>\n<li>FAT：经过了 MS-DOS，Windows 3.x，Windows 9x，Windows NT，Windows 2000/XP 和 OS/2 等操作系统的不断改进，它已经发展成为包含 FAT12，FAT16 和 FAT32 的庞大家族。</li>\n<li>NTFS：NTFS 是微软为了配合 Windows NT 的推出而设计的文件系统，为系统提供了极大的安全性和可靠性。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"文件的属性\"><a class=\"anchor\" href=\"#文件的属性\">#</a> 文件的属性</h4>\n<ul>\n<li>一个文件包括文件体和文件属性两个部分：文件体是一系列的记录或字符流，以物理块存放在外存上，也叫文件内容。文件属性是对文件进行说明的信息。</li>\n<li>主要属性：\n<ul>\n<li><strong>文件名称</strong>：文件名称是供用户使用的外部标识，也是文件最基本的属性。</li>\n<li><strong>文件物理位置</strong>：具体标明文件在存储介质上所存放的物理位置。</li>\n<li><strong>文件拥有者</strong>：通常文件创建者对自己所建的文件拥有一切权限，而对其它用户所建的文件则拥有有限的权限。</li>\n<li><strong>文件权限</strong>：通过文件权限，文件拥有者可以为自己的文件赋予各种权限，如可允许自己读写和执行，允许同组的用户读写，而只允许其它用户读。</li>\n<li><strong>文件类型</strong>：可以从不同的角度来对文件进行分类，例如普通文件或是设备文件，可执行文件或是文本文件，等等。</li>\n<li><strong>文件长度</strong>：长度单位通常是字节。</li>\n<li><strong>文件时间</strong>：最初创建时间，最后一次的修改时间，最后一次的执行时间，最后一次的读时间等。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"文件的分类\"><a class=\"anchor\" href=\"#文件的分类\">#</a> 文件的分类</h4>\n<ul>\n<li>为了有效、方便地组织和管理文件，常按照不同的观点对文件进行分类。常用的几种文件分类方法：\n<ul>\n<li>按照<strong>文件的逻辑结构的不同</strong>：流式文件和纪录式文件。</li>\n<li>按照<strong>用途</strong>：系统文件、库文件和用户文件。</li>\n<li>按照<strong>性质</strong>：可以把文件分为普通文件、目录文件和特殊文件。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"文件的使用\"><a class=\"anchor\" href=\"#文件的使用\">#</a> 文件的使用</h4>\n<ul>\n<li>两类操作接口 ：\n<ul>\n<li>第一类是与文件有关的操作命令或作业控制语言中与文件有关的 JCL 语句</li>\n<li>第二类是提供给用户程序使用的文件类系统调用</li>\n</ul>\n</li>\n<li>主要的系统调用：\n<ul>\n<li>文件创建</li>\n<li>文件删除</li>\n<li>文件截断</li>\n<li>文件读</li>\n<li>文件写</li>\n<li>文件的读写定位</li>\n<li>文件打开</li>\n<li>文件关闭</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"文件的组织\"><a class=\"anchor\" href=\"#文件的组织\">#</a> 文件的组织</h3>\n<ul>\n<li>存储介质：用来存储文件信息的载体，例如，磁带、磁盘和光盘等。</li>\n<li>块：存储介质上连续信息所组成的一个区域，也叫做物理记录。\n<ul>\n<li>文件的内容及相关信息都是以 “块” 为单位存放在外存上的</li>\n<li>外存物理空间的分配是以块为单位的。</li>\n<li>块也是内存和外存进行信息交换的物理单位，每次总是交换一块或整数块信息。</li>\n</ul>\n</li>\n<li>文件组织：文件中信息的配置和构造方式，同一个文件应该从两个侧面来观察它的文件组织方式：</li>\n<li>文件的逻辑结构：从用户的观点出发观察到的文件组织形式，用户可以直接处理，独立于文件的物理特性。</li>\n<li>文件的物理结构：逻辑文件在物理存储空间中存放方法和组织关系，又称文件的存储结构</li>\n</ul>\n<h4 id=\"文件的逻辑结构\"><a class=\"anchor\" href=\"#文件的逻辑结构\">#</a> 文件的逻辑结构 😎</h4>\n<h5 id=\"流式文件\"><a class=\"anchor\" href=\"#流式文件\">#</a> 流式文件</h5>\n<ul>\n<li>流式文件：<strong>文件内的数据不组成记录，只是依次的一串信息集合</strong>，如字节流或字符流，它也可以看成是无结构的或只有一个记录的记录式文件，所以也称作<strong>无结构</strong>文件</li>\n<li><strong>字节或字符</strong>是访问流式文件的基本单位，顺序存取时读 / 写指针每次步进 1 个字节或 1 个字符长度。</li>\n<li>流式文件举例：<strong>源程序文件</strong>、<strong>可执行文件</strong>和<strong>库函数文件</strong>等</li>\n<li>这些类型的文件并不需要分记录</li>\n<li>没有结构并非意味着该类型的文件不能有结构，处理该文件的软件可以按照用户定义的结构来操作文件。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-28.png\" alt=\"流式文件\" /></p>\n<h5 id=\"记录式文件\"><a class=\"anchor\" href=\"#记录式文件\">#</a> 记录式文件</h5>\n<ul>\n<li>记录式文件：<strong>一种有结构的文件，指文件中的数据由若干条定长或不定长的记录构成，每条记录又由若干数据项构成</strong>。</li>\n<li><strong>记录</strong>是记录式文件进行存取的基本单位，顺序访问时文件读 / 写指针每次步进一条记录长度。</li>\n<li>定长记录文件和不定长记录文件：记录式文件中的所有记录长度一般都相等，也可以不等</li>\n<li>纪录式文件中记录之间的组织方式非常重要，设计时要综合考虑很多因素，例如，如何提高检索速度，如何便于记录的增删改等。</li>\n</ul>\n<h6 id=\"顺序文件\"><a class=\"anchor\" href=\"#顺序文件\">#</a> 顺序文件</h6>\n<ul>\n<li>顺序文件：<strong>记录之间按某种顺序排列组织所形成的文件</strong></li>\n<li>在顺序文件中的记录可以按照不同的顺序进行排列。\n<ul>\n<li>一种是按照存入的时间先后排序：各记录之间的顺序与记录的关键字或内容无关。（日志文件和各种现场记录文件等场合）；</li>\n<li>一种是按照记录中的关键字排序。</li>\n</ul>\n</li>\n<li>顺序文件的存取方式：\n<ul>\n<li><strong>顺序</strong>存取：只要在系统中分别设置读写指针 <code>Rptr</code>  和 <code>Wptr</code> ，读完或写完一条记录后修改该指针指向下一条记录。</li>\n<li><strong>直接</strong>存取：也叫随机存取。主要适用于定长记录的顺序文件（任何记录的位置都很容易通过记录长度计算出来）。</li>\n</ul>\n</li>\n<li>优点：\n<ul>\n<li>适合大量记录批量存取的场合，此时对顺序文件的存取效率是所有逻辑文件中最高的。</li>\n<li>只有顺序文件才能被存储在磁带上</li>\n</ul>\n</li>\n<li>缺点：\n<ul>\n<li>不适合交互系统中用户要求查找或修改单个记录的情况（但是给出记录位置查找定长记录除外）</li>\n<li>增删记录比较困难，因为增加或删除记录后需要重新组织记录的顺序和关键字。</li>\n</ul>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-29.png\" alt=\"顺序文件\" /></p>\n<h6 id=\"索引文件\"><a class=\"anchor\" href=\"#索引文件\">#</a> 索引文件</h6>\n<ul>\n<li>索引文件：为变长记录的顺序文件再建立一张索引表，对主文件中的每个记录在索引表中都有相应的表项，用于记录该记录的长度以及指向该记录的指针。</li>\n<li>索引文件可以根据不同的关键字建立索引，形成包含多个索引表的索引文件。</li>\n<li>主要优点：\n<ul>\n<li>通过建立索引极大地提高了对文件的查找速度</li>\n<li>对增加和删除记录也非常方便</li>\n</ul>\n</li>\n<li>主要缺点：存储开销变大，增删记录时还需要修改索引表</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-30.png\" alt=\"索引文件\" /></p>\n<h6 id=\"索引顺序文件\"><a class=\"anchor\" href=\"#索引顺序文件\">#</a> 索引顺序文件</h6>\n<ul>\n<li><strong>将顺序文件中的多个记录组合成一组，并对每一组记录建立一个索引，通过索引指针指向该记录组中的第一条记录</strong></li>\n<li>索引顺序文件是顺序文件和索引文件相结合的产物，结合两者的优点，同时又能有效克服变长记录文件的缺点，而且所付出的代价也小。</li>\n<li>查找方法：首先也是利用用户（程序）所提供的关键字，以及某种查找算法去检索索引表，找到该记录所在记录组中第一个记录的表项，从中得到该记录组第一个记录在主文件中的位置。再利用顺序查找法去查找主文件，从中找到所要求的记录。</li>\n<li>主要优点：索引表占用空间小，同时查找效率比顺序文件又高，因此在文件记录比较多时采用索引顺序文件比较适合。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-31.png\" alt=\"索引顺序文件\" /></p>\n<h4 id=\"记录的成组与分解\"><a class=\"anchor\" href=\"#记录的成组与分解\">#</a> 记录的成组与分解</h4>\n<ul>\n<li><strong>逻辑记录</strong>：记录式文件的逻辑结构中的每条记录描述（用户看到的），按信息在逻辑上的独立含义划分的单位</li>\n<li><strong>物理记录</strong>：即 “块”，存储介质上连续信息所组成的区域，文件的内容及相关信息都是以 “块” 为单位存放在外存上的（外存存放的单位）</li>\n<li>当一个物理块包含多个逻辑记录时需要进行<strong>记录的成组和分解</strong></li>\n<li><strong>记录的成组</strong>：若干个逻辑记录合并成一组，写入一个块。</li>\n<li>每块中的逻辑记录的个数称<strong>块因子</strong>。</li>\n<li>成组操作一般先在输出缓冲区内进行，凑满一块后才将缓冲区内的信息写到存储介质上。</li>\n<li><strong>记录的分解</strong>：当存储介质上的一个物理记录读进输入缓冲区后，把逻辑记录从块中分离出来的操作叫记录的分解。</li>\n<li>文件被打开后，在主存中分配相应的输入输出缓冲区，用于成组和分解。由于容量有限，操作系统限定同时打开的文件个数，以防止文件缓冲区太多而挤占紧张的主存空间。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-32.png\" alt=\"缓冲区\" /></p>\n<h4 id=\"文件的物理结构\"><a class=\"anchor\" href=\"#文件的物理结构\">#</a> 文件的物理结构 😎</h4>\n<ul>\n<li>文件的物理结构不仅取决于存储介质的存储特性，还与采用的外存分配方式有关。</li>\n<li>考察文件的物理结构时应该把文件看作相关物理块的集合以及如何给文件分配所需要的物理块</li>\n</ul>\n<h5 id=\"连续文件\"><a class=\"anchor\" href=\"#连续文件\">#</a> 连续文件</h5>\n<ul>\n<li><strong>把一个逻辑上连续的文件信息存放在依次相邻的物理块中的组织形式</strong>。</li>\n<li>连续文件是基于磁带设备的最简单的物理结构，也适合其它各种外存设备。</li>\n<li>文件物理地址的存储方式：目录项的 “文件物理地址” 字段中，记录该文件第一个记录所在的盘块号和文件长度（以盘块为单位）</li>\n<li>优点：在顺序存取时速度较快，非常便于顺序访问。（因为只要在目录中找到顺序文件所在的第一个盘块号，就可以从此开始逐个盘块往下读写。）</li>\n<li>应用场合：常用于存放系统文件，如操作系统文件、编译程序文件和其它由系统提供的实用程序文件，因为这类文件往往被从头至尾依次存取</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-33.png\" alt=\"连续文件的组织方式\" /></p>\n<h5 id=\"链接文件\"><a class=\"anchor\" href=\"#链接文件\">#</a> 链接文件</h5>\n<ul>\n<li>非连续分配：<strong>把一个逻辑上连续的文件分散地存放在不同的物理块中，这些物理块既不要求连续，也不必按规则排列</strong>。</li>\n<li>链接分配是非连续分配的一种。</li>\n<li>链接文件（链接分配）：通过每个物理块上的链接指针将同属于一个文件的多个离散的盘块链结成一个链表的组织形式，实现了离散分配</li>\n<li>优点：\n<ul>\n<li>能适应文件的动态增长</li>\n<li>消除了磁盘的外部碎片</li>\n<li>添加、删除和修改记录也更方便。</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"隐式链接\"><a class=\"anchor\" href=\"#隐式链接\">#</a> 隐式链接</h6>\n<ul>\n<li><strong>每个物理块自身存放下一物理块的链接指针</strong></li>\n<li>目录项的 “物理地址” 字段中只要保存该文件的起始块号和结束块号的指针</li>\n<li>主要缺点：\n<ul>\n<li>只适合于顺序访问，对随机访问是极其低效</li>\n<li>每个物理块上增加了一个链接信息，为信息管理添加了一些麻烦。</li>\n<li>通过链接指针将一大批离散的物理块链接起来，可靠性差，只要其中任何一个指针出现问题，都会导致整个文件信息丢失或出错。</li>\n</ul>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-34.png\" alt=\"隐式链接\" /></p>\n<h6 id=\"显式链接\"><a class=\"anchor\" href=\"#显式链接\">#</a> 显式链接</h6>\n<ul>\n<li><strong>把用于链接文件的各物理块指针显式地放在内存的一张表格中，表格的序号是物理块号</strong>，从 0 开始，直到 N-1，N 为整个磁盘的盘块的总数，表格的每个表项中存放链接指针即下一个盘块号。</li>\n<li>该表格就是 FAT（12,16,36）文件系统中的 FAT 表</li>\n<li>MS-DOS 和 windows 早中期操作系统一直采用的文件系统技术。</li>\n<li>在文件的目录项的 “物理地址” 字段中只要保存该文件的起始块号</li>\n<li>缺点\n<ul>\n<li>不支持高效的直接存取，对一个较大的文件进行存取时，须在 FAT 中顺序地查找许多盘块号；</li>\n<li>FAT 表本身需要占用较大的内存空间</li>\n</ul>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-35.png\" alt=\"显式链接\" /></p>\n<h5 id=\"索引分配文件\"><a class=\"anchor\" href=\"#索引分配文件\">#</a> 索引分配文件</h5>\n<ul>\n<li>索引分配结构：<strong>系统为每个文件建立一个索引表，集中记录该文件占用的盘块号</strong>。索引表可以直接存放在文件控制块 <code>FCB</code>  中，但是，大文件的索引表往往很大，所以大多数文件系统让索引表置于单独的物理块中且可驻留在磁盘的任意位置，文件控制块的 “物理地址” 字段只要保存该索引表所在的盘块号（即索引表地址）</li>\n<li>无键索引表：索引表记录的是组成指定文件的磁盘块号，这种索引只是盘块号的序列，适用于流式文件；</li>\n<li><img loading=\"lazy\" data-src=\"ComputerSystem/image-36.png\" alt=\"无键索引表\" /></li>\n<li>有键索引表：该索引表的索引表项包含逻辑记录键及其磁盘块号，指出了每条逻辑记录在磁盘上的存放地址，即物理块号，适用于纪录式文件。</li>\n<li><img loading=\"lazy\" data-src=\"ComputerSystem/image-37.png\" alt=\"有键索引表\" /></li>\n<li>优点\n<ul>\n<li>实现了离散分配</li>\n<li>有利于直接存取</li>\n</ul>\n</li>\n<li>缺点\n<ul>\n<li>索引表增加了空间开销，</li>\n<li>不适合中小型文件，对于中小型文件会有空间的浪费。因为往往一个盘块能存放数百个盘块号，但对于中小型文件，本身通常只占用数个到数十个盘块，甚至更少，但仍须为之分配以索引块。</li>\n<li>索引表的查找增加了时间开销。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"多级索引文件\"><a class=\"anchor\" href=\"#多级索引文件\">#</a> 多级索引文件</h5>\n<ul>\n<li>以上索引文件为一级索引文件：存放文件内容所占物理块号的盘块也称作一级索引块</li>\n<li>一级索引存在的问题：当索引表本身占用许多物理块时，在查找某键对应的索引项时，可能依次需交换很多块。若索引表占用 n 块，则平均要交换 (n+1)／２次，才能找到所需记录的物理地址，当 n 很大时，这是很费时间的操作。</li>\n<li>解决方法：为了提高大文件的查找速度，可以为这些一级索引块再建立一个索引，称为二级索引，即系统再分配一个盘块记录一级索引块的块号。</li>\n<li>如果文件再大，还可以建立三级、四级索引，依次类推。</li>\n<li>在 Unix 系统中，为了能兼顾到小、中、大以及特大型文件，采取了混合索引结构。</li>\n<li>它在文件控制块的地址部分设置了 13 个地址项，即 <code>iaddr(0)</code> - <code>iaddr(12)</code> ，混合了四种寻址方式：直接寻址、一级索引寻址、二级索引寻址和三级索引寻址。</li>\n<li><code>iaddr(0)</code> - <code>iaddr(9)</code>  存放了直接寻址指针，即该指针指向的盘块直接存放了该文件的数据内容，如果文件再大就可以用到第 11、12 和 13 个地址项（ <code>iaddr(10)</code> - <code>iaddr(12)</code> ），分别存放的是一级索引地址、二级索引地址和三级索引地址。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-38.png\" alt=\"多级索引结构\" /></p>\n<h5 id=\"直接文件\"><a class=\"anchor\" href=\"#直接文件\">#</a> 直接文件</h5>\n<ul>\n<li><strong>利用哈希函数直接建立逻辑记录的关键字与其物理地址的对应关系的文件组织形式</strong>。</li>\n<li>直接文件只能在直接存取的存储设备（如磁盘）上实现，并且主要用于记录式文件。</li>\n<li>优点：\n<ul>\n<li>记录在介质上不需要按序存放，因为它能根据关键字直接计算出物理地址，所以最适合直接存取；</li>\n<li>相对于索引文件，它不需索引，节省了索引存储空间和索引查找时间。</li>\n</ul>\n</li>\n<li>适用场合：直接文件在不能采用顺序组织方法、次序较乱、又需在极短时间内存取的场合下极为适合，例如操作系统目录文件、实时处理文件、存储管理的页表查找、编译程序变量名表等采用直接文件特别有效。</li>\n<li>主要缺点：需要解决冲突问题。因为地址的总数和关键字之间不存在一一对应关系。</li>\n</ul>\n<h4 id=\"文件的存取方法\"><a class=\"anchor\" href=\"#文件的存取方法\">#</a> 文件的存取方法</h4>\n<ul>\n<li>存取方法：如何存储和检索文件数据的方法，它是操作系统为用户程序提供的使用文件的技术和手段。</li>\n<li>存取方法和文件的逻辑结构、物理结构以及存储介质有密切的关系，许多操作系统都提供多种存取方法，而在一些文件处理密集的系统软件中，如数据库管理系统，文件存取的方法就更加丰富。</li>\n<li>常用的方法：<strong>顺序存取</strong>，<strong>直接存取</strong>，<strong>按键存取</strong></li>\n</ul>\n<h4 id=\"文件存储空间管理\"><a class=\"anchor\" href=\"#文件存储空间管理\">#</a> 文件存储空间管理</h4>\n<ul>\n<li>文件管理的主要功能之一是如何在外部存储介质上为创建或扩充文件而分配空间，为删除文件而回收空间以及对空闲空间的管理。</li>\n<li>磁盘可以随机存取的特性非常适合文件系统的实现，因此磁盘是最常用的文件外部存储介质</li>\n<li>文件存储空间管理主要涉及两个问题：\n<ul>\n<li>磁盘空间的分配</li>\n<li>磁盘空闲空间的有效管理</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"磁盘空间的分配\"><a class=\"anchor\" href=\"#磁盘空间的分配\">#</a> 磁盘空间的分配</h5>\n<h6 id=\"连续分配\"><a class=\"anchor\" href=\"#连续分配\">#</a> 连续分配</h6>\n<ul>\n<li>文件被存放在外存空间连续存储区 (连续的物理块号) 中，在建立文件时，用户必须给出文件大小，然后，查找到能满足的连续存储区供使用，否则文件不能建立，用户进程必须等待。</li>\n<li>优点：顺序访问时通常无需移动磁头，文件查找速度快，管理较为简单</li>\n<li>缺点：为了获得足够大的连续存储区，需定时进行‘碎片’收集。因而，不适宜于文件频繁动态增长和收缩的情况，用户事先不知道文件长度也无法进行分配</li>\n</ul>\n<h6 id=\"非连续分配\"><a class=\"anchor\" href=\"#非连续分配\">#</a> 非连续分配</h6>\n<ul>\n<li>非连续分配是指以物理块（扇区）为单位，按文件动态要求分配物理块，这些物理块不一定要连续，属于同一文件的块按文件记录的逻辑次序用链接指针连接或用索引表指示，即链接分配和索引分配。</li>\n<li>优点：辅存空间管理效率高，便于文件动态增长和收缩，访问文件执行速度快，特别是以簇为单位的分配方法已被广泛使用。</li>\n</ul>\n<h5 id=\"磁盘空闲空间的管理\"><a class=\"anchor\" href=\"#磁盘空闲空间的管理\">#</a> 磁盘空闲空间的管理</h5>\n<h6 id=\"空闲区表法\"><a class=\"anchor\" href=\"#空闲区表法\">#</a> 空闲区表法</h6>\n<ul>\n<li>系统为外存上的所有空闲块建立一张空闲区表，每个表项记录了一个空闲区，主要包括该空闲区的第一个空闲盘块号、该区的空闲盘块和状态等信息，再将所有的空闲区按其起始盘块号递增的次序排列。</li>\n</ul>\n<h6 id=\"空闲块链表法\"><a class=\"anchor\" href=\"#空闲块链表法\">#</a> 空闲块链表法</h6>\n<ul>\n<li>空闲块链表法是将所有空闲块连接在一起，组成一个空闲块链表</li>\n<li>空闲块链表的一个变种是空闲盘区链，将磁盘上的所有空闲盘区（每个盘区可包含若干个盘块）组成一个链表，也适合连续文件的组织形式。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-39.png\" alt=\"空闲块链表\" /></p>\n<h6 id=\"位示图法\"><a class=\"anchor\" href=\"#位示图法\">#</a> 位示图法</h6>\n<ul>\n<li>空闲空间表还可由位图或位矢量的方法来实现。<strong>每一个磁盘块由 1 位（bit）来表示</strong>。如果该磁盘块是空闲的，这个位就置 0；否则，就置 1</li>\n</ul>\n<h3 id=\"文件目录\"><a class=\"anchor\" href=\"#文件目录\">#</a> 文件目录</h3>\n<h4 id=\"文件目录的基本概念\"><a class=\"anchor\" href=\"#文件目录的基本概念\">#</a> 文件目录的基本概念 😊</h4>\n<h5 id=\"文件控制块\"><a class=\"anchor\" href=\"#文件控制块\">#</a> 文件控制块</h5>\n<ul>\n<li>为了能对文件进行正确的存取，必须<strong>为文件设置用于描述和控制文件的数据结构</strong>，称之为文件控制块（File Control Block， <code>FCB</code> ）。</li>\n<li>每当创建一个文件，系统都要为其建立一个 <code>FCB</code> ， <code>FCB</code>  和文件是一一对应的。每个文件有两部分组成：\n<ul>\n<li><code>FCB</code> （文件属性信息）</li>\n<li>文件体（文件内容信息）</li>\n</ul>\n</li>\n<li><code>FCB</code>  一般包括以下文件属性信息：\n<ul>\n<li><strong>有关文件存取控制的信息</strong>。</li>\n<li><strong>有关文件结构的信息</strong>。文件的逻辑结构，如记录类型、记录个数、记录长度、成组因子数等。文件的物理结构，如文件所在设备名，文件物理结构类型，记录存放在外存的相对位置或文件第一块的物理块号，也可指出文件索引的存放位置等。</li>\n<li><strong>有关文件使用的信息</strong>。已打开该文件的进程数，文件被修改的情况，文件最大和当前大小等。</li>\n<li><strong>有关文件管理的信息</strong>。如文件建立日期、文件最近修改日期、文件访问日期、文件保留期限、记帐信息等</li>\n</ul>\n</li>\n<li><code>FCB</code>  的重要作用：建立文件名与外存空间中的物理地址的对应关系，从而实现 “按名存取”。</li>\n<li>主要过程：系统存取文件时，先找到其 <code>FCB</code> ，从 <code>FCB</code>  中再找到文件信息盘块号或首块物理位置等物理地址信息就能存取文件信息。</li>\n</ul>\n<h5 id=\"文件目录和目录文件\"><a class=\"anchor\" href=\"#文件目录和目录文件\">#</a> 文件目录和目录文件</h5>\n<ul>\n<li>为了加快文件的查找速度，通常把 <code>FCB</code>  集中起来进行管理，文件控制块的有序集合称为文件目录，即一个文件控制块就是一个文件目录项。</li>\n<li>文件目录也是以文件的形式保存在外存上的，这就形成了目录文件。</li>\n<li>因此，文件目录的目录项有两种，一种是用于描述子目录（即目录文件）的 <code>FCB</code> ，一种是普通文件的 <code>FCB</code> 。</li>\n<li>目录文件与普通文件不同之处：</li>\n<li>目录文件永远不会空，它至少包含两个目录项\n<ul>\n<li>当前目录项 “.”</li>\n<li>父目录项 “..”</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>注意：要搜索到某个文件的外存物理地址，必须先从文件的最外层目录逐层搜索匹配比较。文件目录和 <code>FCB</code>  是现实 “按名存取” 的重要数据结构</p>\n</blockquote>\n<h4 id=\"目录文件的组织\"><a class=\"anchor\" href=\"#目录文件的组织\">#</a> 目录文件的组织 😊</h4>\n<h5 id=\"fcb线性表\"><a class=\"anchor\" href=\"#fcb线性表\">#</a>  <code>FCB</code>  线性表</h5>\n<ul>\n<li>目录文件中直接存放该目录下所有文件和子目录的 <code>FCB</code>  信息，组成了一个 <code>FCB</code>  线性表，即每个目录项记录了该文件或子目录对应的完整 <code>FCB</code>  信息</li>\n<li>缺点：这样组织 <code>FCB</code> ，当文件很多时，目录文件本身可能要占用大量的盘块数，使得目录检索的速度很慢。</li>\n</ul>\n<h5 id=\"索引节点\"><a class=\"anchor\" href=\"#索引节点\">#</a> 索引节点</h5>\n<ul>\n<li>基本思想：在检索目录文件的过程中，其实只用到了文件名，仅当找到一个目录项（即其中的文件名与指定要查找的文件名相匹配）时，才需从该目录项中读出该文件的物理地址。而其他一些对该文件进行描述的信息，在检索目录时一概不用。显然，这些信息在检索目录时，不需要调入内存。</li>\n<li><strong>索引节点</strong>：把<strong>文件目录项中的文件名和其它描述信息分开</strong>，后者单独组成定长的一个数据结构，称为索引节点（ <code>i-node</code>  或 <code>inode</code>  也称 i 节点）</li>\n<li><strong>索引节点号</strong>：一个文件系统中的所有文件的索引节点都集中存放在外存上的索引节点区，并对每个索引节点进行编号（i 节点号）。</li>\n<li><strong>文件目录项</strong>： 不再是完整的 <code>FCB</code> ，只要存放 14 个字节的文件名和 2 个字节的 i 节点号</li>\n<li>优点：通过索引节点的组织方式大大提高了目录的检索速度</li>\n<li>外存索引节点存在的问题：由于访问某一文件的过程中，会频繁地涉及到文件的索引节点，不断在内、外存之间引用它，系统消耗很大。</li>\n<li>解决方法：<strong>内存（活动）索引节点表</strong>，正在被使用的索引节点信息保存到内存索引节点表。</li>\n<li>在系统占用的内存区里专门开辟一张表（例如 100 个表目）每个表目称为一个<strong>内存活动 i 节点</strong>。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-40.png\" alt=\"目录项、索引节点和数据块之间的关系\" /></p>\n<blockquote>\n<p>检索文件的过程：检索文件时，先从目录文件中找到文件名匹配的目录项，在目录项中找到该文件的索引节点号，根据索引节点号就可以在索引节点区中找到该文件的索引节点，找到了 i 节点，就获得了它所对应的文件的一切必要属性信息。</p>\n</blockquote>\n<h5 id=\"哈希表组织\"><a class=\"anchor\" href=\"#哈希表组织\">#</a> 哈希表组织</h5>\n<ul>\n<li>具体实现：目录文件每个目录项中存放一个块号，每个目录项都设一个序号（类似于数组下标），哈希函数以文件名作为自变量计算散列函数的值，以该值作为序号直接定位的目录文件中的目录项，然后在目录项中找到块号，该块号所指的块内就存放了该文件的 <code>FCB</code> 。</li>\n<li>具有相同散列值的文件的 <code>FCB</code>  放在一个物理块内，如果相同散列值的文件数目超过一个物理块能存放 <code>FCB</code>  的数目就产生冲突，需要作溢出处理。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-41.png\" alt=\"哈希表\" /></p>\n<blockquote>\n<p>该方法可以大幅度地减少目录搜索时间。插入和删除目录项都很简单，只需要考虑两个目录项冲突的情况，即两个文件名返回的数值一样的情形。哈希表的主要难点是选择合适的哈希表长度与适当的哈希函数。</p>\n</blockquote>\n<h4 id=\"目录的结构\"><a class=\"anchor\" href=\"#目录的结构\">#</a> 目录的结构</h4>\n<h5 id=\"单级目录结构\"><a class=\"anchor\" href=\"#单级目录结构\">#</a> 单级目录结构</h5>\n<ul>\n<li>整个文件系统中仅建立和维护一张总的目录表，系统中所有文件都在该表中占有一项。</li>\n<li>优点：实现简单</li>\n<li>缺点：\n<ul>\n<li>不允许文件重名。</li>\n<li>文件查找速度慢。</li>\n<li>不便于实现文件共享。单级目录结构只适合于单用户操作系统。</li>\n</ul>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-42.png\" alt=\"单级目录\" /></p>\n<h5 id=\"两级目录结构\"><a class=\"anchor\" href=\"#两级目录结构\">#</a> 两级目录结构</h5>\n<ul>\n<li>二级目录可以解决文件重名，即把系统中的目录分为一个主目录（Master File Directory，MFD）和多个次目录（User File Directory，UFD）。</li>\n<li>在多用户系统中，一般每个用户都拥有一个属于自己的次目录 UFD，而主目录 MFD 则存储着各个 UFD 的信息，标明各个 UFD 的名称、物理位置等。</li>\n<li>当使用文件时，用户必须给出用户名和文件名。系统根据用户名在主目录中找到该用户目录，再根据文件名在用户目录中找到文件的物理地址。</li>\n<li>优点：\n<ul>\n<li>提高了文件检索速度（用户名大大缩小了需要检索的文件数量）</li>\n<li>部分地允许文件名重名。</li>\n</ul>\n</li>\n<li>缺点：对同一用户，也不能有两个同名的文件存在，限制了共享；多个用户完全隔离开来不便于实现多个用户协同完成任务。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-44.png\" alt=\"两级目录\" /></p>\n<h5 id=\"多级层次目录\"><a class=\"anchor\" href=\"#多级层次目录\">#</a> 多级层次目录</h5>\n<ul>\n<li>多级层次目录（树形目录）可以明显地提高对目录的检索速度和文件系统的性能。</li>\n<li>在多级层次目录结构中，有一个根目录和许多分目录，根目录是唯一的，每一级目录不但可以包含文件，而且还可以包含下一级的分目录，从而形成了树状目录结构</li>\n<li>几个概念：\n<ul>\n<li>路径名（ <code>path name</code> ）</li>\n<li>绝对路径（ <code>absolute path name</code> ）</li>\n<li>当前目录（ <code>current directory</code> ）</li>\n<li>相对路径名（ <code>relative path name</code> ）</li>\n</ul>\n</li>\n<li>优点：\n<ul>\n<li>既可方便用户查找文件，又可以把不同类型和不同用途的文件分类。</li>\n<li>允许文件重名。</li>\n<li>利用多级层次结构关系，可以更方便地制定保护文件的存取权限</li>\n</ul>\n</li>\n<li>缺点：不能直接支持文件或目录的共享，因为这种纯树型目录中每个文件只能有一个父目录</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-45.png\" alt=\"多级层次目录\" /></p>\n<h5 id=\"图状目录结构\"><a class=\"anchor\" href=\"#图状目录结构\">#</a> 图状目录结构</h5>\n<ul>\n<li>有向无环图目录结构：允许一个文件有多个父目录，不同的目录可以以相同或不同的文件名共享同一个文件，形成的目录结构图不会出现环（因为不支持目录共享）</li>\n<li><img loading=\"lazy\" data-src=\"ComputerSystem/image-46.png\" alt=\"无环图状目录结构（文件共享）\" /></li>\n<li>有环图目录结构：除了允许文件被共享，还支持目录被共享，则目录结构图中就有可能出现环</li>\n<li><img loading=\"lazy\" data-src=\"ComputerSystem/image-47.png\" alt=\"有环图状目录结构（目录共享）\" /></li>\n</ul>\n<h4 id=\"目录的检索\"><a class=\"anchor\" href=\"#目录的检索\">#</a> 目录的检索</h4>\n<ul>\n<li>在采用树形目录结构的文件系统中，要根据用户提供的文件路径名，从根目录或当前目录开始，逐级查找路径名中的各子目录名，用它们作为索引，逐层搜索各个目录文件，最后找到匹配的文件目录项</li>\n</ul>\n<h4 id=\"文件目录操作\"><a class=\"anchor\" href=\"#文件目录操作\">#</a> 文件目录操作</h4>\n<ul>\n<li>创建目录：在外部存储介质中，创建一个目录文件以备存取文件属性信息。</li>\n<li>删除目录：从外部存储介质中，删除一个目录文件。只有当目录为空时，才能删除。</li>\n<li>改变目录：用户可利用改变目录的命令，通过指定目录的绝对或相对路径名，设置当前目录。</li>\n<li>检索目录：首先，系统利用用户提供的文件名，对文件目录进行查询，以找到相应的属性信息；然后，根据这些属性信息，得出文件所在外部存储介质的物理位置；最后，如果需要，可启动磁盘驱动程序，将所需的文件数据读到内存中。</li>\n<li>移动目录：允许文件或子目录在不同的父目录之间移动，文件或子目录经移动后，其文件的路径名将随之改变。</li>\n<li>链接操作：通过链接操作，让指定文件具有多个父目录，从而实现文件共享。</li>\n<li>打开目录：如要使用的目录不在内存中，则需要打开目录，从外存上读入相应的目录文件。</li>\n<li>关闭目录：当所用目录使用结束后，应关闭目录以释放内存空间。</li>\n</ul>\n<h3 id=\"文件系统调用的实现\"><a class=\"anchor\" href=\"#文件系统调用的实现\">#</a> 文件系统调用的实现</h3>\n<h4 id=\"实现系统调用的相关数据结构\"><a class=\"anchor\" href=\"#实现系统调用的相关数据结构\">#</a> 实现系统调用的相关数据结构</h4>\n<h5 id=\"用户打开文件表\"><a class=\"anchor\" href=\"#用户打开文件表\">#</a> 用户打开文件表</h5>\n<ul>\n<li>进程 PCB 结构中保留一个 <code>files_struct</code> ，称为用户打开文件表或文件描述符表。表项的序号是文件描述符 <code>fd</code> ，此登记项内登记系统打开文件表的一个入口指针 <code>fp</code> ，通过此系统打开文件表项连接到打开文件的活动 <code>inode</code></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-48.png\" alt=\"用户打开文件表\" /></p>\n<h5 id=\"系统打开文件表\"><a class=\"anchor\" href=\"#系统打开文件表\">#</a> 系统打开文件表</h5>\n<ul>\n<li>为解决多用户进程共享文件、父子进程共享文件而设置的系统数据结构 <code>file_struct</code> 。主存专门开辟最多登记 256 项的系统打开文件表区，当打开一个文件时，通过此表项把用户打开文件表的表项与文件活动 <code>inode</code>  连接起来，以实现数据的访问和信息共享</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-49.png\" alt=\"系统打开文件表\" /></p>\n<h5 id=\"活动索引节点表\"><a class=\"anchor\" href=\"#活动索引节点表\">#</a> 活动索引节点表</h5>\n<ul>\n<li>由于文件的索引节点中保存的信息非常重要，当系统需要对文件进行各种操作时，都离不开文件系统的索引节点表中指出的文件属性信息。因此，在实现中也将被访问文件在磁盘中的索引节点复制到内存中，构成了活动索引节点表，从而使对文件的访问更加便利和快捷</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-50.png\" alt=\"活动索引节点表\" /></p>\n<h5 id=\"内存各数据结构之间的关系\"><a class=\"anchor\" href=\"#内存各数据结构之间的关系\">#</a> 内存各数据结构之间的关系</h5>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-51.png\" alt=\"内存各数据结构之间的关系\" /></p>\n<h4 id=\"创建文件\"><a class=\"anchor\" href=\"#创建文件\">#</a> 创建文件</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> fd <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>pathname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><code>fd=create(“/home/zhao/file1.c”,0775)</code>  执行的具体过程：\n<ul>\n<li>为新文件 <code>file1.c</code>  分配磁盘 <code>inode</code>  和活动 <code>inode</code> ，并把 <code>inode</code>  号与文件分量名 <code>file1.c</code>  组成新的目录项，记录到该文件目录路径 <code>/home/zhao</code>  的目录文件中。显然，在这一过程中，需要执行目录检索程序。</li>\n<li>在新文件所对应的活动 <code>inode</code>  中置初值，包括把存取权限 <code>i_mode</code>  置为 <code>0775</code> ，链接计数 <code>i_count</code>  置为 “1” 等。</li>\n<li>为新文件分配用户打开文件表项和系统打开文件表项，置系统打开文件表项的初值，包括在 <code>f_flag</code>  中置 “写” 标志，读写位移 <code>f_offset</code>  清 0，等等；把用户打开文件表项、系统打开文件表项及 <code>file1.c</code>  所对应的活动 <code>inode</code>  用指针连接起来，最后，把文件描述符 <code>fd</code>  返回给调用者。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"文件的链接-解除链接和删除\"><a class=\"anchor\" href=\"#文件的链接-解除链接和删除\">#</a> 文件的链接、解除链接和删除</h4>\n<ul>\n<li><code>link</code>  和 <code>unlink</code>\n<ul>\n<li><code>link</code> : 链接文件，实现文件共享， <code>i_nlink+1</code></li>\n<li><code>unlink</code> ：删除文件或解除链接， <code>i_nlink-1</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>注意：删除的任务是把指定文件从所在的目录文件中去除，删除时如果没有链接用户（即 <code>i_nlink</code>  为 “1”），还要把文件占用的存储空间释放。</p>\n</blockquote>\n<h4 id=\"打开文件\"><a class=\"anchor\" href=\"#打开文件\">#</a> 打开文件</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> fd <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>pathname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> flags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>打开：文件在使用之前必须先 “打开”，以建立进程与文件之间的联系，而文件描述符唯一地标识了这样一种连接，其任务是把文件的磁盘索引节点复制到主存的活动索引节点表中，同时建立一个独立的读写文件数据结构，即系统打开文件表的一个表项。</li>\n<li>实现过程：\n<ul>\n<li>检查是否有其他进程已经打开该文件，如果有，则活动 <code>inode</code>  表中已有此文件的 <code>inode</code> ，只要把对应的活动 <code>inode</code>  中的 <code>i_count</code>  加 1， <code>i_count</code>  反映了通过不同的系统打开文件表项来共享同一活动 <code>inode</code>  的进程数目，它是以后执行文件关闭操作时，活动 <code>inode</code>  能否被释放的依据。</li>\n<li>如果是第一次打开该文件，则检索目录，要求打开的文件应该是已经创建的文件，它应登记在文件目录中，否则会出错。在检索到指定文件之后，就把它的磁盘索引节点复制到活动索引节点表中。</li>\n<li>根据参数 <code>flags</code>  所给出的打开方式与活动索引节点中在创建文件时所记录的文件访问权限相比较，如果非法，则这次打开失败。</li>\n<li>当 “打开” 合法时，为文件分配用户打开文件表项和系统打开文件表项，并为表项设置初值。通过指针建立这些表项与活动索引节点间的联系。把文件描述符 <code>fd</code> （即用户打开文件表中相应文件表项的序号）返回给调用者。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"关闭文件\"><a class=\"anchor\" href=\"#关闭文件\">#</a> 关闭文件</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>关闭：活动索引节点表的大小受到容量的限制，这就要求用户一旦不再对文件进行操作时，应立即释放相应的活动索引节点，以便让其他进程使用</li>\n<li>实现过程\n<ul>\n<li>根据 <code>fd</code>  找到用户打开文件表项，再找到系统打开文件表项。释放用户打开文件表项。</li>\n<li>把对应系统打开文件表项中的 <code>f_count</code>  减 “1”，如果非 “0”，说明进程族（例如父子进程）中还有进程共享这一表项，不用释放此表项直接返回；否则释放表项，并找到与之连接的活动索引节点。</li>\n<li>把活动索引节点中的 <code>i_count</code>  减 “1”，若不为 “0”，表明还有其他用户进程正在使用该文件，不用释放而直接返回，否则在把该活动索引节点中的内容复制回磁盘上的相应索引节点中后，释放该活动索引节点。</li>\n</ul>\n</li>\n<li>关于 <code>f_count</code>  和 <code>i_count</code>  (实现动态共享)\n<ul>\n<li><code>f_count</code>  反映不同进程通过同一个系统打开文件表项共享一个文件的情况；</li>\n<li><code>i_count</code>  反映不同进程通过不同系统打开文件表项共享一个文件的情况。</li>\n<li>由于文件的读写位移指针是存放在系统打开文件表项中的，所以前者实现的是使用相同位移指针的动态共享文件方式，主要适合同一进程族中的进程之间，即父子进程之间共享文件；后者实现的是使用不同读写位移指针的动态共享文件方式。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"读文件\"><a class=\"anchor\" href=\"#读文件\">#</a> 读文件</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> nr <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>buf<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>实现过程：首先根据 <code>f_flag</code>  中的信息，检查读操作合法性，如果读操作合法，按活动索引节点中 <code>i_addr</code>  指出的文件物理块存放地址，从文件的当前位移量 <code>f_offset</code>  处开始，读出所要求的字节数到块设备缓冲区中，然后再送到 <code>bufp</code>  指向的用户主存区中。</li>\n</ul>\n<h4 id=\"写文件\"><a class=\"anchor\" href=\"#写文件\">#</a> 写文件</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> nw <span class=\"token operator\">=</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>buf<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>其中 <code>fd</code> 、 <code>count</code>  和 <code>nw</code>  的含义类似于 <code>read</code>  中的含义， <code>buf</code>  是信息传送的源地址，即把 <code>buf</code>  所指向的用户数据区中的信息写入文件中。</li>\n</ul>\n<h4 id=\"随机存取\"><a class=\"anchor\" href=\"#随机存取\">#</a> 随机存取</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">lseek</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> fe<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> whence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>其中，当 <code>whence</code>  值为 0 时，则 <code>f_offset</code>  被置为参数 <code>offset</code>  的值；当 <code>whence</code>  值为 1 是，则 <code>f_offset</code>  被置为文件当前位置值加上 <code>offset</code>  的值</li>\n<li>关于 <code>f_offset</code> : 在文件初次 “打开” 时，文件的位移量 <code>f_offset</code>  清空为 0，以后的文件读写操作总是根据 <code>offset</code>  的当前值来顺序地读写文件。</li>\n<li>为了支持文件的随机访问，文件系统提供了系统调用 <code>lseek</code> ，允许用户在读写文件之前，事先改变 <code>f_offset</code>  的指向。</li>\n</ul>\n<h3 id=\"文件共享\"><a class=\"anchor\" href=\"#文件共享\">#</a> 文件共享</h3>\n<h4 id=\"静态共享\"><a class=\"anchor\" href=\"#静态共享\">#</a> 静态共享</h4>\n<ul>\n<li>静态共享：文件或目录的共享关系不管用户是否正在使用系统都存在的共享方式。</li>\n<li>文件链接：允许一个文件或目录有多个父目录，实际上仅有一处物理存储</li>\n<li>静态共享主要有两种方式实现链接：一种是基于索引节点的方式，一般不适合目录共享，另一种是符号链接共享的方式，适合于文件也适合于目录</li>\n</ul>\n<h5 id=\"基于索引节点的链接共享\"><a class=\"anchor\" href=\"#基于索引节点的链接共享\">#</a> 基于索引节点的链接共享</h5>\n<ul>\n<li>通过索引节点实现链接： 多个目录共享一个文件，只要把被共享文件的目录项指向同一个索引节点，即存放相同的索引节点号，被共享的文件可以同名，也可以不同名。</li>\n<li>只适合文件共享</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-52.png\" alt=\"基于索引节点的链接共享\" /></p>\n<h5 id=\"符号链接共享\"><a class=\"anchor\" href=\"#符号链接共享\">#</a> 符号链接共享</h5>\n<ul>\n<li>符号链接：只有原文件的目录项才拥有指向其索引结点的指针，而共享该文件的其他链接文件只有该文件的路径名，并不拥有指向其索引结点的指针，这个保存的路径名也称作符号，所以叫符号链接。</li>\n<li>不但可以用于文件共享，也可用于目录共享</li>\n<li>符号链接本身是一种只有文件名，不指向 <code>inode</code>  的文件，是一种 <code>link</code>  类型的特殊文件。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-53.png\" alt=\"符号链接\" /></p>\n<h4 id=\"动态共享\"><a class=\"anchor\" href=\"#动态共享\">#</a> 动态共享</h4>\n<ul>\n<li>动态共享：就系统中不同的用户进程或同一用户的不同进程并发地访问同一文件。这种共享关系只有当用户进程存在时才可能出现，一旦用户的进程消亡，其共享关系也就自动消失。</li>\n<li>用户打开文件表、系统打开文件表和内存活动索引节点表是实现动态文件共享的重要数据结构</li>\n<li>根据是否共享读写位移指针，动态共享分为两种方式：共享位移指针的动态共享方式、不共享位移指针的动态共享方式</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-54.png\" alt=\"两种动态文件共享方式 \" /></p>\n<h3 id=\"文件系统体系结构\"><a class=\"anchor\" href=\"#文件系统体系结构\">#</a> 文件系统体系结构</h3>\n<ul>\n<li>文件系统的体系结构通常采用分层结构，有以下三部分组成:\n<ul>\n<li>文件管理层：实现文件的逻辑结构，为用户提供各种文件系统调用，及文件访问权限的设置等工作；</li>\n<li>目录管理：负责查找文件描述符，进而找到需要访问的文件，并进行访问权限检查等工作；</li>\n<li>磁盘主存映射管理：将文件的逻辑地址转换成磁盘的物理地址，即由逻辑块号找到柱面号、磁道号和扇区号，具体的数据传输操作由设备管理实现。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"文件系统的层次结构模型\"><a class=\"anchor\" href=\"#文件系统的层次结构模型\">#</a> 文件系统的层次结构模型</h4>\n<ul>\n<li>文件系统接口层：主要用于接收用户对文件的操作命令或系统调用，根据用户对文件的存取要求将其转换为统一格式的文件系统内部调用。</li>\n<li>文件目录管理层：根据文件名或文件路径名建立或搜索文件目录，获得文件内部标志和目录中的文件属性。从目录中的文件属性确定访问文件的用户身份，验证存取权限，判定本次文件操作的合法性，实现文件的存取、共享、保护。如果不允许当前用户访问，则发出操作失败信息。</li>\n<li>基本文件系统层：根据文件内部标志将文件说明信息调入内存，即打开文件，为访问文件做准备。该层根据文件的逻辑结构和存取方法等信息，把指定的逻辑记录地址变换成相应的物理块地址。对于流式文件，只要把用户指定的逻辑地址按块长计算出相对块号；对纪录式文件，先把记录号转换成逻辑地址，再把逻辑地址转换成相对块号。</li>\n<li>物理文件系统层：根据文件在内存中的物理结构信息，将相对块号和块内地址变换成文件存储器的物理块号和块内地址。</li>\n<li>设备分配控制层：负责文件存储空间的分配，动态地为文件的写操作申请物理块，实现文件缓冲区的管理。该层根据申请的物理块号生成 I/O 控制系统的地址格式。</li>\n<li>输入 / 输出接口层：执行 I/O 操作，为文件分配磁盘等物理介质空间，实现文件信息的存取，与设备管理功能相联系。</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"ComputerSystem/image-55.png\" alt=\"文件系统的层次\" /></p>\n<h4 id=\"文件操作的执行过程\"><a class=\"anchor\" href=\"#文件操作的执行过程\">#</a> 文件操作的执行过程</h4>\n<ul>\n<li>根据上面文件系统的层次结构，以<strong>写一个文件</strong>为例简要说明文件写操作发出时，各层是如何工作和相互衔接的。\n<ul>\n<li>当用户写一个文件时，应用程序首先调用文件系统提供的接口，将写文件的请求转换为统一格式的文件系统内部调用。</li>\n<li>文件系统管理根据写文件的文件名和文件路径读内存中相应的目录，修改并更新文件目录。</li>\n<li>基本文件系统根据文件内部标志将文件说明信息放入内存，写入内存中的打开文件表，打开文件，为访问文件做准备。</li>\n<li>物理文件系统根据写文件的结构和存取方法等逻辑结构信息，把指定的逻辑记录地址变换成相应的物理块地址。对于流式文件，只要把用户指定的逻辑地址按块长计算出相对块号；对记录式文件，先把记录号变换成逻辑地址，再把逻辑地址按块长计算出相对块号。</li>\n<li>物理文件系统将相对块号和块内地址变换为文件存储器的物理块号和块内地址。</li>\n<li>设备分配控制为文件的写操作申请物理块，实现文件缓冲区的管理。系统根据申请的物理块号生成 I/O 控制系统的地址格式。</li>\n<li>输入 / 输出接口执行 I/O 操作，为文件分配磁盘等物理介质空间，并将对磁盘的请求信息传递给磁盘管理。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"虚拟文件系统\"><a class=\"anchor\" href=\"#虚拟文件系统\">#</a> 虚拟文件系统</h4>\n<ul>\n<li>为了同时支持多种文件系统，不同的操作系统采用不同的技术方案提供了虚拟文件系统。</li>\n<li>目标：\n<ul>\n<li>把多种文件系统纳入统一框架，不同的磁盘分区可包含不同的文件系统，对它们的使用和传统的单一文件系统并无区别；</li>\n<li>用户可通过一组系统调用对不同的文件系统及文件进行操作，系统调用可以跨物理介质和跨文件系统执行，如从一个文件系统复制或移动数据到另一个文件系统中，即提供对不同文件系统透明的相互访问；</li>\n<li>对网络文件提供完全的支持，访问远程节点上的文件应与访问本地节点的文件一致；</li>\n<li>提供对特殊文件系统的支持</li>\n</ul>\n</li>\n<li>虚拟文件系统也称虚拟文件系统系统开关（Virtual File System，VFS），它是内核的一个子系统，提供一个通用文件系统模型，概括所能见到的文件系统的常用功能和行为，处理一切与底层设备管理相关的细节，为应用程序提供标准接口。具体设计时在原有的具体文件系统层次结构上增加应用层、虚拟层和实现层。各层的功能如下：\n<ul>\n<li>应用层：VFS 模型源于 UNIX 文件系统，使得用户可以直接使用标准 UNIX 文件系统调用来操作文件，无须考虑具体文件系统的特性和物理存储介质，通过 VFS 访问文件系统，才使得不同文件系统之间的协作性和通用性成为可能。</li>\n<li>虚拟层：在对具体文件系统的共同特性进行抽象的基础上，形成与具体文件系统的实现无关的虚拟层，并在其上定义与用户的一致性接口。</li>\n<li>实现层：使用类似于开关表的技术进行具体文件系统的转接，实现各种文件系统的细节。</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "computer science",
                "learning"
            ]
        },
        {
            "id": "https://blog.ivansnow02.xyz/computer-organization/",
            "url": "https://blog.ivansnow02.xyz/computer-organization/",
            "title": "计算机组成原理复习",
            "date_published": "2023-12-20T08:32:28.000Z",
            "content_html": "<hr />\n<div id=\"mm\"><iframe src=\"https://ivansnow02.github.io/assets/ComputerOrganization.html\" width=\"100%\" height=\"500\" name=\"topFrame\" scrolling=\"yes\"  noresize=\"noresize\" frameborder=\"0\" id=\"topFrame\"></iframe></div>\n<hr />\n<h2 id=\"计算机系统概论\"><a class=\"anchor\" href=\"#计算机系统概论\">#</a> 计算机系统概论</h2>\n<h3 id=\"计算机的性能指标\"><a class=\"anchor\" href=\"#计算机的性能指标\">#</a> 计算机的性能指标</h3>\n<ul>\n<li>吞吐量：表征一台计算机在某一时间间隔内能够处理的信息量。</li>\n<li>响应时间：表征从输入有效到系统产生响应之间的时间度量，例如微秒、纳秒。</li>\n<li>利用率：表示在给定的时间间隔内，系统被实际使用的时间所占的比率，一般用百分比表示。</li>\n<li>处理机字长：指处理机运算器中一次能够完成二进制数运算的位数。当前处理机的字长有 8 位、16 位、32 位、64 位。字长越长，表示计算的精度越高。</li>\n<li>总线宽度：一般指 CPU 中运算器与存储器之间进行互连的内部总线二进制位数。</li>\n<li>存储器容量：存储器中所有存储单元的总数目，通常用 KB、MB、GB、TB 来表示。</li>\n<li>存储器带宽：存储器的速度指标，单位时间内从存储器读出的二进制数信息量，一般用字节数 / 秒表示。</li>\n<li>主频 / 时钟周期：CPU 的工作节拍受主时钟控制，主时钟不断产生固定频率的时钟，主时钟的频率（f）叫 CPU 的主频，主频的倒数称为 CPU 时钟周期（T），即 T=1/f 。</li>\n<li>MIPS：平均每秒执行多少百万条定点指令数。</li>\n<li>FLOPS：每秒执行浮点操作的次数。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>P</mi><mi>U</mi><mtext>执行时间</mtext></mrow><annotation encoding=\"application/x-tex\">CPU执行时间</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord cjk_fallback\">执行时间</span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mrow><mi>C</mi><mi>P</mi><mi>U</mi></mrow></msub><mo>=</mo><msub><mi>I</mi><mi>N</mi></msub><mo>×</mo><mi>C</mi><mi>P</mi><mi>I</mi><mo>×</mo><msub><mi>T</mi><mi>C</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_{CPU} = I_N \\times CPI \\times T_{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>P</mi><mi>I</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mfrac><msub><mi>I</mi><mi>i</mi></msub><msub><mi>I</mi><mi>N</mi></msub></mfrac><mo>×</mo><mi>C</mi><mi>P</mi><msub><mi>I</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">CPI = \\sum_{i=1}^{n} \\frac{I_i}{I_N} \\times CPI_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3337em;vertical-align:-0.4453em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8884em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567em;margin-left:-0.0785em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1433em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4101em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.0785em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4453em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"计算机的硬件\"><a class=\"anchor\" href=\"#计算机的硬件\">#</a> 计算机的硬件</h3>\n<h4 id=\"运算器alu\"><a class=\"anchor\" href=\"#运算器alu\">#</a> 运算器（ALU）</h4>\n<ul>\n<li>功能：完成算术运算和逻辑运算。</li>\n<li>采用二进制的原因：\n<ol>\n<li>容易实现</li>\n<li>运算规律简单</li>\n<li>抗干扰能力强，可靠性高</li>\n<li>为实现逻辑运算和逻辑判断提供了便利</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"存储器memory\"><a class=\"anchor\" href=\"#存储器memory\">#</a> 存储器（Memory）</h4>\n<ul>\n<li>功能：存储程序和数据，是计算机的主要组成部分。</li>\n<li>分类：\n<ul>\n<li>按存储介质分类：半导体存储器、磁存储器、光存储器</li>\n<li>按存取方式分类：随机存储器（RAM）、只读存储器（ROM）、直接存储器（DMA）</li>\n<li>按存储容量分类：主存储器、辅助存储器</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"控制器control-unit\"><a class=\"anchor\" href=\"#控制器control-unit\">#</a> 控制器（Control Unit）</h4>\n<ul>\n<li>任务：从内存中取出解题步骤加以分析，然后执行某种操作。\n<ol>\n<li>计算程序：解决某一问题的一串指令序列称为该问题的计算程序。</li>\n<li>指令形式 ：一条指令必须明确指示出从哪个单元中取数，并进行何种性质的操作；即指令由操作码和地址码组成，分别指出操作的性质和操作数的地址。</li>\n<li>控制器的基本任务：按照程序所排的指令序列，先从<strong>存储器</strong>中取出一条指令放到控制器中，对该指令的<strong>操作码</strong>由<strong>译码器</strong>进行分析判别，然后根据指令的性质，执行该指令，进行相应的操作；接着取出第二条指令，再执行第二条指令，依此类推。</li>\n<li>指令流（Instruction Stream）和数据流（Data Stream）：</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"适配器adapter和输入输出设备io\"><a class=\"anchor\" href=\"#适配器adapter和输入输出设备io\">#</a> 适配器（adapter）和输入输出设备（I/O）</h4>\n<ul>\n<li>适配器：相当于一个转换器，保证外围设备用计算机系统特性所要求的形式收发信息。<br />\n常见有：网络适配器、显卡适配器等</li>\n</ul>\n<h4 id=\"总线bus\"><a class=\"anchor\" href=\"#总线bus\">#</a> 总线（Bus）</h4>\n<ul>\n<li>是构成计算机系统的骨架，是多个系统部件之间进行数据传送的公共通路</li>\n</ul>\n<h4 id=\"冯诺依曼结构计算机\"><a class=\"anchor\" href=\"#冯诺依曼结构计算机\">#</a> 冯。诺依曼结构计算机</h4>\n<ol>\n<li>存储程序控制：要求计算机完成的功能，需要事先编制成相应的程序，并输入到存储器中，在控制器的控制下，有条不紊地工作。</li>\n<li>程序和数据都用二进制表示。</li>\n<li>程序由指令序列构成，任何一条指令都包含操作码和地址码。</li>\n<li>全机以 CPU 为中心，输入的信息在 CPU 控制下才能写入主存储器，输出的信息也只有在 CPU 控制下才能从主存储器中取出送至相应的输出设备。</li>\n</ol>\n<h3 id=\"计算机软件\"><a class=\"anchor\" href=\"#计算机软件\">#</a> 计算机软件</h3>\n<ul>\n<li>机器语言：使用 1 和 0 编制。计算机直接可以识别和执行。缺点：要熟悉指令系统、繁杂、容易出错、不易调试、只有专家使用。</li>\n<li>汇编语言：对机器指令采用助记符表示，能够用符号语言编写。简单直观、便于记忆。不能为计算机识别，使用汇编程序，把符号语言编写的程序翻译为机器代码。</li>\n<li>高级语言：按照实际需求规定一套基本符号以及由基本符号构成程序的规则。更加接近自然语言，直观通用、与具体机器无关。</li>\n<li>编译程序：把整个源程序翻译为机器代码或汇编代码的程序，它和运行系统一起组成编译系统。</li>\n<li>解释程序：对源程序逐行解释并立即执行的程序。</li>\n<li>操作系统：管理整个系统的软硬件资源，提高资源使用率，方便用户对计算机的使用。</li>\n<li>数据库管理系统：数据存储、处理、传输、查询、共享的管理程序</li>\n</ul>\n<h3 id=\"计算机系统的层次结构\"><a class=\"anchor\" href=\"#计算机系统的层次结构\">#</a> 计算机系统的层次结构</h3>\n<ul>\n<li>微程序设计级 -&gt; 一般机器级 -&gt; 操作系统级 -&gt; 汇编语言级 -&gt; 高级语言级</li>\n</ul>\n<h2 id=\"运算方法和运算器\"><a class=\"anchor\" href=\"#运算方法和运算器\">#</a> 运算方法和运算器</h2>\n<h3 id=\"数据与文字的表示方法\"><a class=\"anchor\" href=\"#数据与文字的表示方法\">#</a> 数据与文字的表示方法</h3>\n<h4 id=\"数据格式\"><a class=\"anchor\" href=\"#数据格式\">#</a> 数据格式</h4>\n<h5 id=\"定点数的表示方法\"><a class=\"anchor\" href=\"#定点数的表示方法\">#</a> 定点数的表示方法</h5>\n<ul>\n<li>小数点的位置固定，通常有纯小数和纯整数两种。</li>\n</ul>\n<h5 id=\"浮点数的表示方法\"><a class=\"anchor\" href=\"#浮点数的表示方法\">#</a> 浮点数的表示方法</h5>\n<ul>\n<li>对于任意进制数 N 可表示：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>=</mo><msup><mi>R</mi><mi>e</mi></msup><mo>×</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">N=R^e \\times m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span>（科学计数法），其中 m 是浮点数的尾数 (纯小数、有效数字位数，精度)， e 称为指数，为阶码 (纯整数，小数点位置，范围) ，比例因子 R 为基数。在计算机中常为 2、8、16。</li>\n<li>浮点数规格化表示 (尾数): 绝对值为 &gt;=0.5 (0 除外)。形式为：0.1…，最高位 1 视为隐藏在小数点左侧，提高数据表示精度。</li>\n<li>指数表示：采用移码方式（加上一个固定的偏移值）。一个规格化的 32 位浮点数 x 的真值为：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>s</mi></msup><mo>×</mo><mn>1.</mn><mi>M</mi><mo>×</mo><msup><mn>2</mn><mrow><mi>E</mi><mo>−</mo><mn>127</mn></mrow></msup><mo separator=\"true\">,</mo><mi>e</mi><mo>=</mo><mi>E</mi><mo>−</mo><mn>127</mn></mrow><annotation encoding=\"application/x-tex\">x=(-1)^s \\times 1.M \\times 2^{E-127},e=E-127</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1.</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0358em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">127</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">127</span></span></span></span></li>\n<li>机器零：当一个浮点的尾数为 0，不论阶码为何值；或当阶码的值比阶码的最小值还小，不论尾数为何值，视为机器零</li>\n</ul>\n<h5 id=\"十进制数串的表示方法\"><a class=\"anchor\" href=\"#十进制数串的表示方法\">#</a> 十进制数串的表示方法</h5>\n<ul>\n<li>字符串的形式：一个字节存放一个十进制的数位或符号位。为了指明这样一个数，需要给出该数在主存中的起始地址和位数 (串的长度)。主要用于非数值计算。</li>\n<li>压缩的十进制数串形式：一个字节存放两个十进制的数位。既节省存储空间，又便于直接完成算术运算，是广泛采用的较为理想的方法。</li>\n</ul>\n<h4 id=\"数的机器码表示\"><a class=\"anchor\" href=\"#数的机器码表示\">#</a> 数的机器码表示</h4>\n<h5 id=\"原码表示法\"><a class=\"anchor\" href=\"#原码表示法\">#</a> 原码表示法</h5>\n<ul>\n<li>定点小数原码定义：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant=\"normal\">.</mi><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=x_0.x_1x_2…x_{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>原</mtext></msub><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>1</mn><mo>−</mo><mi>x</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">[x]_原=\\begin{cases} x &amp; 0\\leq x &lt;1 \\\\ 1-x=1+|x| &amp; -1&lt;x\\leq 0 \\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">原</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li>定点整数原码定义：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=x_0x_1x_2…x_{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>原</mtext></msub><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><msup><mn>2</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mi>x</mi><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup><mo>+</mo><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">[x]_原=\\begin{cases} x &amp; 0\\leq x &lt;2^{n} \\\\ 2^n-x=2^n+|x| &amp; -2^{n}&lt;x\\leq 0 \\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">原</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li>浮点数原码定义：阶码部分按照定点整数的方法进行编码，尾数部分按照定点小数的方法进行编码</li>\n</ul>\n<h5 id=\"补码表示法\"><a class=\"anchor\" href=\"#补码表示法\">#</a> 补码表示法</h5>\n<ul>\n<li>定点小数补码定义：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant=\"normal\">.</mi><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=x_0.x_1x_2…x_{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>2</mn><mo>+</mo><mi>x</mi><mo>=</mo><mn>2</mn><mo>−</mo><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[x]_补=\\begin{cases} x &amp; 0\\leq x &lt;1 \\\\ 2+x=2-|x| &amp; -1&lt;x\\leq 0 \\end{cases}(mod\\ 2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\"> </span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>定点整数补码定义：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=x_0x_1x_2…x_{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><msup><mn>2</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>x</mi><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>−</mo><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[x]_补=\\begin{cases} x &amp; 0\\leq x &lt;2^{n} \\\\ 2^{n+1}+x=2^{n+1}-|x| &amp; -2^{n}&lt;x\\leq 0 \\end{cases}(mod\\ 2^{n+1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>补码的表示范围\n<ul>\n<li>n+1 位补码小数的表示范围：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup><mo>≤</mo><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>&lt;</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1-2^{-n}\\leq [x]_补 &lt;-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9073em;vertical-align:-0.136em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span></li>\n<li>n+1 位补码整数的表示范围：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn><mo>≤</mo><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>&lt;</mo><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^n-1\\leq [x]_补 &lt;-2^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7477em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7477em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n</li>\n<li>浮点数补码定义：阶码部分按照定点整数的方法进行编码，尾数部分按照定点小数的方法进行编码</li>\n<li>已知<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[x]_补</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，求<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>原</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[x]_原</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">原</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的方法：\n<ul>\n<li>对于正数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>原</mtext></msub><mo>=</mo><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[x]_原=[x]_补</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">原</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>对于负数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>原</mtext></msub><mo>=</mo><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[x]_原=[[x]_补]_补</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">原</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n</li>\n<li>已知<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[x]_补</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，求<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[x/2]_补</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/2</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mi mathvariant=\"normal\">/</mi><mn>4</mn><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[x/4]_补</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/4</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的方法：对 [x] 补连同符号位一起右移一位或二位，左边补一位或二位与原符号位相同的位。</li>\n<li>已知<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[x]_{\\text{补}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，求<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>2</mn><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[2x]_{\\text{补}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>4</mn><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[4x]_{\\text{补}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">4</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的方法：对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub></mrow><annotation encoding=\"application/x-tex\">[x]_补</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>连同符号位一起左移一位或二位，右边补一位或二位 “0”</li>\n</ul>\n<h5 id=\"反码表示法\"><a class=\"anchor\" href=\"#反码表示法\">#</a> 反码表示法</h5>\n<ul>\n<li>定点小数反码定义：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant=\"normal\">.</mi><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=x_0.x_1x_2…x_{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>反</mtext></msub><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup><mo stretchy=\"false\">)</mo><mo>+</mo><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">[x]_反=\\begin{cases} x &amp; 0\\leq x &lt;1 \\\\ (2-2^{-n})+x &amp; -1&lt;x\\leq 0 \\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">反</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li>定点整数反码定义：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=x_0x_1x_2…x_{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>反</mtext></msub><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><msup><mn>2</mn><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">[x]_反=\\begin{cases} x &amp; 0\\leq x &lt;2^{n} \\\\ (2^{n+1}-1)+x &amp; -2^{n}&lt;x\\leq 0 \\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">反</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li>浮点数反码定义：阶码部分按照定点整数的方法进行编码，尾数部分按照定点小数的方法进行编码</li>\n</ul>\n<h5 id=\"移码表示法\"><a class=\"anchor\" href=\"#移码表示法\">#</a> 移码表示法</h5>\n<ul>\n<li>设<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=x_0x_1x_2…x_{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>移</mtext></msub><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup><mo>+</mo><mi>x</mi><mtext>    </mtext><msup><mn>2</mn><mi>n</mi></msup><mo>&gt;</mo><mi>x</mi><mo>≥</mo><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">[x]_移=2^{n}+x \\ \\ \\ \\  2^n&gt;x\\geq -2^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">移</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7477em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7035em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7477em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<h4 id=\"字符和字符串的编码\"><a class=\"anchor\" href=\"#字符和字符串的编码\">#</a> 字符和字符串的编码</h4>\n<h5 id=\"汉字的编码表示\"><a class=\"anchor\" href=\"#汉字的编码表示\">#</a> 汉字的编码表示</h5>\n<ul>\n<li>输入编码：数字编码、拼音码、字型编码等</li>\n<li>机内编码：一般用两个字节来实现</li>\n<li>输出编码：字模码</li>\n</ul>\n<h5 id=\"校验码\"><a class=\"anchor\" href=\"#校验码\">#</a> 校验码</h5>\n<ul>\n<li>奇偶校验码：在每个字符的最高位加一个奇偶校验位，使得每个字符的 1 的个数为奇数或偶数。</li>\n<li>循环冗余校验码：在每个字符的最高位加一个校验位，使得每个字符的 1 的个数为奇数或偶数。</li>\n<li>海明码：在每个字符的最高位加一个校验位，使得每个字符的 1 的个数为奇数或偶数。</li>\n</ul>\n<h3 id=\"定点加减法\"><a class=\"anchor\" href=\"#定点加减法\">#</a> 定点加减法</h3>\n<h4 id=\"定点补码加减法\"><a class=\"anchor\" href=\"#定点补码加减法\">#</a> 定点补码加减法</h4>\n<ul>\n<li>加法：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo>+</mo><mi>y</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>=</mo><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>+</mo><mo stretchy=\"false\">[</mo><mi>y</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[x+y]_补=[x]_补+[y]_补(mod\\ 2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\"> </span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>减法：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo>−</mo><mi>y</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>=</mo><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>−</mo><mo stretchy=\"false\">[</mo><mi>y</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>=</mo><mo stretchy=\"false\">[</mo><mi>x</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo>+</mo><mo stretchy=\"false\">[</mo><mo>−</mo><mi>y</mi><msub><mo stretchy=\"false\">]</mo><mtext>补</mtext></msub><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[x-y]_补=[x]_补-[y]_补=[x]_补+[-y]_补(mod\\ 2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">补</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\"> </span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h4 id=\"溢出概念与检测方法\"><a class=\"anchor\" href=\"#溢出概念与检测方法\">#</a> 溢出概念与检测方法</h4>\n<h5 id=\"溢出\"><a class=\"anchor\" href=\"#溢出\">#</a> 溢出</h5>\n<ul>\n<li>上溢：两个正数相加，结果大于机器所能表示的最大正数</li>\n<li>下溢：两个负数相加，结果小于机器所能表示的最小负数</li>\n</ul>\n<h5 id=\"检测方法\"><a class=\"anchor\" href=\"#检测方法\">#</a> 检测方法</h5>\n<ol>\n<li>双符号位检测法：溢出表达式<br />\n - 溢出表达式：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>=</mo><msub><mi>S</mi><mrow><mi>f</mi><mn>1</mn></mrow></msub><mo>⊕</mo><msub><mi>S</mi><mrow><mi>f</mi><mn>2</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">V=S_{f1}\\oplus S_{f2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><br />\n- 不论溢出与否，最高符号位始终指示正确的符号</li>\n<li>单符号位检测法：溢出表达式<br />\n - 溢出表达式：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>=</mo><msub><mi>C</mi><mi>f</mi></msub><mo>⊕</mo><msub><mi>C</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">V=C_f\\oplus C_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><br />\n- 当运算中，最高有效位有进位而符号位无进位，称为上溢；最高有效位无进位而符号位有进位，称为下溢</li>\n</ol>\n<h3 id=\"定点乘法\"><a class=\"anchor\" href=\"#定点乘法\">#</a> 定点乘法</h3>\n<h4 id=\"原码并行乘法\"><a class=\"anchor\" href=\"#原码并行乘法\">#</a> 原码并行乘法</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo>×</mo><mi>y</mi><msub><mo stretchy=\"false\">]</mo><mtext>原</mtext></msub><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>f</mi></msub><mo>⊕</mo><msub><mi>y</mi><mi>f</mi></msub><mo stretchy=\"false\">)</mo><mo>×</mo><mo stretchy=\"false\">(</mo><mn>0.</mn><msub><mi>y</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>…</mo><msub><mi>y</mi><mn>1</mn></msub><msub><mi>y</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo><mo>×</mo><mo stretchy=\"false\">(</mo><mn>0.</mn><msub><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>…</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[x\\times y]_原=(x_f\\oplus y_f)\\times (0.y_{n-1}\\dots y_1y_0)\\times (0.x_{n-1}\\dots x_1x_0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">原</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h4 id=\"不带符号的阵列乘法器\"><a class=\"anchor\" href=\"#不带符号的阵列乘法器\">#</a> 不带符号的阵列乘法器</h4>\n<ul>\n<li>首先用 “与” 门，产生<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">m \\times n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个被加数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><msub><mi>b</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_{i}b_{j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\leq i \\leq m-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7955em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\leq j \\leq n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>；再用阵列全加器，快速相加，实现乘法。</li>\n<li>实现 n 位乘 n 位时，需要<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">n(n-1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 个全加器（FA）和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n \\times n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个 “与” 门</li>\n</ul>\n<h4 id=\"带符号的阵列乘法器\"><a class=\"anchor\" href=\"#带符号的阵列乘法器\">#</a> 带符号的阵列乘法器</h4>\n<ul>\n<li>带符号的阵列乘法器仍然以不带符号的阵列乘法器为基础；使用<strong>两个算前求补器</strong>，运算前把操作数变为正整数，而算后求补器则是：当两个输入操作数的符号不一致时，把运算结果变换成带符号的数。</li>\n</ul>\n<h3 id=\"定点除法\"><a class=\"anchor\" href=\"#定点除法\">#</a> 定点除法</h3>\n<h4 id=\"原码除法\"><a class=\"anchor\" href=\"#原码除法\">#</a> 原码除法</h4>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo>÷</mo><mi>y</mi><msub><mo stretchy=\"false\">]</mo><mtext>原</mtext></msub><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>f</mi></msub><mo>⊕</mo><msub><mi>y</mi><mi>f</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mn>0.</mn><msub><mi>y</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>…</mo><msub><mi>y</mi><mn>1</mn></msub><msub><mi>y</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo><mo>÷</mo><mo stretchy=\"false\">(</mo><mn>0.</mn><msub><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>…</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[x\\div y]_原=(x_f\\oplus y_f)+ (0.y_{n-1}\\dots y_1y_0)\\div (0.x_{n-1}\\dots x_1x_0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">÷</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">原</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">÷</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>不恢复余数法（加减交替法）\n<ol>\n<li>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">R_{i+1}≥0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>，  则商 “1”，下次做<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><msub><mi>R</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mtext>－</mtext><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">2R_{i+1}－Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">－</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></li>\n<li>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">R_{i+1}&lt;0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>，则商为 “0”，下次做<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><msub><mi>R</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">2R_{i+1}+Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></li>\n</ol>\n</li>\n</ul>\n<h4 id=\"并行除法器\"><a class=\"anchor\" href=\"#并行除法器\">#</a> 并行除法器</h4>\n<ul>\n<li>可控加法 / 减法（CAS）单元</li>\n</ul>\n<h3 id=\"定点运算器的组成\"><a class=\"anchor\" href=\"#定点运算器的组成\">#</a> 定点运算器的组成</h3>\n<h4 id=\"逻辑运算\"><a class=\"anchor\" href=\"#逻辑运算\">#</a> 逻辑运算</h4>\n<h4 id=\"多功能算术逻辑运算单元\"><a class=\"anchor\" href=\"#多功能算术逻辑运算单元\">#</a> 多功能算术 / 逻辑运算单元</h4>\n<h5 id=\"先行进位发生器cla\"><a class=\"anchor\" href=\"#先行进位发生器cla\">#</a> 先行进位发生器（CLA）</h5>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi>n</mi><mo>+</mo><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>G</mi><mi>i</mi></msub><mo>+</mo><msub><mi>C</mi><mi>n</mi></msub><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_{n+i}=G_i+C_nP_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<h4 id=\"内部总线\"><a class=\"anchor\" href=\"#内部总线\">#</a> 内部总线</h4>\n<ul>\n<li>根据总线所处的位置，总线分为内部总线和外部总线</li>\n<li>按照总线的逻辑结构，总线分为单向、双向传输总线</li>\n</ul>\n<h4 id=\"定点运算器的基本结构\"><a class=\"anchor\" href=\"#定点运算器的基本结构\">#</a> 定点运算器的基本结构</h4>\n<ul>\n<li>运算器包括：ALU、阵列乘除器、寄存器、多路开关、三态缓冲器、数据总线等</li>\n<li>单总线结构的运算器：所有的部件都连接到同一总线上。所有的数据传输都是采用分时方式。</li>\n<li>双总线结构的运算器：两个操作数同时加到 ALU 进行运算，只需要一次操作控制，而且马上可以得到运算结果。</li>\n<li>三总线结构的运算器：ALU 的两个输入端分别由两条总线供给，而 ALU 的输出则与第三条总线相连，因此，算术逻辑操作可以在一步的控制之内完成。</li>\n</ul>\n<h3 id=\"浮点运算方法和浮点运算器\"><a class=\"anchor\" href=\"#浮点运算方法和浮点运算器\">#</a> 浮点运算方法和浮点运算器</h3>\n<h4 id=\"浮点数的加减法\"><a class=\"anchor\" href=\"#浮点数的加减法\">#</a> 浮点数的加减法</h4>\n<h5 id=\"对阶\"><a class=\"anchor\" href=\"#对阶\">#</a> 对阶</h5>\n<ol>\n<li>先求两数阶码 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">E_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mi>y</mi></msub></mrow><annotation encoding=\"application/x-tex\">E_y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 之差，即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>△</mtext><mi>E</mi><mo>=</mo><msub><mi>E</mi><mi>x</mi></msub><mtext>－</mtext><msub><mi>E</mi><mi>y</mi></msub></mrow><annotation encoding=\"application/x-tex\">△E = E_x－E_y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">△</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">－</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>对阶原则：阶码小的数向阶码大的数对齐；小阶的尾数右移<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>△</mtext><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">△E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">△</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> 位</li>\n</ol>\n<h5 id=\"尾数求和运算\"><a class=\"anchor\" href=\"#尾数求和运算\">#</a> 尾数求和运算</h5>\n<ul>\n<li>尾数求和方法与定点加减法运算完全一样</li>\n</ul>\n<h5 id=\"规格化\"><a class=\"anchor\" href=\"#规格化\">#</a> 规格化</h5>\n<ol>\n<li>定义：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>≤</mo><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi mathvariant=\"normal\">∣</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{2}\\leq |S|&lt;1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></li>\n</ol>\n<ul>\n<li>正数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><mn>0.1</mn><msub><mi>s</mi><mn>1</mn></msub><msub><mi>s</mi><mn>2</mn></msub><mo>…</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S=0.1s_1s_2…s_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\">0.1</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>负数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><mn>1.1</mn><msub><mi>s</mi><mn>1</mn></msub><msub><mi>s</mi><mn>2</mn></msub><mo>…</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">S=1.1s_1s_2…s_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\">1.1</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<ol start=\"2\">\n<li>向左规格化：左移一位，阶码减 1</li>\n<li>向右规格化：两符号位不等，即结果的绝对值大于 1。此时，将尾数运算的结果右移一位，阶码加 1</li>\n</ol>\n<h5 id=\"舍入\"><a class=\"anchor\" href=\"#舍入\">#</a> 舍入</h5>\n<ol>\n<li>“0 舍 1 入” 法：如果右移时被丢掉数位的最高位为 0 则舍去，反之则将尾数的末位加 “1”</li>\n<li>“恒置 1” 法：只要数位被移掉，就在尾数的末位恒置 “1”</li>\n</ol>\n<h5 id=\"溢出处理\"><a class=\"anchor\" href=\"#溢出处理\">#</a> 溢出处理</h5>\n<ul>\n<li>浮点数的溢出是以其阶码溢出表现出来的\n<ul>\n<li>阶码上溢 —— 超过了阶码可能表示的最大值的正指数值，一般将其认为是＋∞和－∞。</li>\n<li>阶码下溢 —— 超过了阶码可能表示的最小值的负指数值，一般将其认为是 0。</li>\n<li>尾数上溢：两个同符号尾数相加产生了最高位向上的进位，进行 “右规”</li>\n<li>尾数下溢：在尾数右移时，最低有效位从右端流出，要进行舍入处理</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"浮点乘-除法运算\"><a class=\"anchor\" href=\"#浮点乘-除法运算\">#</a> 浮点乘、除法运算</h4>\n<h5 id=\"浮点乘法\"><a class=\"anchor\" href=\"#浮点乘法\">#</a> 浮点乘法</h5>\n<ol>\n<li>阶码相加</li>\n<li>尾数相乘</li>\n<li>规格化：当 Mx 和 My 都不为 0 时，相乘后结果一定在下列范围内：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo>≤</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>M</mi><mi>x</mi></msub><mo>×</mo><msub><mi>M</mi><mi>y</mi></msub><mi mathvariant=\"normal\">∣</mi><mtext>＜</mtext><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1/4≤| M_x×M_y |＜1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">＜</span><span class=\"mord\">1</span></span></span></span></li>\n</ol>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>≤</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>M</mi><mi>x</mi></msub><mo>×</mo><msub><mi>M</mi><mi>y</mi></msub><mi mathvariant=\"normal\">∣</mi><mtext>＜</mtext><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1/2 ≤| M_x×M_y |＜1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">＜</span><span class=\"mord\">1</span></span></span></span> 时，尾数已经是规格化数。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo>≤</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>M</mi><mi>x</mi></msub><mo>×</mo><msub><mi>M</mi><mi>y</mi></msub><mi mathvariant=\"normal\">∣</mi><mtext>＜</mtext><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">1/4≤| M_x×M_y |＜1/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">＜</span><span class=\"mord\">1/2</span></span></span></span> 时，需要左规一次</li>\n</ul>\n<h5 id=\"浮点除法\"><a class=\"anchor\" href=\"#浮点除法\">#</a> 浮点除法</h5>\n<ol>\n<li>尾数调整：为保证商的尾数是一个定点小数，首先需要检测<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><msub><mi>M</mi><mi>x</mi></msub><mi mathvariant=\"normal\">∣</mi><mtext>＜</mtext><mi mathvariant=\"normal\">∣</mi><msub><mi>M</mi><mi>y</mi></msub><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|M_x | ＜|M_y |</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">＜</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span></span>，如果不小于，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">M_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 需要右移一位，由于 x 和 y 都是规格化的数，最多调整一次。</li>\n<li>阶码相减</li>\n<li>尾数相除</li>\n</ol>\n<h4 id=\"浮点运算流水线\"><a class=\"anchor\" href=\"#浮点运算流水线\">#</a> 浮点运算流水线</h4>\n<ul>\n<li>K 级线性流水线的加速比：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub><mo>=</mo><mfrac><msub><mi>T</mi><mi>L</mi></msub><msub><mi>T</mi><mi>k</mi></msub></mfrac><mo>=</mo><mfrac><mrow><mi>n</mi><mo>⋅</mo><mi>k</mi></mrow><mrow><mi>k</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">C_k = \\frac{T_L}{T_k} = \\frac{n \\cdot k}{k + (n-1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3395em;vertical-align:-0.4509em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8886em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4103em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1433em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4509em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4001em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li>建立时间：在流水线开始时有一段流水线填入时间，使得流水线填满。</li>\n<li>正常流动时间：流水线正常工作，各功能段源源不断满载工作。</li>\n<li>排空时间：在流水线第一条指令结束时，其他指令还需要一段释放时间。</li>\n</ul>\n<h2 id=\"多层次的存储器\"><a class=\"anchor\" href=\"#多层次的存储器\">#</a> 多层次的存储器</h2>\n<h3 id=\"存储器概述\"><a class=\"anchor\" href=\"#存储器概述\">#</a> 存储器概述</h3>\n<h4 id=\"存储器的分类\"><a class=\"anchor\" href=\"#存储器的分类\">#</a> 存储器的分类</h4>\n<ul>\n<li>按存储介质分类：半导体存储器、磁存储器、光存储器</li>\n<li>按存取方式分类：随机存储器、顺序 / 半顺序存储器</li>\n<li>按读写功能分类：只读存储器、读写存储器</li>\n<li>按信息可保存性分类：非永久性存储器、永久性存储器</li>\n<li>按系统作用分类：主 / 辅助存储器、高速缓冲 / 控制存储器</li>\n</ul>\n<h4 id=\"存储器的分级结构\"><a class=\"anchor\" href=\"#存储器的分级结构\">#</a> 存储器的分级结构</h4>\n<ul>\n<li>存储器的分级结构：高速缓冲存储器、主存储器、外存储器</li>\n<li>TTL 存取速度快，集成度较低，功耗较大，成本较高，适于 cache。</li>\n<li>MOS 集成度高，功耗较低，价格便宜，适于主存。</li>\n<li>主存储器：简称 “主存”，由 MOS 半导体存储器组成，存放处于活动状态的程序和有关数据。包括 OS 的常驻部分和当前在运行的程序和要处理的数据。容量在几百 KB 到几百 MB，存取时间为几十到几百 ns。</li>\n<li>外存储器：简称 “外存”，大容量辅助存储器；磁表面存储器或光盘存储器；存放需联机保存但暂时不需要的程序和数据。容量从几十 MB 到几百 GB，甚至更大。存取速度为若干 ms。</li>\n<li>其他功能的存储器：如微程序控制器的控存、在显示和印刷输出设备中的字库和数据缓冲存储器。</li>\n</ul>\n<h4 id=\"主存储器的技术指标\"><a class=\"anchor\" href=\"#主存储器的技术指标\">#</a> 主存储器的技术指标</h4>\n<ul>\n<li>存储容量：存储器中可容纳的存储单元总数；单位：B (Byte), KB, MB, GB, TB, PB</li>\n<li>存取时间：又称访问时间，从启动一次存储器操作到完成该操作所经历的时间。</li>\n<li>存储周期：连续两次启动同一存储器操作需要的最小时间间隔。</li>\n<li>存储器带宽：单位时间存储器所存取的信息量；度量单位：位 / 秒、字节 / 秒；</li>\n<li>可靠性：在规定的时间内，存储器无故障的概率。用平均无故障时间 MTBF</li>\n<li>功耗与集成度：耗电的多少；单个芯片存储容量；</li>\n<li>性能 / 价格比：衡量存储器经济性能好坏的综合性指标。性能包括前述的各项指标。</li>\n</ul>\n<h3 id=\"sram存储器\"><a class=\"anchor\" href=\"#sram存储器\">#</a> SRAM 存储器</h3>\n<h4 id=\"sram存储器的组成\"><a class=\"anchor\" href=\"#sram存储器的组成\">#</a> SRAM 存储器的组成</h4>\n<ul>\n<li>存储体</li>\n<li>地址译码器：把用二进制代码表示的地址转换成输出端的高电位，用来驱动相应的读写电路，以便选择所要访问的存储单元。地址译码器的输入信息来自 CPU 的地址寄存器（AR）\n<ul>\n<li>单译码结构：地址译码器只有一个，译码器输出为字选线</li>\n<li><strong>双译码结构</strong>：两个地址译码器，可减少选择线条数</li>\n</ul>\n</li>\n<li>驱动器：一条 X 选择线要控制挂其上所有存储元电路，其所带的电容负载很大，为此需加驱动器。</li>\n<li>I/O 电路：处于数据总线和被选用的单元之间，用于控制被选中的单元读出或写入，并具有放大信息作用。</li>\n<li>片选与读 / 写控制电路：当需要大容量的存储器时，需把存储器芯片按照一定方式连接而成。在地址选择时，首先要选片，此片所连接的地址线才有效。通常用地址译码器的输出和一些控制信号来形成片选信息。</li>\n</ul>\n<h4 id=\"存储器的读写周期\"><a class=\"anchor\" href=\"#存储器的读写周期\">#</a> 存储器的读写周期</h4>\n<ul>\n<li>读周期：读周期与读出时间是两个不同的概念。读出时间是从给出有效地址到外部数据总线上稳定地出现所读出的数据信息所经历的时间。读周期时间则是存储片进行两次连续读操作时所必须间隔的时间，它总是大于或等于读出时间。</li>\n<li>写周期：实现写操作，要求<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>C</mi><mi>S</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{CS}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">CS</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>W</mi><mi>E</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{WE}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 同时有效，有效期间地址和数据信号不能变化；为了保证<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>C</mi><mi>S</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{CS}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">CS</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>W</mi><mi>E</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{WE}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 变为无效前能把数据可靠的写入，数据必须提前一段时间在数据总线上稳定存在；而在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>W</mi><mi>E</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{WE}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 变为高电平后再经过一段时间地址信号才允许改变。</li>\n</ul>\n<h4 id=\"存储器与cpu连接\"><a class=\"anchor\" href=\"#存储器与cpu连接\">#</a> 存储器与 CPU 连接</h4>\n<h5 id=\"存储容量扩充的方法\"><a class=\"anchor\" href=\"#存储容量扩充的方法\">#</a> 存储容量扩充的方法</h5>\n<ul>\n<li>位扩展法：只加大字长，而存储器的字数与存储器芯片字数一致，即字变长，字数不变。数据线条数增加，地址线条数不变。</li>\n<li>字扩展法：字数变多，字长不变，地址线增加，数据线不变； 芯片的地址线、数据线、读写控制线并联，由片选信号区分各片地址。</li>\n<li>字位同时扩展法：需要容量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">M \\times N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 存储器，使用的芯片为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mo>×</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">l \\times k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>，则需要芯片个数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>M</mi><mi>l</mi></mfrac><mo>×</mo><mfrac><mi>N</mi><mi>k</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{M}{l} \\times \\frac{N}{k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2173em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2173em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8723em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n<h5 id=\"地址分配与片选逻辑\"><a class=\"anchor\" href=\"#地址分配与片选逻辑\">#</a> 地址分配与片选逻辑</h5>\n<ul>\n<li>存储器寻址逻辑\n<ul>\n<li>芯片内的寻址系统 (二级译码)</li>\n<li>芯片外的地址分配与片选逻辑</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"连接方式\"><a class=\"anchor\" href=\"#连接方式\">#</a> 连接方式</h5>\n<ol>\n<li>扩展位数</li>\n<li>扩展单元数</li>\n<li>连接控制线</li>\n</ol>\n<h3 id=\"dram存储器\"><a class=\"anchor\" href=\"#dram存储器\">#</a> DRAM 存储器</h3>\n<h4 id=\"dram芯片的逻辑结构\"><a class=\"anchor\" href=\"#dram芯片的逻辑结构\">#</a> DRAM 芯片的逻辑结构</h4>\n<ul>\n<li>增加了行地址锁存器和列地址锁存器。由于 DRAM 存储器容量很大，地址线宽度相应要增加，这势必增加芯片地址线的管脚数目。为避免这种情况，采取的办法是分时传送地址码。若地址总线宽度为 10 位，先传送地址码 A0～A9，由行选通信号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>R</mi><mi>A</mi><mi>S</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{RAS}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 打入到行地址锁存器；然后传送地址码 A10～A19，由列选通信号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>C</mi><mi>A</mi><mi>S</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{CAS}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 打入到列地址锁存器。芯片内部两部分合起来，地址线宽度达 20 位，存储容量为 1M×4 位。</li>\n<li>增加了刷新计数器和相应的控制电路。DRAM 读出后必须刷新，而未读写的存储元也要定期刷新，而且要按行刷新，所以刷新计数器的长度等于行地址锁存器。刷新操作与读 / 写操作是交替进行的，所以通过 2 选 1 多路开关来提供刷新行地址或正常读 / 写的行地址。</li>\n</ul>\n<h4 id=\"dram-的读写周期\"><a class=\"anchor\" href=\"#dram-的读写周期\">#</a> DRAM 的读 / 写周期</h4>\n<h4 id=\"dram的刷新\"><a class=\"anchor\" href=\"#dram的刷新\">#</a> DRAM 的刷新</h4>\n<ul>\n<li>刷新周期：从上一次对整个存储器刷新结束到下一次对整个存储器全部刷新一遍为止，这一段时间间隔称为～。</li>\n<li>集中刷新方式：把刷新间隔分为两部分，前一部分进行读 / 写周期或维持周期，后一部分只进行刷新操作。因为刷新时期不能进行读写操作，称为<strong>死时间</strong>。本方式适用于高速存储器。</li>\n<li>分散刷新方式：\n<ol>\n<li>各刷新周期分散安排在 2ms 内</li>\n<li>每隔一段时间刷新一行</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"高级的dram结构\"><a class=\"anchor\" href=\"#高级的dram结构\">#</a> 高级的 DRAM 结构</h4>\n<ul>\n<li>FPM-DRAM：快速页模式动态存储器，它是根据程序的局部性原理来实现的。读周期和写周期中，为了寻找一个确定的存储单元地址，首先由低电平的行选通信号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>R</mi><mi>A</mi><mi>S</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{RAS}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 确定行地址，然后由低电平的列选信号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>C</mi><mi>A</mi><mi>S</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{CAS}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 确定列地址。下一次寻找操作，也是由<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>R</mi><mi>A</mi><mi>S</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{RAS}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 选定行地址，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>C</mi><mi>A</mi><mi>S</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{CAS}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 选定列地址，依此类推。快速页模式允许在选定的行中对每一个列地址进行连续快速的读操作或写操作。</li>\n<li>CDRAM（Enhanced DRAM）芯片：在 DRAM 芯片上集成一个 SRAM 实现的小容量高速缓冲器，以改善芯片性能</li>\n</ul>\n<h4 id=\"dram主存读写的正确性校验\"><a class=\"anchor\" href=\"#dram主存读写的正确性校验\">#</a> DRAM 主存读 / 写的正确性校验</h4>\n<ul>\n<li>DRAM 通常用做主存储器，其读写操作的正确性与可靠性至关重要。为此除了正常的数据位宽度，还增加了附加位，用于读 / 写操作正确性校验。增加的附加位也要同数据位一起写入 DRAM 中保存。</li>\n</ul>\n<h3 id=\"只读存储器和闪速存储器\"><a class=\"anchor\" href=\"#只读存储器和闪速存储器\">#</a> 只读存储器和闪速存储器</h3>\n<h4 id=\"只读存储器read-only-memory\"><a class=\"anchor\" href=\"#只读存储器read-only-memory\">#</a> 只读存储器（Read Only Memory）</h4>\n<h5 id=\"掩模rom\"><a class=\"anchor\" href=\"#掩模rom\">#</a> 掩模 ROM</h5>\n<h5 id=\"可编程rom\"><a class=\"anchor\" href=\"#可编程rom\">#</a> 可编程 ROM</h5>\n<ol>\n<li>EPROM</li>\n<li>E<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow></mrow><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>PROM</li>\n</ol>\n<h4 id=\"flash存储器flash-memory\"><a class=\"anchor\" href=\"#flash存储器flash-memory\">#</a> FLASH 存储器（Flash Memory）</h4>\n<h5 id=\"flash存储器的基本操作\"><a class=\"anchor\" href=\"#flash存储器的基本操作\">#</a> FLASH 存储器的基本操作</h5>\n<ul>\n<li>编程操作：所有存储元的原始状态均为 “1”，要写 0，就在控制栅上加正电压，为浮空栅补充电子；</li>\n<li>读取操作：当 MOS 晶体管导通时，电源 VD 提供从漏极 D 到源极 S 的电流，读出电路检测到电流则表示 “1”，无电流，表示 “0”；</li>\n<li>擦除操作：采用电擦除，在源极加上正电压。</li>\n</ul>\n<h4 id=\"并行存储器\"><a class=\"anchor\" href=\"#并行存储器\">#</a> 并行存储器</h4>\n<h5 id=\"双端口存储器dpramdual-port-ram\"><a class=\"anchor\" href=\"#双端口存储器dpramdual-port-ram\">#</a> 双端口存储器 DPRAM (Dual-Port RAM)</h5>\n<ul>\n<li>同一个存储器具有两组相互独立的读写控制线路。</li>\n<li>当两个端口的地址不同时，在两个端口上进行读写操作，一定不会发生冲突。</li>\n<li>当两个端口同时存取同一存储单元时，便发生读写冲突，为此设置<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>B</mi><mi>U</mi><mi>S</mi><mi>Y</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{BUSY}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 标志。由存储器的仲裁逻辑决定对哪个端口优先进行读写操作，而对另一个被延迟的端口置<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>B</mi><mi>U</mi><mi>S</mi><mi>Y</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{BUSY}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 标志，即暂时关闭此端口。</li>\n</ul>\n<h4 id=\"多模块交叉存储器\"><a class=\"anchor\" href=\"#多模块交叉存储器\">#</a> 多模块交叉存储器</h4>\n<h5 id=\"存储器的模块化组织\"><a class=\"anchor\" href=\"#存储器的模块化组织\">#</a> 存储器的模块化组织</h5>\n<ul>\n<li>顺序方式：\n<ul>\n<li>优点：某个模块出现故障时，不影响其他模块工作；存储器的容量扩充比较方便</li>\n<li>缺点：各个模块串行工作，存储器的带宽受到限制</li>\n</ul>\n</li>\n<li>交叉方式：连续地址分布在相邻不同模块内，而同一个模块内的地址不连续\n<ul>\n<li>优点：对连续字的成块传送，容易实现多模块流水式的并行存取，能大大提高存储器带宽</li>\n<li>缺点：某个模块出现故障时，会影响其他模块工作；存储器的容量扩充比较困难</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"多模块交叉存储器的基本结构\"><a class=\"anchor\" href=\"#多模块交叉存储器的基本结构\">#</a> 多模块交叉存储器的基本结构</h5>\n<ul>\n<li>四个模块都有自己的读写控制电路、地址寄存器和数据寄存器，各自以等同的方式与 CPU 传送信息</li>\n<li>CPU 同时访问四个模块，由存储器控制部件控制它们分时使用数据总线。对于一个存储模块，从 CPU 给出访存命令直到读出信息仍然使用一个存储周期，而对于 CPU 来说，可以在一个存取周期内连续访问四个模块，各个模块的读写过程将重叠进行，使存储器成为并行存储器结构。</li>\n</ul>\n<h5 id=\"定量分析\"><a class=\"anchor\" href=\"#定量分析\">#</a> 定量分析</h5>\n<ul>\n<li>设模块字长等于数据总线宽度，模块存取一个字的存储周期为 T，总线传送周期为 τ，存储器的交叉模块数为 m，为了实现流水线方式存取，应满足：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>=</mo><mi>m</mi><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">T=mτ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>=</mo><mi>T</mi><mi mathvariant=\"normal\">/</mi><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">m=T/τ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span></span></span></span> 为交叉存取度），交叉存储器要求其模块数必须大于或等于 m，以保证启动某模块后经 mτ 时间再次启动该模块时，它的上次存取操作已经完成。</li>\n<li>以交叉方式连续读取 n 个字所需的时间为： <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><mo>=</mo><mi>T</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>τ</mi></mrow><annotation encoding=\"application/x-tex\">t_1=T+(n-1)τ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span></span></span></span></li>\n<li>而顺序方式存储器连续读取 n 个字所需时间为:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mn>2</mn></msub><mo>=</mo><mi>n</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">t_2=nT</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></li>\n</ul>\n<h3 id=\"cache-存储器\"><a class=\"anchor\" href=\"#cache-存储器\">#</a> cache 存储器</h3>\n<h4 id=\"cache的基本原理\"><a class=\"anchor\" href=\"#cache的基本原理\">#</a> cache 的基本原理</h4>\n<ul>\n<li>CPU 与 cache 间的数据交换是以<strong>字</strong>为单位</li>\n<li>cache 与主存间的数据交换是以<strong>块</strong>为单位</li>\n<li>当 CPU 读取主存的一个字时，便发送字的内存地址给 cache 和主存，此时 cache 的控制逻辑依据地址判断此字当前是否在 cache 中：若是，则此字立即传送给 CPU，若非，则用主存读周期把此字从主存中读出送到 CPU，同时将含有这个字的整个数据块从主存读出送到 cache 中</li>\n</ul>\n<h4 id=\"相联存储器cam\"><a class=\"anchor\" href=\"#相联存储器cam\">#</a> 相联存储器（CAM）</h4>\n<ul>\n<li>定义：按内容寻址的存储器 CAM（Content Addressed Memory）亦称相联存储器，除按地址随机读写外，还有比较功能，可按信息内容寻址，存储器查询速度快。</li>\n<li>特点：根据任一存储项内容作为地址来进行存取。用来寻址存储器的字段叫做关键字（键）。</li>\n</ul>\n<h4 id=\"cache的命中率\"><a class=\"anchor\" href=\"#cache的命中率\">#</a> cache 的命中率</h4>\n<ul>\n<li>设在一段程序执行期间，cache 完成存取次数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mi>c</mi></msub></mrow><annotation encoding=\"application/x-tex\">N_c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，主存完成存取次数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>N</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">N_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，h 定义为命中率，则有：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>=</mo><msub><mi>N</mi><mi>c</mi></msub><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><msub><mi>N</mi><mi>c</mi></msub><mo>+</mo><msub><mi>N</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h= N_c/(N_c+N_m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>平均访问时间：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>a</mi></msub><mo>=</mo><mi>h</mi><msub><mi>t</mi><mi>c</mi></msub><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>h</mi><mo stretchy=\"false\">)</mo><msub><mi>t</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_a=ht_c+(1-h)t_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>访问效率：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mo>=</mo><msub><mi>t</mi><mi>c</mi></msub><mi mathvariant=\"normal\">/</mi><msub><mi>t</mi><mi>a</mi></msub><mo>=</mo><msub><mi>t</mi><mi>c</mi></msub><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>h</mi><msub><mi>t</mi><mi>c</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>h</mi><mo stretchy=\"false\">)</mo><msub><mi>t</mi><mi>m</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mi>h</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>h</mi><mo stretchy=\"false\">)</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">e=t_c/t_a =t_c/(ht_c)+(1-h)t_m=1/h+(1-h)r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">h</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>c</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>：命中时 cache 的访问时间</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>：未命中时主存的访问时间</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>=</mo><msub><mi>t</mi><mi>m</mi></msub><mi mathvariant=\"normal\">/</mi><msub><mi>t</mi><mi>c</mi></msub></mrow><annotation encoding=\"application/x-tex\">r=t_m/t_c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>：主存慢于 cache 的倍率</li>\n</ul>\n<h4 id=\"主存与cache的地址映射\"><a class=\"anchor\" href=\"#主存与cache的地址映射\">#</a> 主存与 cache 的地址映射</h4>\n<h5 id=\"全相联方式\"><a class=\"anchor\" href=\"#全相联方式\">#</a> 全相联方式</h5>\n<ul>\n<li>全相联的地址映射规则：\n<ol>\n<li>主存与缓存分成相同大小的数据块。</li>\n<li>主存的某一数据块可以装入缓存的任意一块的空间中。</li>\n</ol>\n</li>\n<li>转换公式\n<ul>\n<li>主存地址长度＝(s+w) 位</li>\n<li>寻址单元数＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mrow><mi>s</mi><mo>+</mo><mi>w</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">2^{s+w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span></span></span></span></span></span></span></span> 个字或字节</li>\n<li>块大小＝行大小＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span></span></span></span></span></span></span> 个字或字节</li>\n<li>主存的块数＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>s</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span></span></span></span></li>\n<li>标记大小＝s 位</li>\n<li>cache 的行数＝不由地址格式确定</li>\n</ul>\n</li>\n<li>特点：\n<ul>\n<li>优点：冲突概率小，Cache 的利用高。</li>\n<li>缺点：比较器难实现，需要一个访问速度很快代价高的相联存储器</li>\n</ul>\n</li>\n<li>适用于小容量的 Cache</li>\n</ul>\n<h5 id=\"直接相联方式\"><a class=\"anchor\" href=\"#直接相联方式\">#</a> 直接相联方式</h5>\n<ul>\n<li>\n<p>直接相联的地址映射规则</p>\n<ol>\n<li>主存第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">B_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 块内容拷贝到 Cache 的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">L_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 行</li>\n<li>i = j mod m</li>\n<li>m = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>r</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span> n = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>s</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span></span></span></span></li>\n</ol>\n</li>\n<li>\n<p>转换公式</p>\n<ul>\n<li>主存地址长度＝(s+w) 位</li>\n<li>寻址单元数＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mrow><mi>s</mi><mo>+</mo><mi>w</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">2^{s+w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span></span></span></span></span></span></span></span> 个字或字节</li>\n<li>块大小＝行大小＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span></span></span></span></span></span></span> 个字或字节</li>\n<li>主存的块数＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>s</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span></span></span></span></li>\n<li>cache 的行数＝m＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>r</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span></li>\n<li>标记大小＝(s-r) 位</li>\n</ul>\n</li>\n<li>\n<p>特点：</p>\n<ul>\n<li>优点：硬件实现很简单，不需要相联访问存储器；访问速度也比较快，实际上不进行地址变换</li>\n<li>缺点：块的冲突率比较高</li>\n</ul>\n</li>\n<li>\n<p>适用于大容量的 Cache</p>\n</li>\n</ul>\n<h5 id=\"组相联映射方式\"><a class=\"anchor\" href=\"#组相联映射方式\">#</a> 组相联映射方式</h5>\n<ul>\n<li>组相联的映象规则\n<ol>\n<li>将 cache 分成 u 组，每组 v 行，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>=</mo><mi>u</mi><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">m=uv</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">uv</span></span></span></span></li>\n<li>主存块存放在哪个组是固定的，存到该组哪一行是灵活的，组号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><mo>=</mo><mi>j</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">q=j mod u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">jm</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">u</span></span></span></span></li>\n<li>组间采用直接相联方式，组内采用全相联方式</li>\n</ol>\n</li>\n<li>转换公式\n<ul>\n<li>主存地址长度＝(s+w) 位</li>\n<li>寻址单元数＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mrow><mi>s</mi><mo>+</mo><mi>w</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">2^{s+w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span></span></span></span></span></span></span></span> 个字或字节</li>\n<li>块大小＝行大小＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span></span></span></span></span></span></span> 个字或字节</li>\n<li>cache 的组数＝u＝<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>d</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span></span></span></li>\n<li>标记大小＝(s-d) 位</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"cache的替换算法\"><a class=\"anchor\" href=\"#cache的替换算法\">#</a> cache 的替换算法</h4>\n<h5 id=\"最不经常使用算法lfuleast-frequently-used\"><a class=\"anchor\" href=\"#最不经常使用算法lfuleast-frequently-used\">#</a> 最不经常使用算法 LFU（Least Frequently Used）</h5>\n<ul>\n<li>将一段时间内被访问次数最少的那行数据换出。</li>\n<li>每行设置一个计数器，新行从 0 开始计数，每访问一次，计数器增 1；替换时，把计数值最小的行换出，同时将这些特定行的计数器清零。</li>\n<li>缺点：计数周期是特定行两次替换之间的间隔，不能严格反映近期访问的情况。</li>\n</ul>\n<h5 id=\"近期最少使用算法lruleast-recently-used\"><a class=\"anchor\" href=\"#近期最少使用算法lruleast-recently-used\">#</a> 近期最少使用算法 LRU（Least Recently Used）</h5>\n<ul>\n<li>将近期内长久未被访问过的行换出。</li>\n<li>每行设置一个计数器，每命中一次，命中行计数器清零，其它各行计数器增 1；替换时，将计数值最大的行换出。保护了刚拷贝到 cache 的新数据行。</li>\n</ul>\n<h5 id=\"随机替换\"><a class=\"anchor\" href=\"#随机替换\">#</a> 随机替换</h5>\n<ul>\n<li>从特定的行位置中随机（Random）地选出一行换出即可。</li>\n<li>优点：硬件上容易实现，速度快。</li>\n<li>缺点：可能刚替换出的行马上又要使用，命中率低。</li>\n</ul>\n<h4 id=\"cache的写操作策略\"><a class=\"anchor\" href=\"#cache的写操作策略\">#</a> cache 的写操作策略</h4>\n<h5 id=\"写回法\"><a class=\"anchor\" href=\"#写回法\">#</a> 写回法</h5>\n<ul>\n<li>当写 cache 命中时，只修改 cache 的内容，而不立即写入主存；当写 cache 未命中时，把此块替换到 cache 中修改；写主存统一留到此行被换出时进行。</li>\n<li>实现：每行设置一个修改位，标示是否被修改过。</li>\n<li>本方式可明显减少写主存次数，提高存取速度，但存在不一致性的隐患。</li>\n</ul>\n<h5 id=\"全写法\"><a class=\"anchor\" href=\"#全写法\">#</a> 全写法</h5>\n<ul>\n<li>当写 cache 命中时，cache 和主存同时写修改；当写 cache 未命中时，直接写入主存。但是否把修改过的主存块取到 cache 中，有两种选择：一是取主存块到 cache 并为它分配一行位置；另一是不取主存块到 cache。</li>\n<li>特点：cache 和主存的内容一致，且不需设置修改位和判断逻辑，但写操作没有高速缓冲功能，效率低。</li>\n</ul>\n<h5 id=\"写一次法\"><a class=\"anchor\" href=\"#写一次法\">#</a> 写一次法</h5>\n<ul>\n<li>写 cache 命中与未命中时和写回法基本相同，只是在第一次写命中时要同时写入主存。因第一次写 cache 命中时要启动一个存储写周期。</li>\n</ul>\n<h2 id=\"指令系统\"><a class=\"anchor\" href=\"#指令系统\">#</a> 指令系统</h2>\n<h3 id=\"指令系统的发展与性能要求\"><a class=\"anchor\" href=\"#指令系统的发展与性能要求\">#</a> 指令系统的发展与性能要求</h3>\n<h4 id=\"复杂指令集计算机cisc\"><a class=\"anchor\" href=\"#复杂指令集计算机cisc\">#</a> 复杂指令集计算机（CISC）</h4>\n<ul>\n<li>CISC 是通过减少<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>I</mi><mi>N</mi></msub></mrow><annotation encoding=\"application/x-tex\">I_N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 值来减少<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mrow><mi>c</mi><mi>p</mi><mi>u</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">T_{cpu}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 的</li>\n<li>CISC 的主要特点：\n<ol>\n<li>指令系统复杂，表现在：指令数多，一般大于 100 条；寻址方式多，一般大于 4 种；指令格式多，一般大于 4 种</li>\n<li>绝大多数指令需要多个机器时钟周期方可完成</li>\n<li>各种指令都可访问存储器</li>\n<li>采用微程序控制</li>\n<li>有专用寄存器</li>\n<li>难以用优化编译生成高效的目标代码程序</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"精简指令集计算机risc\"><a class=\"anchor\" href=\"#精简指令集计算机risc\">#</a> 精简指令集计算机（RISC）</h4>\n<ul>\n<li>RISC 是通过减少<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>P</mi><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">CPI</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> 值，简化结构来减少<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mrow><mi>c</mi><mi>p</mi><mi>u</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">T_{cpu}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 的</li>\n<li>RISC 的主要特点：\n<ol>\n<li>精简指令系统：指令条数少，一般小于 100 条，基本寻址方式少，一般 2<sub>3 种，指令格式少，一般 2</sub>3 种，指令长度一致 (32 位)</li>\n<li>以寄存器 - 寄存器方式工作，除了 Load/Store 指令访问存储器外，其余指令只访问寄存器</li>\n<li>除了 Load/Store 指令访问存储器外，所有指令在一个机器时钟周期完成，并采用流水线技术</li>\n<li>使用较多的通用寄存器，一般至少 32 个，不允许有专用寄存器</li>\n<li>大多采用硬联线控制，少用或不用微程序实现</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"指令格式\"><a class=\"anchor\" href=\"#指令格式\">#</a> 指令格式</h3>\n<h4 id=\"指令字长度\"><a class=\"anchor\" href=\"#指令字长度\">#</a> 指令字长度</h4>\n<ul>\n<li>指令的长度是指一条指令所包含二进制代码的位数，取决于操作码长度和操作数地址个数及每个地址的长度。</li>\n<li>机器字长：计算机能直接处理的二进制数据的位数。</li>\n</ul>\n<h4 id=\"操作码\"><a class=\"anchor\" href=\"#操作码\">#</a> 操作码</h4>\n<ul>\n<li>作用：指定指令是执行什么性质的操作。不同的指令用操作码字段的不同编码表示。</li>\n<li>定长编码：便于译码，扩展性差</li>\n<li>变长编码：能缩短指令平均长度</li>\n</ul>\n<h4 id=\"地址码\"><a class=\"anchor\" href=\"#地址码\">#</a> 地址码</h4>\n<ul>\n<li>作用：常用于指定参与操作的操作数地址。</li>\n<li>根据指令中操作数地址的个数，将指令划分为：\n<ol>\n<li>零地址指令：指令中只有操作码，没有地址码。</li>\n<li>一地址指令：单操作数指令。该指令常以 AC 中数作为被操作数，指令中地址码字段所指明的数为操作数，操作结果又放回 AC：(AC) OP (A) -&gt; AC</li>\n<li>二地址指令：双操作数指令，两地址指明被操作数和操作数地址，其中 A1 兼做结果地址：(A1) OP (A2) -&gt; (A1)</li>\n<li>三地址指令：三个地址分别指明被操作数、操作数以及结果存放地址：(A1) OP (A2) -&gt; (A3)</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"操作数类型\"><a class=\"anchor\" href=\"#操作数类型\">#</a> 操作数类型</h3>\n<ul>\n<li>地址数据：地址实际上也是一种形式的数据。</li>\n<li>数值数据：计算机中普遍使用的三种类型的数值数据。</li>\n<li>字符数据：文本数据或字符串，目前广泛使用 ASCII 码。</li>\n<li>逻辑数据：一个单元中由几位二进制 bit 项组成，每个 bit 的值可以是 1 或 0。当数据以这种方式看待时，称为逻辑型数据。</li>\n</ul>\n<h3 id=\"指令和数据的寻址方式\"><a class=\"anchor\" href=\"#指令和数据的寻址方式\">#</a> 指令和数据的寻址方式</h3>\n<h4 id=\"指令的寻址方式\"><a class=\"anchor\" href=\"#指令的寻址方式\">#</a> 指令的寻址方式</h4>\n<h5 id=\"顺序寻址方式\"><a class=\"anchor\" href=\"#顺序寻址方式\">#</a> 顺序寻址方式</h5>\n<ul>\n<li>程序指令按顺序存放在内存中，执行时按顺序从内存中取出所要执行的指令。</li>\n<li>程序计数器（指令指针寄存器，指令计数器）PC（Program Counter）存放正在执行的指令地址（要执行的下一指令地址）。</li>\n</ul>\n<h5 id=\"跳跃寻址方式\"><a class=\"anchor\" href=\"#跳跃寻址方式\">#</a> 跳跃寻址方式</h5>\n<ul>\n<li>程序要执行的下条指令地址不是由 PC 给出，而是由本指令的地址码给出。</li>\n<li>用途：实现程序转移或构成循环程序。</li>\n</ul>\n<h4 id=\"操作数寻址方式\"><a class=\"anchor\" href=\"#操作数寻址方式\">#</a> 操作数寻址方式</h4>\n<h5 id=\"隐含寻址implied-addressing\"><a class=\"anchor\" href=\"#隐含寻址implied-addressing\">#</a> 隐含寻址（Implied Addressing）</h5>\n<ul>\n<li>不明显指定操作数的地址，而是在指令中隐含着操作数的地址。比如单地址指令格式的第二操作数由 AC 隐含指定。</li>\n</ul>\n<h5 id=\"立即寻址immediate-addressing\"><a class=\"anchor\" href=\"#立即寻址immediate-addressing\">#</a> 立即寻址（Immediate Addressing）</h5>\n<ul>\n<li>特点：地址字段指出的不是操作数地址，而是操作数本身。</li>\n<li>优点：无需访问内存，指令的执行时间很短。</li>\n<li>缺点：操作数的范围受限。</li>\n<li>适用范围：用于操作数固定的指令中，主要用于给寄存器或存储器赋初值。</li>\n</ul>\n<h5 id=\"直接寻址direct-addressing\"><a class=\"anchor\" href=\"#直接寻址direct-addressing\">#</a> 直接寻址（Direct Addressing）</h5>\n<ul>\n<li>特点：地址字段直接指出操作数在内存中地址。</li>\n<li>优点：简单。</li>\n<li>缺点：寻址空间受限。</li>\n</ul>\n<h5 id=\"间接寻址indirect-addressing\"><a class=\"anchor\" href=\"#间接寻址indirect-addressing\">#</a> 间接寻址（Indirect Addressing）</h5>\n<ul>\n<li>特点：地址字段中的 D 是操作数地址的指针</li>\n<li>优点：寻址空间大。</li>\n<li>缺点：需多次访问主存。</li>\n<li>说明：两次访存影响执行速度，<strong>现已不大使用</strong>。</li>\n</ul>\n<h5 id=\"寄存器寻址register-addressing和寄存器间接寻址register-indirect-addressing\"><a class=\"anchor\" href=\"#寄存器寻址register-addressing和寄存器间接寻址register-indirect-addressing\">#</a> 寄存器寻址（Register Addressing）和寄存器间接寻址（Register Indirect Addressing）</h5>\n<ul>\n<li>寄存器寻址方式：寄存器中存放的是操作数。</li>\n<li>寄存器间接寻址方式：寄存器中存放的不是操作数，而是操作数在内存中的地址。</li>\n<li>区别：\n<ul>\n<li>寄存器中前者存的是操作数，后者是操作数地址。</li>\n<li>前者不需要访问内存，速度相对快；寻址空间小；后者需要访问内存，速度相对慢；寻址空间大。</li>\n</ul>\n</li>\n<li>联系：地址字段中给出的都是寄存器的编号。</li>\n</ul>\n<h5 id=\"相对寻址方式relative-addressing\"><a class=\"anchor\" href=\"#相对寻址方式relative-addressing\">#</a> 相对寻址方式（Relative Addressing）</h5>\n<ul>\n<li>特点：把 PC 的内容加上指令格式中形式地址 D 而形成操作数的有效地址 E。</li>\n</ul>\n<h5 id=\"基址寻址方式base-register-addressing\"><a class=\"anchor\" href=\"#基址寻址方式base-register-addressing\">#</a> 基址寻址方式（Base-Register Addressing）</h5>\n<ul>\n<li>特点：把基址寄存器的内容加上指令格式中 D 而形成操作数的 E。</li>\n<li>用途：可用于扩大寻址能力。</li>\n</ul>\n<h5 id=\"变址寻址方式index-addressing\"><a class=\"anchor\" href=\"#变址寻址方式index-addressing\">#</a> 变址寻址方式（Index Addressing）</h5>\n<ul>\n<li>特点：把某个变址寄存器的内容加上指令格式中 D 而形成操作数的 E。</li>\n<li>用途：用于实现程序块的有规律变化。</li>\n</ul>\n<h5 id=\"块寻址方式block-addressing\"><a class=\"anchor\" href=\"#块寻址方式block-addressing\">#</a> 块寻址方式（Block Addressing）</h5>\n<ul>\n<li>用途：用在 I/O 指令中，以实现外存储器或外围设备同内存之间的数据块传送，还适用于内存的数据块搬家。</li>\n<li>指定数据块长度的三种方法：\n<ol>\n<li>指令中划出字段指出长度；</li>\n<li>指令中指出数据块的首尾地址；</li>\n<li>由块结束字符指出数据块的长度。</li>\n</ol>\n</li>\n</ul>\n<h5 id=\"段寻址方式segment-addressing\"><a class=\"anchor\" href=\"#段寻址方式segment-addressing\">#</a> 段寻址方式（Segment Addressing）</h5>\n<ul>\n<li>方法：E 由段寄存器的内容加上段内偏移地址而形成。</li>\n<li>应用：微型机采用段寻址方式，20 位物理地址为 16 位段地址左移四位加上 16 位偏移量。</li>\n<li>分类：\n<ol>\n<li>段内直接寻址；</li>\n<li>段内间接寻址；</li>\n<li>段间直接寻址；</li>\n<li>段间间接寻址；</li>\n</ol>\n</li>\n</ul>\n<h5 id=\"堆栈寻址方式\"><a class=\"anchor\" href=\"#堆栈寻址方式\">#</a> 堆栈寻址方式</h5>\n<ul>\n<li>堆栈：是一组能存入和取出数据的暂时存储单元。</li>\n<li>区别：对数据的存取方法或寻址方式不同。</li>\n<li>分类：串联堆栈和存储器堆栈。\n<ul>\n<li>串联堆栈（硬堆栈，下压堆栈）：由 CPU 中的一组专门寄存器组成，容量有限、读出具有破坏性；</li>\n<li>存储器堆栈（软堆栈）：在主存储器中划分出一部分区域来作为堆栈。容量可任意、可同时建立多个堆栈、可用对存储器寻址的任一指令来对堆栈中数据寻址</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"典型指令\"><a class=\"anchor\" href=\"#典型指令\">#</a> 典型指令</h3>\n<h4 id=\"指令的分类\"><a class=\"anchor\" href=\"#指令的分类\">#</a> 指令的分类</h4>\n<ul>\n<li>数据传送指令：主要用于主存和寄存器、寄存器和寄存器之间的数据传送。主要有：取数、存数、传送、成组传送、字节交换、清除累加器和堆栈操作指令等。</li>\n<li>算术运算指令：主要用于定点或浮点的算术运算、向量运算。主要有：二进制定点加、减、乘、除指令；浮点加、减、乘、除指令，求反、求补、算术移位指令。</li>\n<li>逻辑运算指令：主要用于无符号数的位操作、代码转换、判断及运算。主要有：逻辑加、乘、异或、移位等。</li>\n<li>程序控制指令：转移指令一般分为：条件转移、无条件转移、转子程序、返回主程序、中断返回指令等。条件转移的条件有进位标志位 (C)、结果为零标志 (Z) 、负标志 (N) 、溢出标志 (V) 和奇偶标志 (P) 等。</li>\n<li>输入输出指令：主要用来启动外围设备，检查测试外围设备的工作状态，并实现外围设备和 CPU 之间、外围设备与外围设备之间的信息传送。</li>\n<li>字符串处理指令：常用在文字编辑中对字符串进行处理。包括：字符串传送、转换、比较、查找、抽取和替换等。</li>\n<li>特权指令：是具有特殊权限的指令，只用于操作系统或其他系统软件，一般不直接提供用户使用。主要用于系统资源的分配和管理：改变系统工作方式，检测用户的访问权限、修改虚拟存储器管理的段表、页表，完成任务的创建和切换。</li>\n<li>其他指令：状态寄存器置位、复位、测试、暂停、空操作，以及其它系统控制用的特殊指令。</li>\n</ul>\n<h2 id=\"中央处理器\"><a class=\"anchor\" href=\"#中央处理器\">#</a> 中央处理器</h2>\n<h3 id=\"cpu的功能\"><a class=\"anchor\" href=\"#cpu的功能\">#</a> CPU 的功能</h3>\n<ul>\n<li>指令控制：程序的顺序控制。</li>\n<li>操作控制：管理并产生每条指令的操作信号，并把它们送到相应部件，控制这些部件按要求进行动作。</li>\n<li>时间控制：对各种操作实施时间上的定时。</li>\n<li>数据加工：对数据进行算术和逻辑运算处理。</li>\n</ul>\n<h3 id=\"cpu的基本组成\"><a class=\"anchor\" href=\"#cpu的基本组成\">#</a> CPU 的基本组成</h3>\n<h4 id=\"运算器\"><a class=\"anchor\" href=\"#运算器\">#</a> 运算器</h4>\n<ul>\n<li>由 ALU、AC、DR 和 PSW 组成；是数据加工处理部件；在控制器的指挥下运行。</li>\n<li>运算器的主要功能：\n<ul>\n<li>执行算术运算；</li>\n<li>执行逻辑运算，并进行逻辑测试。</li>\n</ul>\n</li>\n<li>定点运算器的结构：\n<ul>\n<li>单总线结构的运算器</li>\n<li>双总线结构的运算器</li>\n<li>三总线结构的运算器</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"控制器\"><a class=\"anchor\" href=\"#控制器\">#</a> 控制器</h4>\n<ul>\n<li>组成：PC、指令寄存器（IR） 、指令译码器（ID）、时序产生器和操作控制器；</li>\n<li>作用： “决策机构” ，协调和指挥整个系统的操作。</li>\n<li>功能：\n<ul>\n<li>取指令，并指出下一条指令的位置。</li>\n<li>对指令译码或测试，产生相应操作控制信号，以启动规定的动作。</li>\n<li>指挥并控制 CPU、内存和 I/O 设备之间数据流动的方向。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"操作控制器微命令发生器\"><a class=\"anchor\" href=\"#操作控制器微命令发生器\">#</a> 操作控制器（微命令发生器）</h5>\n<ul>\n<li>组合逻辑型：常规控制器或硬布线控制器，采用组合逻辑技术实现。\n<ul>\n<li>优点：速度快；</li>\n<li>缺点：设计、调试、维修困难，难实现设计自动化。</li>\n</ul>\n</li>\n<li>存储逻辑型：微程序控制器，采用存储逻辑来实现，即微操作信号代码化，使得每条指令转化为一段微程序并存入一个专门的存储器中。\n<ul>\n<li>优点：设计规整，调试、维修以及更改、扩充指令方便，易于设计自动化。</li>\n<li>缺点：指令执行速度比组合逻辑型慢。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"指令计数器pc\"><a class=\"anchor\" href=\"#指令计数器pc\">#</a> 指令计数器 PC</h5>\n<ul>\n<li>功能：指示指令在 M 中的位置</li>\n<li>顺序执行：PC+1</li>\n<li>转移执行：PC 先加 1，再加上转移地址</li>\n</ul>\n<h5 id=\"指令寄存器ir\"><a class=\"anchor\" href=\"#指令寄存器ir\">#</a> 指令寄存器 IR</h5>\n<ul>\n<li>功能：存放当前指令的操作码和地址码</li>\n</ul>\n<h5 id=\"状态寄存器psw\"><a class=\"anchor\" href=\"#状态寄存器psw\">#</a> 状态寄存器 PSW</h5>\n<ul>\n<li>功能：指示程序运行方式，反映程序运行结果。</li>\n</ul>\n<h5 id=\"时序线路\"><a class=\"anchor\" href=\"#时序线路\">#</a> 时序线路</h5>\n<ul>\n<li>功能：控制操作时间和操作时刻。</li>\n</ul>\n<h3 id=\"指令周期\"><a class=\"anchor\" href=\"#指令周期\">#</a> 指令周期</h3>\n<h4 id=\"指令周期的基本概念\"><a class=\"anchor\" href=\"#指令周期的基本概念\">#</a> 指令周期的基本概念</h4>\n<ul>\n<li>指令周期：取出并执行一条指令的时间。</li>\n<li>CPU 周期 / 机器周期（工作周期）：常用从内存中读取一个指令字的最短时间来规定机器周期。</li>\n<li>T 周期 / 节拍脉冲 处理操作的最基本单位。</li>\n</ul>\n<h4 id=\"用方框图语言表示指令周期\"><a class=\"anchor\" href=\"#用方框图语言表示指令周期\">#</a> 用方框图语言表示指令周期</h4>\n<ul>\n<li>方框：代表一个 CPU 周期，方框中的内容表示数据通路的操作或某种控制操作；</li>\n<li>菱形：表示某种判别或测试，在时间上不单占一个 CPU 周期，而是依附于紧接它的前面一个方框的 CPU 周期；</li>\n<li>箭头：表示 CPU 执行顺序；</li>\n<li><code>~</code>  ：公操作符号，表示一条指令执行完毕后，CPU 所开始执行的一些操作 —— 如中断处理、通道处理等，其中取指令也可认为是公操作。</li>\n</ul>\n<h3 id=\"时序产生器和控制方式\"><a class=\"anchor\" href=\"#时序产生器和控制方式\">#</a> 时序产生器和控制方式</h3>\n<h4 id=\"时序信号的作用和体制\"><a class=\"anchor\" href=\"#时序信号的作用和体制\">#</a> 时序信号的作用和体制</h4>\n<ul>\n<li>作用：控制操作时间和操作时刻。</li>\n<li>基本体制：电位 - 脉冲制。</li>\n</ul>\n<h4 id=\"时序信号产生器\"><a class=\"anchor\" href=\"#时序信号产生器\">#</a> 时序信号产生器</h4>\n<ul>\n<li>时钟源（主时钟）：通常由石英晶体震荡器和与非门组成的正反馈振荡电路组成。\n<ul>\n<li>作用：提供频率稳定且电平匹配的方波时钟脉冲信号，为整个机器提供基准信号。</li>\n<li>时钟源在机器上电后立即开始产生具有一定占空比的时钟脉冲序列，直到关电源为止，中间不允许有任何间断。</li>\n</ul>\n</li>\n<li>环形脉冲发生器（节拍信号发生器）：产生一组有序的间隔相等或不等的脉冲序列，以便通过译码电路产生最后所需要的节拍脉冲。</li>\n<li>节拍脉冲和读写时序译码逻辑：根据环形脉冲发生器产生的脉冲，通过与门和与非门电路产生节拍。同时和<strong>微程序控制器中产生</strong>的读 / 写 / 对内存 / 对 I/O 设备等操作信号融合，实现对内存和外设的<strong>读写操作</strong>。（时序信号还<strong>不是微操作信号</strong>，而只是协调各部件工作的同步信号）</li>\n<li>启停控制逻辑：根据计算机的需要，可靠地开放和封锁脉冲，控制时序信号的发生和停止，实现对整个机器的正确启动与停止。<strong>必须保证启动时输出的第一个脉冲和停止时输出的最后一个脉冲都是完整的脉冲</strong>。</li>\n</ul>\n<h4 id=\"控制方式\"><a class=\"anchor\" href=\"#控制方式\">#</a> 控制方式</h4>\n<h5 id=\"同步控制方式固定时序控制方式\"><a class=\"anchor\" href=\"#同步控制方式固定时序控制方式\">#</a> 同步控制方式 (固定时序控制方式)</h5>\n<ul>\n<li>已定的指令在执行时所需的机器周期和时钟周期数都是固定不变的。\n<ul>\n<li>采用完全统一的机器周期执行各种不同的指令；一刀切</li>\n<li>采用不定长机器周期；</li>\n<li>中央控制与局部控制相结合。</li>\n</ul>\n</li>\n<li>特点：有明显时序划分，时钟周期固定，各步操作的衔接、各部件之间的数据传送受严格同步定时控制。</li>\n<li>优点：时序关系简单，时序划分规整，控制不复杂；控制逻辑易于集中，容易实现，便于管理。</li>\n<li>缺点：时间安排不合理，会造成简单指令较多的空闲时间，影响指令执行速度，不利于发挥计算机高速运算的潜力。</li>\n<li>应用场合：用于 CPU 和设备内部、系统总线操作 (各挂接部件速度相近，传送时间确定，传送距离较近)。</li>\n</ul>\n<h5 id=\"异步控制方式可变时序控制方式\"><a class=\"anchor\" href=\"#异步控制方式可变时序控制方式\">#</a> 异步控制方式（可变时序控制方式）</h5>\n<ul>\n<li>各项操作按需安排时间，不受统一时序控制</li>\n<li>特点：无统一时钟周期划分，各操作间的衔接和各部件之间的信息交换采用异步应答方式。</li>\n<li>优点：时间安排紧凑、合理、效率高；</li>\n<li>缺点：控制复杂，不容易实现。</li>\n<li>应用场合：用于异步总线操作 (各挂接部件速度差异大，传送时间不确定，传送距离较远)。</li>\n</ul>\n<h5 id=\"联合控制方式\"><a class=\"anchor\" href=\"#联合控制方式\">#</a> 联合控制方式</h5>\n<ul>\n<li>大部分操作安排在固定的机器周期中，对某些时间难以确定的操作则以执行部件的 “回答” 信号作为本次操作的结束。</li>\n<li>特点：同步方式引入异步应答。</li>\n<li>优点：不浪费很多时间，控制上又不是很复杂。</li>\n</ul>\n<h3 id=\"微程序控制器\"><a class=\"anchor\" href=\"#微程序控制器\">#</a> 微程序控制器</h3>\n<h4 id=\"基本术语\"><a class=\"anchor\" href=\"#基本术语\">#</a> 基本术语</h4>\n<ul>\n<li>微操作：一条指令的功能是通过执行一系列操作控制步完成的；这些控制步中的基本操作称为微操作。</li>\n<li>微命令：微命令是微操作的控制信号，而微操作是微命令的操作内容。</li>\n<li>微指令：可以同时执行的一组微命令组成一条微指令，完成一个基本运算或传送功能。也将微指令称作控制字（CW），其中每一位代表一个微命令。</li>\n<li>微程序：完成指定任务的微指令序列称为微程序。一条机器指令其功能可由一段微程序解释完成。</li>\n<li>微地址：微指令在控制存储器中的单元地址</li>\n</ul>\n<h4 id=\"组成原理\"><a class=\"anchor\" href=\"#组成原理\">#</a> 组成原理</h4>\n<h5 id=\"主要部件\"><a class=\"anchor\" href=\"#主要部件\">#</a> 主要部件</h5>\n<h6 id=\"控制存储器cm\"><a class=\"anchor\" href=\"#控制存储器cm\">#</a> 控制存储器 CM</h6>\n<ul>\n<li>功能：存放微程序，是微程序控制器的核心部件。</li>\n<li>CM 属于 CPU，不属于主存储器</li>\n</ul>\n<h6 id=\"微指令寄存器μir\"><a class=\"anchor\" href=\"#微指令寄存器μir\">#</a> 微指令寄存器 µIR</h6>\n<ul>\n<li>功能：存放当前微指令的内容。</li>\n<li>微命令字段：提供一步操作所需的微命令。</li>\n<li>微地址字段：\n<ul>\n<li>指明后续微地址的形成方式</li>\n<li>提供微地址的给定部分</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"微地址形成电路\"><a class=\"anchor\" href=\"#微地址形成电路\">#</a> 微地址形成电路</h6>\n<ul>\n<li>功能：提供两类微地址</li>\n<li>微程序入口地址：由机器指令操作码形成。</li>\n<li>后续微地址：由微地址字段、现行微地址、运行状态等形成</li>\n</ul>\n<h5 id=\"工作过程\"><a class=\"anchor\" href=\"#工作过程\">#</a> 工作过程</h5>\n<ol>\n<li>取机器指令：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>M</mi><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>取指微指令</mtext></mpadded></mover><mtext>µ</mtext><mi>I</mi><mi>R</mi><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>微命令字段</mtext></mpadded></mover><mtext>译码器</mtext><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>微命令</mtext></mpadded></mover><mtext>主存</mtext><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>机器指令</mtext></mpadded></mover><mi>I</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">CM\\xrightarrow{\\text{取指微指令}}µIR\\xrightarrow{\\text{微命令字段}}译码器\\xrightarrow{\\text{微命令}}主存\\xrightarrow{\\text{机器指令}}IR</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">CM</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">取指微指令</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord\">µ</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">微命令字段</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord cjk_fallback\">译码器</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">微命令</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord cjk_fallback\">主存</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">机器指令</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></li>\n<li>转微程序入口：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>R</mi><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>操作码</mtext></mpadded></mover><mtext>微地址形成电路</mtext><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>入口</mtext></mpadded></mover><mtext>µ</mtext><mi>A</mi><mi>R</mi><mo>→</mo><mi>C</mi><mi>M</mi><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>首条微指令</mtext></mpadded></mover><mtext>µ</mtext><mi>I</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">IR\\xrightarrow{\\text{操作码}}微地址形成电路\\xrightarrow{\\text{入口}}µAR\\rightarrow CM\\xrightarrow{\\text{首条微指令}}µIR</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">操作码</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord cjk_fallback\">微地址形成电路</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">入口</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">µ</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">CM</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">首条微指令</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">µ</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></li>\n<li>执行首条微指令：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>µ</mtext><mi>I</mi><mi>R</mi><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>微命令字段</mtext></mpadded></mover><mtext>译码器</mtext><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>微命令</mtext></mpadded></mover><mtext>操作部件</mtext></mrow><annotation encoding=\"application/x-tex\">µIR\\xrightarrow{\\text{微命令字段}}译码器\\xrightarrow{\\text{微命令}}操作部件</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord\">µ</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">微命令字段</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord cjk_fallback\">译码器</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">微命令</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">操作部件</span></span></span></span></li>\n<li>取后续微指令：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>微地址字段</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>现行微地址</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>运行状态</mtext></mstyle></mtd></mtr></mtable></mrow><mo>→</mo><mtext>微地址形成电路</mtext><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>后续微地址</mtext></mpadded></mover><mtext>µ</mtext><mi>A</mi><mi>R</mi><mo>→</mo><mi>C</mi><mi>M</mi><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>后续微指令</mtext></mpadded></mover><mtext>µ</mtext><mi>I</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">\\begin{cases}微地址字段\\\\现行微地址\\\\运行状态\\end{cases}\\rightarrow微地址形成电路\\xrightarrow{\\text{后续微地址}}µAR\\rightarrow CM\\xrightarrow{\\text{后续微指令}}µIR</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.32em;vertical-align:-1.91em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35em;\"><span style=\"top:-2.2em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.192em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.316em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.8889em\" height=\"0.316em\" style=\"width:0.8889em\" viewBox=\"0 0 888.89 316\" preserveAspectRatio=\"xMinYMin\"><path d=\"M384 0 H504 V316 H384z M384 0 H504 V316 H384z\"/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.316em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.8889em\" height=\"0.316em\" style=\"width:0.8889em\" viewBox=\"0 0 888.89 316\" preserveAspectRatio=\"xMinYMin\"><path d=\"M384 0 H504 V316 H384z M384 0 H504 V316 H384z\"/></svg></span></span><span style=\"top:-4.6em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.85em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">微地址字段</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">现行微地址</span></span></span><span style=\"top:-1.53em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">运行状态</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.91em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord cjk_fallback\">微地址形成电路</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">后续微地址</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">µ</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1113em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">CM</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1003em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord cjk_fallback mtight\">后续微指令</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">µ</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></li>\n<li>执行后续微指令：同 3.</li>\n<li>返回（微程序执行完，返回 CM（存放取指微指令的固定单元））</li>\n</ol>\n<h5 id=\"微指令\"><a class=\"anchor\" href=\"#微指令\">#</a> 微指令</h5>\n<ul>\n<li>操作控制部分：又称 “微操作码字段”，用来发出管理和指挥全机工作的控制信号，其中每一位都表示一个微命令。</li>\n<li>顺序控制部分：又称 “微地址码字段”，用来决定产生下一条微指令的地址</li>\n</ul>\n<h5 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结：</h5>\n<ul>\n<li>微程序控制器的工作过程实质就是：在微程序控制器的控制下，计算机执行机器指令的过程。具体可分为：\n<ol>\n<li>执行取指令的公操作机器开始运行时，自动地将取指微程序的入口微地址送入 µAR，并从 CM 中读出微指令，送往 µIR，当取指微程序执行完以后，从主存中取出的机器指令就已经存入 IR 中了。</li>\n<li>由机器指令的操作码字段 OP 通过 “地址转移逻辑” 产生出该机器指令所对应的微程序的入口微地址，并送入 µAR。</li>\n<li>从 CM 中逐条取出相应的微指令并执行。</li>\n<li>执行完对应于一条机器指令的一段微程序之后，又回到取指微程序的入口地址，继续第（1）步，以完成取下一条机器指令的公操作。</li>\n</ol>\n</li>\n</ul>\n<h5 id=\"微程序时序安排\"><a class=\"anchor\" href=\"#微程序时序安排\">#</a> 微程序时序安排</h5>\n<ul>\n<li>为了保证整个机器控制信号的同步，可以将一个微指令周期时间设计得恰好和 CPU 周期时间相等。</li>\n</ul>\n<h5 id=\"机器指令与微指令的关系\"><a class=\"anchor\" href=\"#机器指令与微指令的关系\">#</a> 机器指令与微指令的关系</h5>\n<ul>\n<li>一条机器指令对应一段微程序，此微程序是由若干条微指令序列组成的。</li>\n<li>指令、程序、地址对应于内存储器；微指令、微程序、微地址对应于控制存储器。</li>\n<li>一个 CPU 周期对应于一条微指令指令周期。方框图就是微程序流程图。</li>\n</ul>\n<h4 id=\"微程序设计技术\"><a class=\"anchor\" href=\"#微程序设计技术\">#</a> 微程序设计技术</h4>\n<h5 id=\"微指令格式\"><a class=\"anchor\" href=\"#微指令格式\">#</a> 微指令格式</h5>\n<h6 id=\"垂直型微指令\"><a class=\"anchor\" href=\"#垂直型微指令\">#</a> 垂直型微指令</h6>\n<ul>\n<li>一条微指令定义并执行一种基本操作</li>\n<li>优点：微指令短、简单、规整，便于编写微程序。</li>\n<li>缺点：微程序长，执行速度慢；工作效率低。</li>\n</ul>\n<h6 id=\"水平型微指令\"><a class=\"anchor\" href=\"#水平型微指令\">#</a> 水平型微指令</h6>\n<ul>\n<li>一条微指令定义并执行几种并行的基本操作</li>\n<li>优点：微程序短，执行速度快。</li>\n<li>缺点：微指令长，编写微程序困难。</li>\n</ul>\n<h6 id=\"混合型微指令\"><a class=\"anchor\" href=\"#混合型微指令\">#</a> 混合型微指令</h6>\n<ul>\n<li>在垂直型的基础上增加一些不太复杂的并行操作</li>\n<li>微指令不长，便于编写</li>\n<li>微程序不长，执行速度加快</li>\n</ul>\n<h5 id=\"编码方法\"><a class=\"anchor\" href=\"#编码方法\">#</a> 编码方法</h5>\n<h6 id=\"直接编码\"><a class=\"anchor\" href=\"#直接编码\">#</a> 直接编码</h6>\n<ul>\n<li>微命令按位给出</li>\n<li>不需译码，产生微命令的速度快</li>\n<li>信息的表示效率低</li>\n<li>微指令中通常只有个别位采用直接控制法</li>\n</ul>\n<h6 id=\"分段直接编译法\"><a class=\"anchor\" href=\"#分段直接编译法\">#</a> 分段直接编译法</h6>\n<ul>\n<li>微命令由字段编码直接给出</li>\n<li>微命令分组原则：同类操作中互斥的微命令放同一字段</li>\n<li>微操作分类：\n<ul>\n<li>相容性：在同时或同一 CPU 周期内可以并行执行。</li>\n<li>相斥性：在同时或同一 CPU 周期内不能并行执行。</li>\n</ul>\n</li>\n<li>编码较简单</li>\n<li>操作唯一</li>\n<li>一条微指令能同时提供若干微命令，便于组织各种操作</li>\n</ul>\n<h5 id=\"微地址形成方式\"><a class=\"anchor\" href=\"#微地址形成方式\">#</a> 微地址形成方式</h5>\n<h6 id=\"增量方式\"><a class=\"anchor\" href=\"#增量方式\">#</a> 增量方式</h6>\n<ul>\n<li>以顺序执行为主，辅以各种常规转移方式\n<ul>\n<li>顺序：现行微地址 + 1</li>\n<li>跳步：现行微地址 + 2</li>\n<li>无条件转移：现行微指令给出转移微地址</li>\n<li>条件转移：现行微指令给出转移微地址和转移条件</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"多路转移方式断定方式\"><a class=\"anchor\" href=\"#多路转移方式断定方式\">#</a> 多路转移方式（断定方式）</h6>\n<ul>\n<li>由直接给定和测试断定相结合形成微地址</li>\n</ul>\n<h3 id=\"流水线cpu\"><a class=\"anchor\" href=\"#流水线cpu\">#</a> 流水线 CPU</h3>\n<h4 id=\"并行处理技术\"><a class=\"anchor\" href=\"#并行处理技术\">#</a> 并行处理技术</h4>\n<ul>\n<li>时间并行：时间重叠，让多个处理过程在时间上相互错开，轮流重叠地使用同一套硬件设备的各个部分，以加快硬件周转而赢得速度。</li>\n<li>空间并行：资源重复，以 “数量取胜” 来提高计算机的处理速度。当前的空间并行主要体现在多 CPU 和多计算机系统，在单处理机系统中也得到广泛的应用。</li>\n<li>时间 + 空间并行：时间重叠和资源重复的综合应用。</li>\n</ul>\n<h4 id=\"流水cpu的结构\"><a class=\"anchor\" href=\"#流水cpu的结构\">#</a> 流水 CPU 的结构</h4>\n<h5 id=\"流水计算机的系统组成\"><a class=\"anchor\" href=\"#流水计算机的系统组成\">#</a> 流水计算机的系统组成</h5>\n<ul>\n<li>程序和数据存放在主存中：主存采用多体交叉存储器，CPU 与主存之间添加一个高速 cache 来弥补两者速度差异。</li>\n<li>指令部件本身构成一个流水线：取指令、指令译码、计算操作数地址、取操作数等几个过程段组成；</li>\n<li>指令队列：一个 FIFO 的寄存器队列，用来存放经过译码的指令和取来的数据，也是一条流水线；</li>\n<li>执行部件：具有多个算术逻辑运算部件，这些部件本身又用流水线方式构成，一般采用的实现方法：\n<ul>\n<li>将执行部件分为定点执行部件和浮点执行部件两个可并行执行部分，分别处理定点运算指令和浮点运算指令；</li>\n<li>在浮点执行部件中，又有浮点加法部件和浮点乘 / 除部件，它们可同时执行不同的指令；</li>\n<li>浮点运算部件都以流水线方式工作。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"流水线分类\"><a class=\"anchor\" href=\"#流水线分类\">#</a> 流水线分类</h5>\n<ul>\n<li>指令流水线：指令步骤的并行，将指令流的处理过程划分为取指令、指令译码、取操作数、执行、写回等几个并行处理的过程段。</li>\n<li>算术流水线：运算操作步骤的并行，如流水加法器、流水乘法器、流水除法器等。</li>\n<li>处理机流水线：宏流水线，指程序步骤的并行；由一串级联的处理机构成流水线的各个过程段，每台处理机负责某一特定的任务。</li>\n</ul>\n<h4 id=\"流水线中主要问题\"><a class=\"anchor\" href=\"#流水线中主要问题\">#</a> 流水线中主要问题</h4>\n<h5 id=\"资源相关冲突\"><a class=\"anchor\" href=\"#资源相关冲突\">#</a> 资源相关冲突</h5>\n<ul>\n<li>多条指令进入流水线后在同一机器时钟周期内争用同一个功能部件所发生的冲突。</li>\n<li>解决方法：\n<ul>\n<li>后继指令停顿一拍后再启动。</li>\n<li>增加相应资源。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"数据相关冲突\"><a class=\"anchor\" href=\"#数据相关冲突\">#</a> 数据相关冲突</h5>\n<ul>\n<li>有 <code>i</code>  和 <code>j</code>  两条指令， <code>i</code>  指令在前， <code>j</code>  指令在后，则三种不同类型的数据相关的含义为\n<ul>\n<li><code>RAW</code>  读写（先写后读）：指令 <code>j</code>  试图在指令 <code>i</code>  写入寄存器前就读出该寄存器内容，这样，指令 <code>j</code>  就会错误地读出该寄存器旧的内容。</li>\n<li><code>WAR</code>  写读（先读后写）：指令 <code>j</code>  试图在指令 <code>i</code>  读出寄存器之前就写入该寄存器，这样，指令 <code>i</code>  就错误地读得该寄存器新的内容。</li>\n<li><code>WAW</code>  写写（先写后写）：指令 <code>j</code>  试图在指令 <code>i</code>  写寄存器之前就写入该寄存器，这样，两次写的先后次序被颠倒，就会错误地使由指令 <code>i</code>  写入的值成为该寄存器内容。</li>\n</ul>\n</li>\n<li>解决办法主要用软件和硬件技术：\n<ul>\n<li>时间推后法</li>\n<li>旁路技术或相关专用通路技术：定向传递（设置若干运算结果缓冲寄存器，暂时保留运算结果，便于后续指令直接使用，称为 “向前” 或定向传送技术）</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"控制相关冲突\"><a class=\"anchor\" href=\"#控制相关冲突\">#</a> 控制相关冲突</h5>\n<ul>\n<li>由转移指令引起。当执行转移指令时，依据转移条件的产生结果，可能为顺序取下条指令；也可能转移到目标地址取指令，从而使流水线断流。</li>\n<li>解决方法：\n<ul>\n<li>延迟转移法：由编译程序重排指令序列来实现。基本思想是 “先执行再转移”；在不转移时，使延迟的时间得到有效利用。</li>\n<li>转移预测法：用硬件方法实现，依据指令过去的行为来预测将来的行为。通过使用转移取和顺序取两路指令预取队列以及目标指令 cache，可将转移预测提前到取指阶段进行，以获得良好的效果。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"risc-cpu\"><a class=\"anchor\" href=\"#risc-cpu\">#</a> RISC CPU</h3>\n<h4 id=\"risc-cpu的特点\"><a class=\"anchor\" href=\"#risc-cpu的特点\">#</a> RISC CPU 的特点</h4>\n<ul>\n<li>RISC 的三个要素是：\n<ul>\n<li>一个有限的简单的指令集；</li>\n<li>CPU 配备大量的通用寄存器；</li>\n<li>强调对指令流水线的优化。</li>\n</ul>\n</li>\n<li>基于三要素的 RISC 机器的特征是：\n<ul>\n<li>使用等长指令，目前的典型长度是 4 个字节。</li>\n<li>寻址方式少且简单，一般为 2—3 种，最多不超过 4 种，绝不出现存储器间接寻址方式。</li>\n<li>只有取数指令、存数指令访问存储器。指令中最多出现 RS 型指令，绝不出现 SS 型指令。</li>\n<li>指令集中的指令数目一般少于 100 种，指令格式一般少于 4 种。</li>\n<li>指令功能简单，控制器多采用硬布线方式，以期更快的执行速度。</li>\n<li>平均而言，所有指令的执行时间为一个处理时钟周期。</li>\n<li>指令格式中用于指派整数寄存器的个数不少于 32 个，用于指派浮点数寄存器的个数不少于 16 个。</li>\n<li>强调通用寄存器资源的优化使用。</li>\n<li>支持指令流水并强调指令流水的优化使用。</li>\n<li>RISC 技术的复杂性在于它的编译程序，因此软件系统开发时间比 CISC 机器长。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"cpu性能评价\"><a class=\"anchor\" href=\"#cpu性能评价\">#</a> CPU 性能评价</h3>\n<ul>\n<li>CPU 性能：CPU 执行程序所用的时间</li>\n<li>速度评价标准：MIPS 和 MFLOPS\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>I</mi><mi>P</mi><mi>S</mi><mo>=</mo><mfrac><mrow><mtext>指令条数（</mtext><msub><mi>I</mi><mi>N</mi></msub><mtext>）</mtext></mrow><mrow><mtext>执行时间（</mtext><msub><mi>T</mi><mi>e</mi></msub><mtext>）</mtext><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow></mfrac><mo>=</mo><mfrac><mrow><mtext>时钟频率（</mtext><msub><mi>f</mi><mi>c</mi></msub><mtext>）</mtext></mrow><mrow><mi>C</mi><mi>P</mi><mi>I</mi><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">MIPS=\\frac{指令条数（I_N）}{执行时间（T_e）\\times10^6}=\\frac{时钟频率（f_c）}{CPI\\times10^6}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">PS</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3337em;vertical-align:-0.4451em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8886em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">执行时间（</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback mtight\">）</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4103em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">指令条数（</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567em;margin-left:-0.0785em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1433em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback mtight\">）</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3355em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">CP</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">时钟频率（</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback mtight\">）</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>F</mi><mi>L</mi><mi>O</mi><mi>P</mi><mi>S</mi><mo>=</mo><mfrac><mrow><mtext>浮点运算次数（</mtext><msub><mi>I</mi><mrow><mi>F</mi><mi>N</mi></mrow></msub><mtext>）</mtext></mrow><mrow><mtext>执行时间（</mtext><msub><mi>T</mi><mi>e</mi></msub><mtext>）</mtext><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">MFLOPS=\\frac{浮点运算次数（I_{FN}）}{执行时间（T_e）\\times10^6}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">MF</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">OPS</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3337em;vertical-align:-0.4451em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8886em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">执行时间（</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback mtight\">）</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4103em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">浮点运算次数（</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567em;margin-left:-0.0785em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">FN</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1433em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback mtight\">）</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"总线系统\"><a class=\"anchor\" href=\"#总线系统\">#</a> 总线系统</h2>\n<h3 id=\"总线的概念和结构形态\"><a class=\"anchor\" href=\"#总线的概念和结构形态\">#</a> 总线的概念和结构形态</h3>\n<h4 id=\"总线的概念\"><a class=\"anchor\" href=\"#总线的概念\">#</a> 总线的概念</h4>\n<ul>\n<li>是构成计算机系统的互联机构，是多个系统功能部件（运算器、控制器、存储器、输入 / 输出设备）之间进行数据传送的公共通路。</li>\n<li>由传输信息的电路和管理信息传输的协议组成。</li>\n<li>总线往往是计算机数据交换的中心，总线的结构、技术和性能都直接影响着计算机系统的性能和效率。</li>\n</ul>\n<h5 id=\"总线分类\"><a class=\"anchor\" href=\"#总线分类\">#</a> 总线分类</h5>\n<ul>\n<li>内部总线：CPU 内部连接各寄存器及运算部件之间的总线。</li>\n<li>系统总线：CPU 同计算机系统的其他高速功能部件 (存储器、通道等) 间互相连接的总线。</li>\n<li>I/O 总线：中、低速 I/0 设备间互相连接的总线。</li>\n</ul>\n<h5 id=\"总线结构\"><a class=\"anchor\" href=\"#总线结构\">#</a> 总线结构</h5>\n<h6 id=\"总线通道\"><a class=\"anchor\" href=\"#总线通道\">#</a> 总线通道</h6>\n<ul>\n<li>按照信号类型可分为数据总线、控制总线和地址总线。只是逻辑上的划分。\n<ul>\n<li>数据总线宽度是决定连接到总线上的设备可能获得的最大性能的决定因素之一，也是影响系统性能的关键因素之一。</li>\n<li>地址总线是标明发送或接收数据的设备编号信号线。其宽度决定了总线上连接设备的能力。</li>\n<li>控制总线用于控制总线设备对数据线和地址线的使用控制信号主要完成设备之间进行信息交换时的定时和命令。其中定时信号表明有效地址和数据出现在总线上的时间。命令信号定义总线上所要完成的操作。</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"总线上的设备\"><a class=\"anchor\" href=\"#总线上的设备\">#</a> 总线上的设备</h6>\n<ul>\n<li><strong>主设备</strong>能够申请总线使用权，而<strong>从设备</strong>不具有总线使用权。</li>\n</ul>\n<h6 id=\"总线接口\"><a class=\"anchor\" href=\"#总线接口\">#</a> 总线接口</h6>\n<ul>\n<li>是连接功能部件和总线的桥梁，它完成功能部件的信号和总线信号之间的协调和转换，因此具有对总线和设备两个方面的工作。</li>\n</ul>\n<h5 id=\"总线连接的主要优点\"><a class=\"anchor\" href=\"#总线连接的主要优点\">#</a> 总线连接的主要优点</h5>\n<ul>\n<li>多个部件之间采用总线连接方式，可大大降低部件间互连的复杂性，大幅度减少连线数量。</li>\n<li>由于多个部件之间连接的多个控制接口变成了每个部件与总线间的一个连接接口，连接接口的器材量大幅度减少。</li>\n<li>如果设备之间没有或者很少有多个部件同时进行信息交换，采用总线方式连接这些部件可有效发挥总线连接的优点。</li>\n</ul>\n<h5 id=\"总线特性\"><a class=\"anchor\" href=\"#总线特性\">#</a> 总线特性</h5>\n<ul>\n<li>物理特性：总线的物理连接方式，包括总线的根数、总线的插头、插座形状、引脚线排列方式等。</li>\n<li>功能特性：描述总线中每一根线的功能。</li>\n<li>电气特性：定义每一根线上信号的传递方向及有效电平范围。一般规定送入 CPU 的信号叫输入信号、从 CPU 发出的信号叫输出信号。</li>\n<li>时间特性：定义每根线在什么时间有效，即规定总线上各信号有效的时序关系。</li>\n</ul>\n<h4 id=\"总线的连接方式\"><a class=\"anchor\" href=\"#总线的连接方式\">#</a> 总线的连接方式</h4>\n<h5 id=\"单总线结构\"><a class=\"anchor\" href=\"#单总线结构\">#</a> 单总线结构</h5>\n<ul>\n<li>特点：使用一条单一的系统总线来连接 CPU、主存和 I/O 设备。</li>\n<li>要求：连到总线上的逻辑部件必须高速运行。</li>\n<li>单总线系统中，对输入 / 输出设备的操作，完全和主存的操作方法一样来处理。</li>\n<li>某些外围设备也可以指定地址。此时外围设备通过与 CPU 中的控制部件交换信息的方式占有总线。</li>\n</ul>\n<h5 id=\"双总线结构\"><a class=\"anchor\" href=\"#双总线结构\">#</a> 双总线结构</h5>\n<ul>\n<li>在 CPU 和主存之间专门设置了一组高速的存储总线，使 CPU 通过专用总线与内存交换信息，减轻了系统总线负担；同时内存与外设之间仍使用系统总线实现 DMA 操作，而不必经过 CPU。</li>\n</ul>\n<h5 id=\"三总线结构\"><a class=\"anchor\" href=\"#三总线结构\">#</a> 三总线结构</h5>\n<ul>\n<li>在双总线的基础上增加了 I/O 总线形成的。其中系统总线是 CPU、主存和通道 (IOP) 之间进行数据传送的公共通路；而 I/O 总线是多个外部设备与通道进行数据传送的公共通路。</li>\n<li>通道 (Channel) 是一台具有特殊功能的处理器 (IOP)，分担了一部分 CPU 的功能，以实现对外设的统一管理及外设与主存之间的数据传送，提高了 CPU 的效率，但以花费更多的硬件为代价。</li>\n</ul>\n<h4 id=\"总线结构对计算机系统性能的影响\"><a class=\"anchor\" href=\"#总线结构对计算机系统性能的影响\">#</a> 总线结构对计算机系统性能的影响</h4>\n<ul>\n<li>最大存储容量：单总线系统中，必须为外围设备保留某些地址，最大存储容量小于由计算机地址总线宽度所决定的可能的地址总数；而双总线的存储容量不受外围设备多少的影响。</li>\n<li>指令系统：双总线系统中对存储总线和系统总线必须有不同的指令系统；而在单总线系统中对内存和外设采用相同的指令，不同之处仅在于使用不同的地址。</li>\n</ul>\n<h4 id=\"总线的内部结构\"><a class=\"anchor\" href=\"#总线的内部结构\">#</a> 总线的内部结构</h4>\n<ul>\n<li>数据传送总线：由地址线、数据线、控制线组成；为减少布线，数据线和地址线常采用多路复用方式。</li>\n<li>仲裁总线：总线请求线和总线授权线。</li>\n<li>中断和同步总线：用于处理带优先级的中断操作，包括中断请求线和中断认可线。</li>\n<li>公用线：包括时钟信号线、电源线、地线、系统复位线以及加电或断电的时序信号线等。</li>\n</ul>\n<h3 id=\"总线接口-2\"><a class=\"anchor\" href=\"#总线接口-2\">#</a> 总线接口</h3>\n<h4 id=\"信息的传送方式\"><a class=\"anchor\" href=\"#信息的传送方式\">#</a> 信息的传送方式</h4>\n<h5 id=\"基本概念\"><a class=\"anchor\" href=\"#基本概念\">#</a> 基本概念</h5>\n<ul>\n<li>码元：信息传输通道中，携带数据信息的信号单元。</li>\n<li>波特率（码元传输率）：每秒钟通过信道传输的码元数。是传输信道频宽的指标。</li>\n<li>码元时间：波特率的倒数，即传输一位码元的时间。</li>\n</ul>\n<h5 id=\"串行传送\"><a class=\"anchor\" href=\"#串行传送\">#</a> 串行传送</h5>\n<ul>\n<li>只用一条传输线，且采用脉冲传送。</li>\n<li>在串行传送时，按照顺序来传送表示一个数码的所有二进制位的脉冲信号，每次一位。</li>\n<li>当使用脉冲信号传递连续的 “1” 或 “0” 数码时，必须采用某种时序格式，以便使接收设备能加以识别，通常采用 “位时间”（即一个二进制位在传输线上占用的时间长度），一般低位在前，高位在后。</li>\n<li>在串行传送时，被传送的数据需要在发送部件进行并 — 串变换，即<strong>拆卸</strong>，在接收部件进行串 — 并变换，称为<strong>装配</strong>。</li>\n</ul>\n<h5 id=\"并行传送\"><a class=\"anchor\" href=\"#并行传送\">#</a> 并行传送</h5>\n<ul>\n<li>每个数据位单独占用一条传输线。这样每一条线分别代表了二进制数的不同位值。</li>\n<li>一般采用电位传送。出于速度和效率上的考虑，系统总线都采用 “并行传送” 方式。</li>\n</ul>\n<h5 id=\"分时传送\"><a class=\"anchor\" href=\"#分时传送\">#</a> 分时传送</h5>\n<ul>\n<li>一是采用总线复用方式，如在传输线上既传输数据又传送地址，为此必须划分时间片来实现传送任务；</li>\n<li>二是共享总线的部件分时使用总线。</li>\n</ul>\n<h4 id=\"接口的基本概念\"><a class=\"anchor\" href=\"#接口的基本概念\">#</a> 接口的基本概念</h4>\n<ul>\n<li>I/O 设备适配器，广义上讲，接口指 CPU 和主存、外围设备之间通过总线进行连接的逻辑部件。接口在它动态连接的部件间起 “转换器” 的作用，以实现彼此间的信息传送。</li>\n<li>接口通常具有的功能:\n<ul>\n<li>控制：靠程序的指令信息来控制外围设备的动作。</li>\n<li>缓冲：作为缓冲器，用以补偿各种设备在速度上的差异。</li>\n<li>状态：监视外围设备的工作状态并保存状态信息，供 CPU 询问外围设备时进行分析。</li>\n<li>转换：完成任何要求的数据转换。</li>\n<li>整理：完成一些特别的功能，如修改字计数器或当前 AR。</li>\n<li>程序中断：外围设备向 CPU 请求某种动作时，接口即发生一个中断请求信号到 CPU。</li>\n</ul>\n</li>\n<li>适配器必须有的两个接口：\n<ul>\n<li>和系统总线的接口，其数据交换一定是并行方式；</li>\n<li>和外设的接口，可能是并行或串行；</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"总线的仲裁-定时和数据传送模式\"><a class=\"anchor\" href=\"#总线的仲裁-定时和数据传送模式\">#</a> 总线的仲裁、定时和数据传送模式</h3>\n<h4 id=\"总线的仲裁\"><a class=\"anchor\" href=\"#总线的仲裁\">#</a> 总线的仲裁</h4>\n<h5 id=\"集中式仲裁\"><a class=\"anchor\" href=\"#集中式仲裁\">#</a> 集中式仲裁</h5>\n<ul>\n<li>仲裁电路集中在一起，通常由一个模块实现。每功能模块有两条线连到中央仲裁器：一条为送往仲裁器的总线请求信号线 BR，一条是仲裁器送出的总线授权信号线 BG。</li>\n</ul>\n<h6 id=\"链式查询方式\"><a class=\"anchor\" href=\"#链式查询方式\">#</a> 链式查询方式</h6>\n<ul>\n<li>特点： 共用一条总线授权线，总线授权信号 BG 串行地从一个 I/O 接口传送到下一个 I/O 接口，如果该接口没有请求，则继续往下查询；如果有总线请求，则 BG 信息不再向下查询，该接口获得总线控制权。</li>\n<li>共用一个 BS 线表示当前总线是否被使用着。各设备的优先级是按照 BG 线上离中央仲裁器的远近来确定。</li>\n<li>优点：只用很少几根线就能按一定优先次序实现总线仲裁，且可方便地扩充设备。</li>\n<li>缺点：对询问链电路故障敏感，优先级固定而不能调整、速度慢。</li>\n</ul>\n<h6 id=\"计数器定时查询方式\"><a class=\"anchor\" href=\"#计数器定时查询方式\">#</a> 计数器定时查询方式</h6>\n<ul>\n<li>总线上任一设备要求使用总线时，通过 BR 线发出总线请求。中央仲裁器接到请求信号以后，在 BS 线为 “0” 的情况下让计数器开始计数，计数值通过一组地址线发向设备，每个设备接口都有一个设备地址判别电路，当地址线上的计数值与请求总线的设备地址一致时，该设备置 “1” BS 线，获得总线使用权，此时中止计数查询。</li>\n<li>比较：少了一条 BG 线，可改变优先次序，对电路的故障不如链式敏感，但增加了主控线数，控制较复杂。</li>\n<li>优点：设备优先级可以改变，仲裁策略灵活性高。</li>\n</ul>\n<h6 id=\"独立请求方式\"><a class=\"anchor\" href=\"#独立请求方式\">#</a> 独立请求方式</h6>\n<ul>\n<li>每一共享总线的设备均有一对 BR<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4617em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 BG<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4617em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，当设备要使用总线时，便发出总线请求信号，中央仲裁器有一个排队电路，根据一定的优先次序决定首先响应哪个设备的请求，给设备以授权信号。</li>\n<li>优点：响应时间最快；对优先次序的控制相当灵活（可以预先固定、也可以通过程序来改变，还可屏蔽某个设备的总线请求）。</li>\n<li>对于单 CPU 系统总线，中央仲裁器又称总线控制器，是 CPU 的一部分，而按照目前的总线标准，中央仲裁器一般是单独功能模块。</li>\n</ul>\n<h5 id=\"分布式仲裁\"><a class=\"anchor\" href=\"#分布式仲裁\">#</a> 分布式仲裁</h5>\n<ul>\n<li>不需要中央仲裁器，每个主方都有自己的仲裁号和仲裁器；当总线申请时，把各自唯一的仲裁号发到共享的总线上，每个仲裁器把仲裁线上的号和自己的号比较，如果总线上的号大，则它的总线请求不予响应，并撤销它的仲裁号。最后，获胜的仲裁号留在仲裁总线上。</li>\n</ul>\n<h4 id=\"总线的定时\"><a class=\"anchor\" href=\"#总线的定时\">#</a> 总线的定时</h4>\n<h5 id=\"同步定时\"><a class=\"anchor\" href=\"#同步定时\">#</a> 同步定时</h5>\n<ul>\n<li>事件出现在总线上的时刻由总线时钟信号来确定</li>\n<li>优点：规定明确、统一、模块间配合简单一致。</li>\n<li>缺点：主从模块时间配合属强制性同步，必须在限定时间内完成规定的要求，并且对所有模块都用同一限时，势必造成对不相同速度的部件而言，必须按最慢的速度部件来设计公共时钟，严重影响总线工作效率</li>\n<li>适用范围：仅适合总线长度较短、各个功能模块存取时间比较接近的情况。</li>\n</ul>\n<h5 id=\"异步定时\"><a class=\"anchor\" href=\"#异步定时\">#</a> 异步定时</h5>\n<ul>\n<li>建立在应答式或互锁机制基础之上，后一事件出现在总线上的时刻取决于前一事件的出现。</li>\n<li>优点：不需要统一的公共时钟，总线周期的长度可变，不把响应时间强加到功能模块上，允许快速和慢速的功能模块都能连接到同一总线上，给设计者以充分的灵活和选择余地。</li>\n<li>缺点：增加了总线的复杂性和成本。</li>\n</ul>\n<h4 id=\"总线数据传送模式\"><a class=\"anchor\" href=\"#总线数据传送模式\">#</a> 总线数据传送模式</h4>\n<ol>\n<li>读、写操作：读操作是由从方到主方的数据传送；写操作是由主方到从方的数据传送。一般，主方先以一个总线周期发出命令和从方地址，经过一定的延时再开始数据传送总线周期。为了提高总线利用率，减少延时损失，主方完成寻址总线周期后可让出总线控制权，以使其他主方完成更紧迫的操作。然后再重新竞争总线，完成数据传送总线周期。</li>\n<li>块传送操作：只需给出块的起始地址，然后对固定块长度的数据一个接一个地读出或写入。对于 CPU（主方）— 存储器（从方）而言的块传送，常称为猝发式传送，其块长一般固定为数据线宽度（存储器字长）的 4 倍。例如一个 64 位数据线的总线，一次猝发式传送可达 256 位。这在超标量流水中十分有用。</li>\n<li>写后读、读修改写操作：这是两种组合操作。只给出地址一次（表示同一地址），或进行先写后读操作，或进行先读后写操作。前者用于校验目的，后者用于多道程序系统中对共享存储资源的保护。这两种操作和猝发式操作一样，主方掌管总线直到整个操作完成。</li>\n<li>广播、广集操作：一般而言，数据传送只在一个主方和一个从方之间进行。但有的总线允许一个主方对多个从方进行写操作，这种操作称为广播。与广播相反的操作称为广集，它将选定的多个从方数据在总线上完成 AND 或 OR 操作，用以检测多个中断源。</li>\n</ol>\n<h3 id=\"host总线和pci总线\"><a class=\"anchor\" href=\"#host总线和pci总线\">#</a> HOST 总线和 PCI 总线</h3>\n<h4 id=\"多总线结构\"><a class=\"anchor\" href=\"#多总线结构\">#</a> 多总线结构</h4>\n<ul>\n<li>PCI 是一个与处理器无关的高速外围总线，是一个层间总线，采用同步时序协议和集中式仲裁策略，并具有自动配置能力。</li>\n<li>系统中一般有三种总线：\n<ul>\n<li>HOST 总线：有 CPU 总线、系统总线、主存总线等多种名称。不仅用来连接主存，还用来连接多个 CPU。</li>\n<li>PCI 总线：连接各种高速的 PCI 设备，设备可以是主、从或主从。允许有多条 PCI 总线，使用 HOST 桥和 HOST 总线相连，使用 PCI/ PCI 桥和 PCI 总线相连，用于扩充整个系统的 PCI 总线负载能力。</li>\n<li>LAGACY 总线：ISA、EISA、MCA 等性能较低的传统总线，支持中、低速 I/O 设备。</li>\n</ul>\n</li>\n<li>桥：用来连接两条总线，使彼此间相互通信，又是一个总线转换部件，可以把一条总线的地址空间映射到另一个总线的地址空间上，从而使系统中任意一个总线主设备都能看到同样一份地址表。</li>\n</ul>\n<h2 id=\"外围设备\"><a class=\"anchor\" href=\"#外围设备\">#</a> 外围设备</h2>\n<h3 id=\"外围设备概述\"><a class=\"anchor\" href=\"#外围设备概述\">#</a> 外围设备概述</h3>\n<h4 id=\"外围设备的一般功能\"><a class=\"anchor\" href=\"#外围设备的一般功能\">#</a> 外围设备的一般功能</h4>\n<ul>\n<li>外围设备的定义：计算机系统中，除 CPU 和主存之外的部件都可看作外设；</li>\n<li>外围设备的功能：在计算机和其他机器或与用户之间提供联系。</li>\n<li>外围设备的基本组成：\n<ul>\n<li>存储介质：用于信息的保存；</li>\n<li>驱动装置：用于移动存储介质，使之正常工作；</li>\n<li>控制电路：用于使该外设与外界（如 CPU）的信息传递</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"外围设备的分类\"><a class=\"anchor\" href=\"#外围设备的分类\">#</a> 外围设备的分类</h4>\n<ul>\n<li>输入 / 出设备；</li>\n<li>外存设备；</li>\n<li>数据通信设备；</li>\n<li>过程控制设备；</li>\n</ul>\n<h3 id=\"磁盘存储设备\"><a class=\"anchor\" href=\"#磁盘存储设备\">#</a> 磁盘存储设备</h3>\n<h4 id=\"磁记录原理\"><a class=\"anchor\" href=\"#磁记录原理\">#</a> 磁记录原理</h4>\n<ul>\n<li>磁表面存储器：用磁性材料薄薄地涂在金属铝或塑料表面作载磁体来存储信息。</li>\n<li>磁表面存储器的优点：\n<ul>\n<li>存储容量大，位价格低；</li>\n<li>记录介质可以重复使用；</li>\n<li>记录信息可以长期保存而不丢失；</li>\n<li>非破坏性读出，读出时不需要再生信息。</li>\n</ul>\n</li>\n<li>磁表面存储器的缺点：\n<ul>\n<li>存取速度较慢，机械结构复杂；</li>\n<li>非接触式读写，对工作环境要求较高。</li>\n</ul>\n</li>\n<li>在磁表面存储器中，信息的读写是利用磁头来进行的；\n<ul>\n<li>磁头：由软磁材料做铁芯，绕有读写线圈的电磁铁。</li>\n</ul>\n</li>\n<li>写操作\n<ul>\n<li>原理：电 - 磁变换；</li>\n<li>利用磁头写线圈中的脉冲电流，在磁表面每个存储元上形成不同的磁化状态；</li>\n</ul>\n</li>\n<li>读操作\n<ul>\n<li>原理：磁 - 电变换；</li>\n<li>利用磁头读线圈，将磁表面每个存储元上的不同剩磁状态转换成电信号读出</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"磁盘的组成\"><a class=\"anchor\" href=\"#磁盘的组成\">#</a> 磁盘的组成</h4>\n<ul>\n<li>硬盘的逻辑结构组成\n<ul>\n<li>磁记录介质</li>\n<li>磁盘控制器</li>\n<li>磁盘驱动器</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"硬磁盘的分类\"><a class=\"anchor\" href=\"#硬磁盘的分类\">#</a> 硬磁盘的分类</h4>\n<ul>\n<li>按盘片结构分\n<ul>\n<li>可换盘片式</li>\n<li>固定盘片式</li>\n</ul>\n</li>\n<li>按磁头分\n<ul>\n<li>可移动磁头</li>\n<li>固定磁头</li>\n</ul>\n</li>\n<li>温彻斯特磁盘机\n<ul>\n<li>可移动磁头固定盘片的磁盘机；</li>\n<li>密封组合式的硬磁盘；磁头、盘片、电机等部件组装成一个不可随意拆卸的整体。</li>\n<li>工作时，高速旋转在盘面上形成的气垫将磁头平稳浮起。</li>\n<li>优点：防尘性能好，可靠性高，对使用环境要求不高。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"硬磁盘驱动器和控制器\"><a class=\"anchor\" href=\"#硬磁盘驱动器和控制器\">#</a> 硬磁盘驱动器和控制器</h4>\n<ul>\n<li>磁盘驱动器\n<ul>\n<li>定位驱动系统</li>\n<li>主轴系统</li>\n<li>数据转换系统</li>\n</ul>\n</li>\n<li>磁盘控制器：主机与磁盘驱动器之间的接口</li>\n</ul>\n<h4 id=\"磁盘上信息的分布\"><a class=\"anchor\" href=\"#磁盘上信息的分布\">#</a> 磁盘上信息的分布</h4>\n<ul>\n<li>记录面\n<ul>\n<li>磁盘片表面；</li>\n<li>一个盘片有上下两个记录面。</li>\n</ul>\n</li>\n<li>磁道\n<ul>\n<li>记录面上一系列同心圆；</li>\n<li>最外圈为 0 磁道 ，依次为 1、2、……、N 磁道；</li>\n<li>每个磁道的存储容量均相同；</li>\n<li>不同盘片的相同磁道构成一个柱面；</li>\n</ul>\n</li>\n<li>扇区\n<ul>\n<li>同心圆上的一段磁道区域；</li>\n<li>每个扇区的存储容量也相同。</li>\n</ul>\n</li>\n<li>一个硬盘由多个盘片构成的磁盘组来记录信息；\n<ul>\n<li>每个盘片包括两个记录面；</li>\n<li>每个记录面表面通常有几十到几百个磁道来记录信息；</li>\n<li>每个磁道又分为若干个扇区。</li>\n</ul>\n</li>\n<li>磁盘组的信息记录顺序是按照柱面来组织的：第 0 面第 0 道 -&gt; 第 1 面第 0 道 -&gt;……-&gt; 第 N 面第 0 道 -&gt; 第 0 面第 1 道 -&gt; 第 1 面第 1 道 -&gt;……-&gt; 第 N 面第 1 道 -&gt;……</li>\n<li>硬盘上信息地址由记录面号、磁道号、扇区号三个部分组成。</li>\n<li>索引 ：磁道的起始位置。为便于进行读 / 写操作</li>\n</ul>\n<h4 id=\"磁盘存储器的技术指标\"><a class=\"anchor\" href=\"#磁盘存储器的技术指标\">#</a> 磁盘存储器的技术指标</h4>\n<h5 id=\"存储密度\"><a class=\"anchor\" href=\"#存储密度\">#</a> 存储密度</h5>\n<ul>\n<li>道密度\n<ul>\n<li>沿磁盘半径方向单位长度上的磁道数；</li>\n<li>单位：道 / 英寸。</li>\n</ul>\n</li>\n<li>位密度\n<ul>\n<li>磁道单位长度上能记录的二进制代码位数；</li>\n<li>单位：位 / 英寸。</li>\n<li>注意：每个磁道的位密度均不相同，有最高、最低位密度。</li>\n<li>0 磁道的位密度为最低位密度；</li>\n</ul>\n</li>\n<li>面密度\n<ul>\n<li>位密度和道密度的乘积；</li>\n<li>单位：位 / 平方英寸。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"存储容量\"><a class=\"anchor\" href=\"#存储容量\">#</a> 存储容量</h5>\n<ul>\n<li>存储容量 = 记录面数 × 每面磁道数 × 磁道容量</li>\n<li>非格式化容量：磁记录表面可以利用的磁化单元总数。</li>\n<li>格式化容量\n<ul>\n<li>按照某种特定的记录格式所能存储信息的总量，也就是用户可以真正使用的容量。</li>\n<li>格式化容量一般是非格式化容量的 60%—70%。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"平均存取时间\"><a class=\"anchor\" href=\"#平均存取时间\">#</a> 平均存取时间</h5>\n<ul>\n<li>平均存取时间等于平均找道时间与平均等待时间之和；\n<ul>\n<li>定位时间（找道时间）：将磁头定位至所要求的磁道上所需的时间；</li>\n<li>等待时间：找道完成后，盘片将所要访问信息转到磁头下方的时间；</li>\n</ul>\n</li>\n<li>平均找道时间：最大与最小找道时间的平均值，约为 10~20ms；</li>\n<li>平均等待时间\n<ul>\n<li>与磁盘转速有关，是磁盘旋转一周时间的一半。</li>\n<li>硬盘转速为 7200 转 / 分，故平均等待时间约为 4ms。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"数据传输率\"><a class=\"anchor\" href=\"#数据传输率\">#</a> 数据传输率</h5>\n<ul>\n<li>数据传输率与存储设备和主机接口逻辑有关。</li>\n<li>设磁盘旋转速度为每秒 n 转，磁道容量为 N 个字节，数据传输率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>r</mi><mo>=</mo><mi>n</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">Dr= n × N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">Dr</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>（字节 / 秒）</li>\n<li>设某磁道位密度为 D 字节 / 英寸，磁盘转速为 v 英寸 / 秒，则数据传输率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>r</mi><mo>=</mo><mi>D</mi><mo>×</mo><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">Dr= D × v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">Dr</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span>（字节 / 秒）</li>\n</ul>\n<h3 id=\"光盘和磁光盘存储设备\"><a class=\"anchor\" href=\"#光盘和磁光盘存储设备\">#</a> 光盘和磁光盘存储设备</h3>\n<ul>\n<li>光盘存储器\n<ul>\n<li>采用聚焦激光束在盘式介质上非接触地记录高密度信息；</li>\n<li>以介质材料光学性质的变化来表示所存储信息的 “1” 或 “0”。</li>\n</ul>\n</li>\n<li>光盘存储器是以光道来记录信息的；光道是一条始于盘片中心的螺旋线。</li>\n<li>光盘的优点：存储容量大；</li>\n<li>光盘的缺点：存取时间长，数据传输率低。</li>\n</ul>\n<h3 id=\"显示设备\"><a class=\"anchor\" href=\"#显示设备\">#</a> 显示设备</h3>\n<h4 id=\"显示设备的分类\"><a class=\"anchor\" href=\"#显示设备的分类\">#</a> 显示设备的分类</h4>\n<ul>\n<li>按显示器件分类\n<ul>\n<li>阴极射线管 (CRT) 显示器</li>\n<li>液晶显示器 (LCD)</li>\n<li>等离子显示器等；</li>\n</ul>\n</li>\n<li>按显示的内容分类\n<ul>\n<li>字符显示器</li>\n<li>图形显示器</li>\n<li>图像显示器；</li>\n</ul>\n</li>\n<li>CRT 显示设备\n<ul>\n<li>以扫描方式不同，分成<strong>光栅扫描</strong>和<strong>随机扫描</strong>两种显示器；</li>\n<li>以分辨率不同 ，分成<strong>高分辨率显示器</strong>和<strong>低分辨率显示器</strong>；</li>\n<li>以显示的颜色分类，有<strong>单色 (黑白) 显示器</strong>和<strong>彩色显示器</strong>；</li>\n<li>以荧光屏对角线长度分类，有 14 英寸、16 英寸、19 英寸等多种。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"随机扫描和光栅扫描\"><a class=\"anchor\" href=\"#随机扫描和光栅扫描\">#</a> 随机扫描和光栅扫描</h4>\n<ul>\n<li>随机扫描\n<ul>\n<li>电子束只在需要做图的地方扫描，而不必扫描全屏幕；</li>\n<li>这种扫描方式画图速度快，图像清晰；</li>\n<li>高质量的图形显示器 (如分辨率为 4096×4096) 采用；</li>\n<li>其偏转系统与电视标准不一致，驱动系统较复杂，价格较贵。</li>\n</ul>\n</li>\n<li>光栅扫描\n<ul>\n<li>电子束从上至下顺序扫描整个屏幕；又可分为逐行扫描和隔行扫描两种方式；</li>\n<li>电视中采用的扫描方法；</li>\n<li>缺点是冗余时间多，分辨率不如随机扫描方式。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"分辨率\"><a class=\"anchor\" href=\"#分辨率\">#</a> 分辨率</h4>\n<ul>\n<li>分辨率是指显示器所能表示的像素个数；\n<ul>\n<li>像素是指组成图像的最小单位；</li>\n<li>像素越密，分辨率越高，图像显示越清晰；</li>\n</ul>\n</li>\n<li>CRT 显示器的分辨率取决于<strong>显象管荧光粉的粒度</strong>、<strong>荧光屏的尺寸</strong>和<strong> CRT 电子束的聚焦能力</strong>；</li>\n</ul>\n<h4 id=\"灰度级\"><a class=\"anchor\" href=\"#灰度级\">#</a> 灰度级</h4>\n<ul>\n<li>灰度级\n<ul>\n<li>在黑白显示器中所显示的像素点的亮暗差别；</li>\n<li>在彩色显示器中则表示为颜色的不同；</li>\n<li>灰度级越多，图像层次越清楚逼真；</li>\n</ul>\n</li>\n<li>灰度级取决于每个像素对应刷新存储器单元的位数和 CRT 本身的性能。</li>\n<li>只有两级灰度的显示器称为单色显示器。</li>\n<li>图像显示器的灰度级一般在 256 级以上。</li>\n</ul>\n<h4 id=\"刷新和刷新存储器\"><a class=\"anchor\" href=\"#刷新和刷新存储器\">#</a> 刷新和刷新存储器</h4>\n<ul>\n<li>刷新：CRT 显示器的电子束不断地重复扫描整个屏幕以稳定图像；</li>\n<li>刷新频率\n<ul>\n<li>显示器每秒能够对整个屏幕的刷新次数。</li>\n<li>一般设置刷新频率为 70Hz 以上；</li>\n<li>电视中的标准是每秒刷新 50Hz；</li>\n</ul>\n</li>\n<li>刷新存储器\n<ul>\n<li>存放图像信息用于刷新的存储器，也叫显示存储器；</li>\n<li>其存储容量由图像分辨率和灰度级决定；</li>\n<li>刷新存储器的存取周期必须满足刷新频率的要求。</li>\n<li>刷新存储器带宽 = 分辨率 × 颜色深度 × 刷新频率</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"显示适配器\"><a class=\"anchor\" href=\"#显示适配器\">#</a> 显示适配器</h4>\n<ul>\n<li>显示适配卡，也叫显卡\n<ul>\n<li>显示器与主机之间的接口电路；</li>\n<li>负责将主机发送的待显示的信号送给显示器。</li>\n</ul>\n</li>\n<li>显卡的主要构成部件\n<ul>\n<li>图形处理器 GPU：处理显示信息；</li>\n<li>显存：暂存显示芯片要处理的数据和处理完毕的数据；</li>\n<li>显卡 BIOS：存放显示芯片与驱动程序之间的控制程序；</li>\n<li>印刷电路板（PCB）</li>\n</ul>\n</li>\n<li>显卡不同标准：VGA、XGA、SVGA</li>\n</ul>\n<h4 id=\"输入设备和打印设备\"><a class=\"anchor\" href=\"#输入设备和打印设备\">#</a> 输入设备和打印设备</h4>\n<ul>\n<li>输入设备\n<ul>\n<li>图形输入设备：键盘、鼠标、图形板和游动标</li>\n<li>图像输入设备 ：数码照相机、数码摄像机、扫描仪</li>\n<li>语音输入设备 ：语音识别器</li>\n</ul>\n</li>\n<li>打印设备\n<ul>\n<li>针式打印机、喷墨打印机、激光打印机</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"输入输出系统\"><a class=\"anchor\" href=\"#输入输出系统\">#</a> 输入输出系统</h2>\n<h3 id=\"外围设备的速度分级与信息交换方式\"><a class=\"anchor\" href=\"#外围设备的速度分级与信息交换方式\">#</a> 外围设备的速度分级与信息交换方式</h3>\n<h4 id=\"输入输出系统的功能\"><a class=\"anchor\" href=\"#输入输出系统的功能\">#</a> 输入输出系统的功能</h4>\n<ul>\n<li>为了得到高效可靠的数据传输，选择输入输出设备。</li>\n<li>在选定的输入输出设备和 CPU 之间进行数据交换。</li>\n</ul>\n<h4 id=\"输入输出设备和cpu交换数据的过程\"><a class=\"anchor\" href=\"#输入输出设备和cpu交换数据的过程\">#</a> 输入输出设备和 CPU 交换数据的过程</h4>\n<ul>\n<li>输入过程：\n<ul>\n<li>CPU 把一个地址值放在地址总线上，这一步将选择一个输入设备</li>\n<li>CPU 等候输入设备的数据成为有效</li>\n<li>CPU 从数据总线上读入数据，并放在一个相应的寄存器中</li>\n</ul>\n</li>\n<li>输出过程：\n<ul>\n<li>CPU 把一个地址值放在地址总线上，这一步将选择一个输出设备</li>\n<li>CPU 把数据放在数据总线上</li>\n<li>输出设备认为数据有效，从而把数据取走</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"cpu和外围设备的定时\"><a class=\"anchor\" href=\"#cpu和外围设备的定时\">#</a> CPU 和外围设备的定时</h4>\n<ul>\n<li>速度极慢或简单的外围设备：对于这类设备 CPU 总是能足够快地作出响应，也可以说，CPU 认为输入的数据一直有效，在这种情况下，CPU 只要接受和发送数据就可以了。常用的有：机械开关，显示二极管等。</li>\n<li>慢速或中速的外围设备：CPU 与这类设备之间的数据交换通常采用异步定时方式。在这种情况下，CPU 和外设之间用问答信号进行定时的方式叫做应答式数据交换。</li>\n<li>高速外围设备：CPU 和这类设备之间通常采用同步定时方式，一旦 CPU 和外设发生同步，他们之间的数据交换用时钟控制来进行。\n<ul>\n<li>同步定时方式：CPU 以等间隔的速率执行 I/O 指令。靠时钟脉冲控制进行。</li>\n<li>DMA 方式</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"cpu对外围设备的管理方式\"><a class=\"anchor\" href=\"#cpu对外围设备的管理方式\">#</a> CPU 对外围设备的管理方式</h4>\n<ul>\n<li>程序查询方式</li>\n<li>程序中断方式</li>\n</ul>\n<h3 id=\"程序查询方式\"><a class=\"anchor\" href=\"#程序查询方式\">#</a> 程序查询方式</h3>\n<h4 id=\"外设状态\"><a class=\"anchor\" href=\"#外设状态\">#</a> 外设状态</h4>\n<ul>\n<li>在接口中设置状态字表示这些状态。</li>\n<li>空闲：调用前，设备不工作；</li>\n<li>结束：调用后，设备完成工作。</li>\n</ul>\n<h4 id=\"优缺点\"><a class=\"anchor\" href=\"#优缺点\">#</a> 优缺点</h4>\n<ul>\n<li>优点：硬件开销小；</li>\n<li>缺点：实时处理能力差，并行程度低。</li>\n</ul>\n<h4 id=\"应用场合\"><a class=\"anchor\" href=\"#应用场合\">#</a> 应用场合</h4>\n<ul>\n<li>对 CPU 效率要求不高的场合，或诊断调试过程。</li>\n</ul>\n<h3 id=\"程序中断方式\"><a class=\"anchor\" href=\"#程序中断方式\">#</a> 程序中断方式</h3>\n<h4 id=\"中断基本概念\"><a class=\"anchor\" href=\"#中断基本概念\">#</a> 中断基本概念</h4>\n<h5 id=\"定义\"><a class=\"anchor\" href=\"#定义\">#</a> 定义</h5>\n<ul>\n<li>CPU 暂时中止现行程序的执行，转去执行为某个随机事态服务的中断处理程序。处理完毕后自动恢复原程序的执行。</li>\n</ul>\n<h5 id=\"实质与特点\"><a class=\"anchor\" href=\"#实质与特点\">#</a> 实质与特点</h5>\n<ul>\n<li>实质：程序切换\n<ul>\n<li>方法：保存断点，保护现场；恢复现场，返回断点</li>\n<li>时间：一条指令结束时切换。保证程序的完整性。</li>\n</ul>\n</li>\n<li>特点：随机性</li>\n</ul>\n<h5 id=\"中断分类\"><a class=\"anchor\" href=\"#中断分类\">#</a> 中断分类</h5>\n<ul>\n<li>硬件中断与软中断</li>\n<li>内中断与外中断</li>\n<li>可屏蔽中断与非屏蔽中断</li>\n<li>向量中断与非向量中断</li>\n</ul>\n<h5 id=\"中断系统的组成\"><a class=\"anchor\" href=\"#中断系统的组成\">#</a> 中断系统的组成</h5>\n<ul>\n<li>软件：服务程序、中断向量表</li>\n<li>硬件：\n<ul>\n<li>接口方面：请求、传递、判优逻辑</li>\n<li>CPU 方面：响应逻辑</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"工作原理\"><a class=\"anchor\" href=\"#工作原理\">#</a> 工作原理</h5>\n<ul>\n<li>采用中断的方式可以使 CPU 和外围设备在一些操作上并行工作，来提高 CPU 效率。但是中断方式的操作复杂，并需要硬件支持。</li>\n</ul>\n<h5 id=\"在中断处理过程中需要注意的\"><a class=\"anchor\" href=\"#在中断处理过程中需要注意的\">#</a> 在中断处理过程中需要注意的</h5>\n<ul>\n<li>CPU 只有在当前一条指令执行完毕后，才能响应中断，</li>\n<li>中断时的现场保存和返回时的现场恢复</li>\n<li>“中断屏蔽” 触发器 <code>IM</code> ：0 允许中断，1 不接受中断</li>\n<li>中断处理过程由硬件和软件协作完成；中断周期和服务程序</li>\n</ul>\n<h4 id=\"中断全过程外中断\"><a class=\"anchor\" href=\"#中断全过程外中断\">#</a> 中断全过程（外中断）</h4>\n<h5 id=\"中断请求的提出与传递\"><a class=\"anchor\" href=\"#中断请求的提出与传递\">#</a> 中断请求的提出与传递</h5>\n<h6 id=\"如何产生中断请求\"><a class=\"anchor\" href=\"#如何产生中断请求\">#</a> 如何产生中断请求</h6>\n<ul>\n<li>外设工作完成：“完成” 标志为 1</li>\n<li>CPU 允许请求：“屏蔽” 标志为 0</li>\n</ul>\n<h6 id=\"如何传送中断请求\"><a class=\"anchor\" href=\"#如何传送中断请求\">#</a> 如何传送中断请求</h6>\n<ul>\n<li>使用单独请求线</li>\n<li>使用公共请求线</li>\n</ul>\n<h5 id=\"中断判优\"><a class=\"anchor\" href=\"#中断判优\">#</a> 中断判优</h5>\n<h6 id=\"优先顺序\"><a class=\"anchor\" href=\"#优先顺序\">#</a> 优先顺序</h6>\n<ul>\n<li>故障、DMA、外中断</li>\n</ul>\n<h6 id=\"cpu现行程序与外设请求的判优\"><a class=\"anchor\" href=\"#cpu现行程序与外设请求的判优\">#</a> CPU 现行程序与外设请求的判优</h6>\n<ul>\n<li>CPU 设置允许中断标志\n<ul>\n<li>1，开中断</li>\n<li>0，关中断</li>\n</ul>\n</li>\n<li>CPU 设置程序状态字的优先级字段\n<ul>\n<li>＜外设请求优先级，响应</li>\n<li>≥外设请求优先级，不响应</li>\n</ul>\n</li>\n<li>各外设请求的判优\n<ul>\n<li>软件判优：由程序查询顺序确定优先级。可灵活修改优先级。</li>\n<li>硬件判优</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"中断响应\"><a class=\"anchor\" href=\"#中断响应\">#</a> 中断响应</h5>\n<h6 id=\"响应条件\"><a class=\"anchor\" href=\"#响应条件\">#</a> 响应条件</h6>\n<ul>\n<li>外设有请求，且未被屏蔽；</li>\n<li>CPU 开中断；</li>\n<li>一条指令 (非停机指令) 结束；</li>\n<li>无故障、DMA 等优先级更高的请求</li>\n</ul>\n<h6 id=\"如何获取中断服务程序的入口地址\"><a class=\"anchor\" href=\"#如何获取中断服务程序的入口地址\">#</a> 如何获取中断服务程序的入口地址</h6>\n<ul>\n<li>非向量中断：将服务程序入口组织在查询程序中；CPU 响应时执行查询程序，查询中断源，转入相应服务程序。</li>\n<li>向量中断：将服务程序入口 (中断向量) 组织在中断向量表中；CPU 响应时由硬件直接产生相应向量地址，按地址查表，取得服务程序入口，转入相应服务程序。\n<ul>\n<li>中断向量：服务程序入口地址、服务程序状态字</li>\n<li>中断向量表：存放中断向量的表（一段存储区）</li>\n<li>向量地址：访问向量表的地址（指向中断向量的首址）</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"响应过程\"><a class=\"anchor\" href=\"#响应过程\">#</a> 响应过程</h6>\n<ol>\n<li>发响应信号 INTA，进入中断周期</li>\n<li>关中断，保存断点</li>\n<li>获得中断号，转换为向量地址，查向量表</li>\n<li>取中断向量，转中断服务程序</li>\n</ol>\n<h5 id=\"中断处理\"><a class=\"anchor\" href=\"#中断处理\">#</a> 中断处理</h5>\n<ul>\n<li>单级中断：CPU 响应后只处理一个中断源的请求，处理完毕后才能响应新的请求。</li>\n<li>多重中断：在某次中断服务过程中，允许响应处理更高级别的中断请求。</li>\n</ul>\n<h5 id=\"程序中断方式的标志触发器\"><a class=\"anchor\" href=\"#程序中断方式的标志触发器\">#</a> 程序中断方式的标志触发器</h5>\n<ul>\n<li>准备就绪的标志（ <code>RD</code> ）：一旦设备做好一次数据的接收或发送工作，便发出一个设备动作完毕信号，使 <code>RD</code>  标志为 “1”，它就是程序查询方式中的 Ready（就绪）标志。在中断方式中，该标志用作为中断源触发器，简称中断触发器。</li>\n<li>允许中断触发器（ <code>EI</code> ）：可以用程序指令来置位。 <code>EI</code>  为 “1” 时，某设备可以向 CPU 发出中断请求； <code>EI</code>  为 “0” 时，不能向 CPU 发出中断请求，这意味着某中断的中断请求被禁止。设置 <code>EI</code>  标志的目的就是通过程序来控制是否允许某设备发出中断请求。</li>\n<li>中断请求触发器（ <code>IR</code> ）它暂存中断请求线上由设备发出的中断请求，当 <code>IR</code>  标志为 “1” 时，表示设备发出了中断请求。</li>\n<li>中断屏蔽触发器（ <code>IM</code> ）CPU 是否受理中断的标志。 <code>IM</code>  标志为 “0” 时，CPU 可以受理外界的中断请求，反之， <code>IM</code>  标志为 “1” 时，CPU 不受理外界的中断请求。</li>\n</ul>\n<h3 id=\"dma方式\"><a class=\"anchor\" href=\"#dma方式\">#</a> DMA 方式</h3>\n<h4 id=\"dma的基本概念\"><a class=\"anchor\" href=\"#dma的基本概念\">#</a> DMA 的基本概念</h4>\n<h5 id=\"定义-2\"><a class=\"anchor\" href=\"#定义-2\">#</a> 定义</h5>\n<ul>\n<li>直接依靠硬件实现主存与 I/O 间的数据传送，传送期间不需 CPU 程序干预</li>\n<li>I/O 与主存，而不是 I/O 与 CPU。</li>\n<li>早期由 CPU 控制传送；现在由 DMA 控制器控制传送，DMA 控制器接管总线权，传送完毕再交还总线权。</li>\n<li>传送期间只要 CPU 不访存，可并行操作</li>\n<li>传送前和传送后需要程序干预。</li>\n</ul>\n<h5 id=\"dma流程\"><a class=\"anchor\" href=\"#dma流程\">#</a> DMA 流程</h5>\n<ul>\n<li>程序准备：主程序实现初始化。</li>\n<li>DMA 传送：硬件实现 M<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>↔</mo></mrow><annotation encoding=\"application/x-tex\">\\leftrightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">↔</span></span></span></span>I/O 的数据传送。</li>\n<li>善后处理：中断处理程序判断传送的正误。</li>\n</ul>\n<h5 id=\"应用场合-2\"><a class=\"anchor\" href=\"#应用场合-2\">#</a> 应用场合</h5>\n<ul>\n<li>用于高速、简单、批量数据传送</li>\n</ul>\n<h4 id=\"dma传送方式\"><a class=\"anchor\" href=\"#dma传送方式\">#</a> DMA 传送方式</h4>\n<h5 id=\"停止cpu访问内存\"><a class=\"anchor\" href=\"#停止cpu访问内存\">#</a> 停止 CPU 访问内存</h5>\n<ul>\n<li>优点：控制简单，它适用于数据传输率很高的设备进行成组传送。</li>\n<li>缺点：在 DMA 控制器访内阶段，内存的效能没有充分发挥。</li>\n</ul>\n<h5 id=\"周期挪用方式\"><a class=\"anchor\" href=\"#周期挪用方式\">#</a> 周期挪用方式</h5>\n<ul>\n<li>I/O 有 DMA 请求时，由 DMA 控制器挪用一个或几个主存周期来完成数据的传输，即在 CPU 指令周期中插入了 DMA 操作，有冲突时 DMA 优先。（用于 I/O 设备读写周期大于内存存储周期的情况）</li>\n</ul>\n<h5 id=\"cpu与dma交替访问存储器\"><a class=\"anchor\" href=\"#cpu与dma交替访问存储器\">#</a> CPU 与 DMA 交替访问存储器</h5>\n<ul>\n<li>将一个 CPU 周期分为两个分周期，由 CPU 与 DMA 控制器轮流使用总线，也称为透明的 DMA 方式（硬件逻辑复杂）</li>\n</ul>\n<h4 id=\"基本的dma控制器\"><a class=\"anchor\" href=\"#基本的dma控制器\">#</a> 基本的 DMA 控制器</h4>\n<h5 id=\"dma控制器的基本组成\"><a class=\"anchor\" href=\"#dma控制器的基本组成\">#</a> DMA 控制器的基本组成</h5>\n<ul>\n<li>内存地址计数器：用于存放内存中要交换的数据地址。在 DMA 工作前由程序设定，每传输一次地址自动加 “1”</li>\n<li>字计数器：用于记录传送数据块的长度，通常用补码表示，在 DMA 工作前由程序设定，每传输一次字计数器自动加 “1”，当计数器溢出时，表示传送完毕，向 CPU 发出中断</li>\n<li>数据缓冲寄存器：用于暂存每次传送的数据</li>\n<li>DMA 请求标志：每当设备准备好一次传输时发出的一个控制信号，使 DMA 请求标志位置 “1”，向 “控制 / 状态” 逻辑发出 DMA 请求，“控制 / 状态” 逻辑向 CPU 发出总线使用权的请求 HOLD；CPU 响应该请求时，发回响应信号 HLDA， “控制 / 状态” 逻辑接收到此信号后发出 DMA 响应信号，使 DMA 请求标志复位，为交换下一个字作好准备。</li>\n<li>“控制 / 状态” 逻辑：由控制和时序电路以及状态标志组成。用于修改内存地址计数器和字计数器，指定传送类型，并对 DMA 请求信号和 CPU 响应信号进行协调和同步。</li>\n<li>中断机构：当字计数器溢出时，一组数据交换完毕，由溢出信号发出中断申请。</li>\n</ul>\n<h5 id=\"dma数据传送过程\"><a class=\"anchor\" href=\"#dma数据传送过程\">#</a> DMA 数据传送过程</h5>\n<ul>\n<li>可分为三阶段：传送前预处理、正式传送和传送后处理</li>\n<li>传送前预处理：执行几条 I/O 指令，完成设备状态测试、初始化地址计数器和字计数器，CPU 返回原来的主程序继续执行</li>\n<li>当外设准备好时，发送 DMA 请求，由 DMA 控制器向 CPU 发出总线使用权的请求 HOLD。CPU 接受请求，根据不同的传递方式实现以数据块为单位的数据传输。</li>\n<li>DMA 传送后处理进行的工作：结束时，DMA 发送中断请求，CPU 处理中断服务程序，处理 DMA 结束需要处理的工作 —— 校验送入内存的数据是否正确、决定是否继续进行 DMA 传送、测试在传送过程中是否发生了错误。</li>\n<li>基本 DMA 控制器与系统的连接方式有两种方式：一种是公用的 DMA 请求方式，另一种是独立的 DMA 请求方式。</li>\n</ul>\n<h4 id=\"选择型和多路型dma控制器\"><a class=\"anchor\" href=\"#选择型和多路型dma控制器\">#</a> 选择型和多路型 DMA 控制器</h4>\n<ul>\n<li>选择型 DMA 控制器：物理上可以连接多个设备，逻辑上只允许连接一个设备，即某一段时间内只能为一个设备服务。</li>\n<li>多路型 DMA 控制器：允许各设备以字节为单位交叉传送，或以数据块为单位成组传送。</li>\n</ul>\n<h4 id=\"比较\"><a class=\"anchor\" href=\"#比较\">#</a> 比较</h4>\n<h5 id=\"dma与中断的相同点\"><a class=\"anchor\" href=\"#dma与中断的相同点\">#</a> DMA 与中断的相同点</h5>\n<ul>\n<li>能响应随机请求；可并行操作</li>\n</ul>\n<h5 id=\"dma与中断的不同点\"><a class=\"anchor\" href=\"#dma与中断的不同点\">#</a> DMA 与中断的不同点</h5>\n<ul>\n<li>中断：用程序实现中、低速 I/O 传送；能处理复杂事态；一条指令结束时响应请求。</li>\n<li>DMA：用硬件实现高速、简单 I/O 传送；一个总线周期结束响应请求。</li>\n</ul>\n<h3 id=\"通道方式\"><a class=\"anchor\" href=\"#通道方式\">#</a> 通道方式</h3>\n<h4 id=\"通道的基本概念\"><a class=\"anchor\" href=\"#通道的基本概念\">#</a> 通道的基本概念</h4>\n<ul>\n<li>通道是一个特殊功能的处理器，它有自己的指令和程序专门负责数据输入输出的传输控制，而 CPU 将 “传输控制” 的功能下放给通道后只负责 “数据处理” 功能。</li>\n<li>通道处理机虽然不是一台具有完整指令系统的处理机，但是可以把它看作是一台能够执行有限输入输出指令，并且能够被多台外围设备共享的小型 DMA 专用处理机。</li>\n</ul>\n<h4 id=\"通道的类型\"><a class=\"anchor\" href=\"#通道的类型\">#</a> 通道的类型</h4>\n<ul>\n<li>字节多路通道\n<ul>\n<li>用于多台低速或中速的外围设备</li>\n<li>采用分时方式工作</li>\n</ul>\n</li>\n<li>选择通道\n<ul>\n<li>用于高速外围设备</li>\n<li>工作方式：一旦选中某一设备，通道就进入 “忙” 状态，直到该设备的数据传输工作全部结束为止。</li>\n</ul>\n</li>\n<li>数组多路通道\n<ul>\n<li>字节多路通道和选择通道的结合</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"通道的功能\"><a class=\"anchor\" href=\"#通道的功能\">#</a> 通道的功能</h4>\n<ul>\n<li>接受 CPU 的指令。</li>\n<li>读取并执行通道程序。</li>\n<li>控制数据传送。</li>\n<li>读取外设的状态信息，提供给 CPU。</li>\n<li>发出中断请求。</li>\n</ul>\n<h4 id=\"外围处理机方式\"><a class=\"anchor\" href=\"#外围处理机方式\">#</a> 外围处理机方式</h4>\n<ul>\n<li>外围处理机是通道的进一步发展，其独立于主机工作，结构更接近一般的处理机（PC）。</li>\n<li>外围处理机分担中央处理机的输入输出任务，又称输入输出处理机、I／O 处理机等，缩写为 IOP 或 PPU。</li>\n<li>外围处理机主要用在除 IBM 公司以外的其他计算机公司研制的巨型、大型计算机系统中，甚至在有些中小型及微型计算机系统中也有输入输出处理机。</li>\n</ul>\n<h4 id=\"产生iop的原因\"><a class=\"anchor\" href=\"#产生iop的原因\">#</a> 产生 IOP 的原因</h4>\n<ul>\n<li>通道处理机实际上并不能看成是独立的处理机，因为它的指令 (通道指令) 系统很简单，只有面向外围设备的控制和数据传送的基本指令，而且没有大容量的存储器。在数据的输入输出过程中，通道处理机还需要由 CPU 来承担许多工作。</li>\n</ul>\n",
            "tags": [
                "computer science",
                "learning"
            ]
        }
    ]
}