{"name":"data structure","slug":"data-structure","count":13,"postlist":[{"title":"数据结构理论复习","uid":"325341d7aca4ae9e9137504312678fc9","slug":"325341d7aca4ae9e9137504312678fc9","date":"2023-07-04T08:14:30.000Z","updated":"2024-03-17T09:32:19.255Z","comments":true,"path":"api/articles/325341d7aca4ae9e9137504312678fc9.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":" 绪论数据结构的定义 数据是描述客观事物的数、字符以及所有能输入到计算机中并被计算机程序处理的符号的集合。 数据元素是数据的基本单位（例如，A班中的每个学生记录...","permalink":"/post/325341d7aca4ae9e9137504312678fc9","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构函数复习","uid":"4f12ac090a36ba71bea43af761b2b20a","slug":"4f12ac090a36ba71bea43af761b2b20a","date":"2023-07-02T13:55:06.000Z","updated":"2024-03-17T09:35:26.516Z","comments":true,"path":"api/articles/4f12ac090a36ba71bea43af761b2b20a.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"cpp#define INF 0x3f3f3f const int MAXN = 1000; /** * 欧拉函数 * @param n 一个整数 * @ret...","permalink":"/post/4f12ac090a36ba71bea43af761b2b20a","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"哈夫曼树叶子结点的路径长度与权值的乘积之和","uid":"5a1621912b73a3abad1cd8da411425b8","slug":"5a1621912b73a3abad1cd8da411425b8","date":"2023-06-28T08:15:04.000Z","updated":"2024-03-17T05:28:55.230Z","comments":true,"path":"api/articles/5a1621912b73a3abad1cd8da411425b8.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"题目描述哈夫曼树，第一行输入一个数n，表示叶结点的个数。需要用这些叶结点生成哈夫曼树，根据哈夫曼树的概念，这些结点有权值，即weight，题目需要输出所有叶子结...","permalink":"/post/5a1621912b73a3abad1cd8da411425b8","photos":[],"count_time":{"symbolsCount":904,"symbolsTime":"1 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"tree","slug":"tree","count":2,"path":"api/tags/tree.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"二叉搜索树 Binary Search Tree","uid":"0a6a591ef679e7bf2b14c8c862c44648","slug":"0a6a591ef679e7bf2b14c8c862c44648","date":"2023-06-27T06:47:09.000Z","updated":"2024-03-17T05:29:20.053Z","comments":true,"path":"api/articles/0a6a591ef679e7bf2b14c8c862c44648.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"二叉搜索树 Binary Search Tree定义二叉搜索树（二叉排序树或二叉查找树）： 或者是一棵空树； 或者是具有如下特性的二叉树 若它的左子树不空，则左...","permalink":"/post/0a6a591ef679e7bf2b14c8c862c44648","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"拓扑排序 Topological Sort","uid":"92091d0d673d2f304a54eaf158ea4630","slug":"92091d0d673d2f304a54eaf158ea4630","date":"2023-06-25T06:31:20.000Z","updated":"2024-03-17T05:30:05.842Z","comments":true,"path":"api/articles/92091d0d673d2f304a54eaf158ea4630.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"拓扑排序 Topological Sort拓扑序列 Topological Order拓扑序列是一个有向无环图（Directed Acyclic Graph，简...","permalink":"/post/92091d0d673d2f304a54eaf158ea4630","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"最短路径 Shortest Path","uid":"ea135958f52dc15115556a781c9e36cf","slug":"ea135958f52dc15115556a781c9e36cf","date":"2023-06-24T02:56:20.000Z","updated":"2024-03-17T05:29:57.892Z","comments":true,"path":"api/articles/ea135958f52dc15115556a781c9e36cf.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"最短路径 Shortest Path加权有向图中每条路径都有值，其值是该路径上所有边的权值之和。最短路径 （Shortest Path）问题就是指求出两个给定顶...","permalink":"/post/ea135958f52dc15115556a781c9e36cf","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"最小生成树 Minimum Spanning Tree","uid":"3bb7227ed966054de259b7b7501c2568","slug":"3bb7227ed966054de259b7b7501c2568","date":"2023-06-23T08:05:39.000Z","updated":"2024-03-17T05:29:47.010Z","comments":true,"path":"api/articles/3bb7227ed966054de259b7b7501c2568.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"最小生成树 Minimum Spanning Tree加权无向图的最小生成树（Minimum Spanning Tree，简称MST）是一棵生成树，其权（所有边...","permalink":"/post/3bb7227ed966054de259b7b7501c2568","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"机器人王国里的路径长度","uid":"3be01ecc0602fc98eccd555eb652a0f4","slug":"3be01ecc0602fc98eccd555eb652a0f4","date":"2023-06-20T13:09:12.000Z","updated":"2024-03-17T05:29:53.051Z","comments":true,"path":"api/articles/3be01ecc0602fc98eccd555eb652a0f4.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"题目描述在一个机器人王国里，围绕首都分N层构建卫星城市。以首都为圆心，以路相连分出两个卫星城在第一个层，然后每个卫星城又有路相连分出两个卫星城在下一层，但每条路...","permalink":"/post/3be01ecc0602fc98eccd555eb652a0f4","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"tree","slug":"tree","count":2,"path":"api/tags/tree.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构题目02","uid":"447e8e440ec7ad6ce34c5cc0753cdacd","slug":"447e8e440ec7ad6ce34c5cc0753cdacd","date":"2023-06-06T13:23:35.000Z","updated":"2024-03-17T05:29:31.369Z","comments":true,"path":"api/articles/447e8e440ec7ad6ce34c5cc0753cdacd.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"1题目描述给你若干个字符串，请编程输出每个字符串的子串个数。 输入若干个字符串，每个字符串占一行，字符串中不含空格，长度最大为1000。 输出对应每一行的字符串...","permalink":"/post/447e8e440ec7ad6ce34c5cc0753cdacd","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构题目01","uid":"6a87345b9e9d401bf5be8abeba39da4e","slug":"6a87345b9e9d401bf5be8abeba39da4e","date":"2023-05-31T08:37:34.000Z","updated":"2024-03-17T05:29:28.487Z","comments":true,"path":"api/articles/6a87345b9e9d401bf5be8abeba39da4e.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"1题目描述新年快到了，天勤准备搞一个聚会，已经知道现有会员N人，把会员从1到N编号，其中会长的号码是N号，凡是和会长是老朋友的，那么该会员的号码肯定和N有大于1...","permalink":"/post/6a87345b9e9d401bf5be8abeba39da4e","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"栈与队列","uid":"333795d348e8e56df1fa020b8443f458","slug":"333795d348e8e56df1fa020b8443f458","date":"2023-05-30T02:25:48.000Z","updated":"2024-03-17T05:30:00.801Z","comments":true,"path":"api/articles/333795d348e8e56df1fa020b8443f458.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":" 栈和队列可以说是最基本的数据结构了，它们都是在两端进行操作，其中栈在栈顶进行操作，被称为先进后出（LIFO），队列在队头和队尾进行操作，被称为先进先出（FIF...","permalink":"/post/333795d348e8e56df1fa020b8443f458","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"Algorithms, Part I","slug":"Algorithms-Part-I","count":2,"path":"api/categories/Algorithms-Part-I.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"},{"name":"coursera","slug":"coursera","count":2,"path":"api/tags/coursera.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"c18469ab20e7b093d36b4a61728d07eb","date":"2023-05-21T10:02:45.000Z","updated":"2024-03-17T05:30:08.470Z","comments":true,"path":"api/articles/c18469ab20e7b093d36b4a61728d07eb.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":" 本文来自Coursera的Algorithms, Part I课程 动态连通性我们假设“相连”是一种等价关系，这也就意味 着它具有： 自反性：p 和 p 是相...","permalink":"/post/c18469ab20e7b093d36b4a61728d07eb","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Algorithms, Part I","slug":"Algorithms-Part-I","count":2,"path":"api/categories/Algorithms-Part-I.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"},{"name":"coursera","slug":"coursera","count":2,"path":"api/tags/coursera.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据结构之线性表","uid":"9a4a3c848f25d7dc5b1593149d8fc72a","slug":"9a4a3c848f25d7dc5b1593149d8fc72a","date":"2023-05-17T07:35:23.000Z","updated":"2024-03-17T05:29:42.539Z","comments":true,"path":"api/articles/9a4a3c848f25d7dc5b1593149d8fc72a.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":" 这是一系列关于数据结构的笔记博客，为了练习自己的代码能力，咱将尽可能不使用C++来实现这些数据结构 线性表的简单介绍 线性表是具有相同特性的数据元素的一个有限...","permalink":"/post/9a4a3c848f25d7dc5b1593149d8fc72a","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}