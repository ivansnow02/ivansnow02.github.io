{"title":"数据结构之线性表","uid":"9a4a3c848f25d7dc5b1593149d8fc72a","slug":"List","date":"2023-05-17T07:35:23.000Z","updated":"2024-03-17T05:29:42.539Z","comments":true,"path":"api/articles/List.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这是一系列关于数据结构的笔记博客，为了练习自己的代码能力，咱将尽可能不使用C++来实现这些数据结构</p></blockquote>\n<h2 id=\"线性表的简单介绍\"><a class=\"markdownIt-Anchor\" href=\"#线性表的简单介绍\"></a> 线性表的简单介绍</h2>\n<ul>\n<li>线性表是具有相同特性的数据元素的一个有限序列。</li>\n<li>所有数据元素类型相同。</li>\n<li>线性表是有限个数据元素构成的。</li>\n<li>线性表中数据元素与位置相关，即每个数据元素有唯一的序号。</li>\n</ul>\n<p>咱们的线性表需要如下的方法：</p>\n<figure class=\"shiki txt\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #abb2bf\">createList(a[])：由整数数组a中的全部元素建立线性表的相应存储结构。</span></span>\n<span class=\"line\"><span style=\"color: #abb2bf\">add(e)：将元素e添加到线性表末尾。</span></span>\n<span class=\"line\"><span style=\"color: #abb2bf\">getLength()：求线性表的长度。</span></span>\n<span class=\"line\"><span style=\"color: #abb2bf\">getElem(i)：求线性表中序号为i的元素。</span></span>\n<span class=\"line\"><span style=\"color: #abb2bf\">setElem(i, e)：设置线性表中序号i的元素值为e。</span></span>\n<span class=\"line\"><span style=\"color: #abb2bf\">getNo(e)：求线性表中第一个值为e的元素的序号。</span></span>\n<span class=\"line\"><span style=\"color: #abb2bf\">insert(i, e)：在线性表中插入数据元素e作为第i个元素。</span></span>\n<span class=\"line\"><span style=\"color: #abb2bf\">delete(i)：在线性表中删除第i个数据元素。</span></span>\n<span class=\"line\"><span style=\"color: #abb2bf\">dispList()：输出线性表的所有元素。</span></span></code></pre></div></div></figure>\n<h2 id=\"顺序表\"><a class=\"markdownIt-Anchor\" href=\"#顺序表\"></a> 顺序表</h2>\n<p>顺序表是线性表中的顺序存储结构，通常是一段连续的空间。</p>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">initCap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">5</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">type</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">SqList</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">struct</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\tdata []</span><span style=\"color: #C678DD\">int</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\tcapacity </span><span style=\"color: #C678DD\">int</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\tlength </span><span style=\"color: #C678DD\">int</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h3 id=\"方法\"><a class=\"markdownIt-Anchor\" href=\"#方法\"></a> 方法</h3>\n<h4 id=\"构造函数伪\"><a class=\"markdownIt-Anchor\" href=\"#构造函数伪\"></a> 构造函数(伪)</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">NewSqList</span><span style=\"color: #ABB2BF\">() SqList {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> SqList{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        data:     </span><span style=\"color: #56B6C2\">make</span><span style=\"color: #ABB2BF\">([]</span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}, initCap),</span><span style=\"color: #7F848E\">//用切片将就着吧</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        capacity: initCap,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        Length:   </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"重新调整容量\"><a class=\"markdownIt-Anchor\" href=\"#重新调整容量\"></a> 重新调整容量</h4>\n<p><s>其实是多此一举</s></p>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (list </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">SqList) </span><span style=\"color: #61AFEF; font-weight: bold\">reCap</span><span style=\"color: #ABB2BF\">(newCap </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> newCap </span><span style=\"color: #56B6C2\">&lt;=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">list.capacity</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> newCap</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">var</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">newData</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">make</span><span style=\"color: #ABB2BF\">([]</span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}, newCap)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">i</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> list.Length; i</span><span style=\"color: #56B6C2\">++</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        newData[i] </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> list.data[i]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">list.data</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> newData</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"建表\"><a class=\"markdownIt-Anchor\" href=\"#建表\"></a> 建表</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (list </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">SqList) </span><span style=\"color: #61AFEF; font-weight: bold\">CreateList</span><span style=\"color: #ABB2BF\">(a []</span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}, n </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">i</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> n; i</span><span style=\"color: #56B6C2\">++</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> list.Length </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> list.capacity {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            list.</span><span style=\"color: #56B6C2\">reCap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\"> list.Length)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        list.data[list.Length] </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> a[i]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        list.Length</span><span style=\"color: #56B6C2\">++</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"添加元素\"><a class=\"markdownIt-Anchor\" href=\"#添加元素\"></a> 添加元素</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (list </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">SqList) </span><span style=\"color: #61AFEF; font-weight: bold\">Add</span><span style=\"color: #ABB2BF\">(e </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> list.Length </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> list.capacity {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        list.</span><span style=\"color: #56B6C2\">reCap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\"> list.Length)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    list.data[list.Length] </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> e</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    list.Length</span><span style=\"color: #56B6C2\">++</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"修改元素\"><a class=\"markdownIt-Anchor\" href=\"#修改元素\"></a> 修改元素</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (list </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">SqList) </span><span style=\"color: #61AFEF; font-weight: bold\">SetElem</span><span style=\"color: #ABB2BF\">(i </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">, e </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}) </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&lt;=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">||</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&gt;=</span><span style=\"color: #ABB2BF\"> list.Length {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    list.data[i] </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> e</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"查找\"><a class=\"markdownIt-Anchor\" href=\"#查找\"></a> 查找</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (list </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">SqList) </span><span style=\"color: #61AFEF; font-weight: bold\">GetNo</span><span style=\"color: #ABB2BF\">(e </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}) </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">i</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> list.Length; i</span><span style=\"color: #56B6C2\">++</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> list.data[i] </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> e {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> i</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">-</span><span style=\"color: #D19A66\">1</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"插入\"><a class=\"markdownIt-Anchor\" href=\"#插入\"></a> 插入</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (list </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">SqList) </span><span style=\"color: #61AFEF; font-weight: bold\">Insert</span><span style=\"color: #ABB2BF\">(i </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">, e </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}) </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&lt;=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">||</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&gt;=</span><span style=\"color: #ABB2BF\"> list.Length {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> list.Length </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> list.capacity {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        list.</span><span style=\"color: #56B6C2\">reCap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\"> list.Length)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">j</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> list.Length; j </span><span style=\"color: #56B6C2\">&gt;</span><span style=\"color: #ABB2BF\"> i; j</span><span style=\"color: #56B6C2\">--</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        list.data[j] </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> list.data[j</span><span style=\"color: #C678DD\">-</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    list.data[i] </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> e</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    list.Length</span><span style=\"color: #56B6C2\">++</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"删除\"><a class=\"markdownIt-Anchor\" href=\"#删除\"></a> 删除</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (list </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">SqList) </span><span style=\"color: #61AFEF; font-weight: bold\">Delete</span><span style=\"color: #ABB2BF\">(i </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&lt;=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">||</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&gt;=</span><span style=\"color: #ABB2BF\"> list.Length {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">j</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> i; j </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> list.Length</span><span style=\"color: #C678DD\">-</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">; j</span><span style=\"color: #56B6C2\">++</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        list.data[j] </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> list.data[j</span><span style=\"color: #C678DD\">+</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    list.Length</span><span style=\"color: #56B6C2\">--</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> list.capacity </span><span style=\"color: #56B6C2\">&gt;</span><span style=\"color: #ABB2BF\"> initCap </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> list.Length </span><span style=\"color: #56B6C2\">&lt;=</span><span style=\"color: #ABB2BF\"> list.capacity</span><span style=\"color: #C678DD\">/</span><span style=\"color: #D19A66\">4</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        list.</span><span style=\"color: #56B6C2\">reCap</span><span style=\"color: #ABB2BF\">(list.capacity </span><span style=\"color: #C678DD\">/</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"打印\"><a class=\"markdownIt-Anchor\" href=\"#打印\"></a> 打印</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (list </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">SqList) </span><span style=\"color: #61AFEF; font-weight: bold\">DispList</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    fmt.</span><span style=\"color: #56B6C2\">Print</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;顺序表内容是:[&quot;</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">i</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> list.Length</span><span style=\"color: #C678DD\">-</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">; i</span><span style=\"color: #56B6C2\">++</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        fmt.</span><span style=\"color: #56B6C2\">Print</span><span style=\"color: #ABB2BF\">(list.data[i], </span><span style=\"color: #98C379\">&quot;,&quot;</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    fmt.</span><span style=\"color: #56B6C2\">Print</span><span style=\"color: #ABB2BF\">(list.data[list.Length</span><span style=\"color: #C678DD\">-</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">], </span><span style=\"color: #98C379\">&quot;]</span><span style=\"color: #56B6C2\">\\n</span><span style=\"color: #98C379\">&quot;</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h2 id=\"链表\"><a class=\"markdownIt-Anchor\" href=\"#链表\"></a> 链表</h2>\n<p>链表是线性表的链式存储结构，这边就实现一个单链表好了</p>\n<ul>\n<li>\n<p>结点</p>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">type</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">LinkNode</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">struct</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\tdata </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\tnext </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkNode</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n</li>\n<li>\n<p>链表</p>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">type</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">LinkList</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">struct</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\thead   </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkNode</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\ttail   </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkNode</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\tlength </span><span style=\"color: #C678DD\">int</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n</li>\n</ul>\n<h3 id=\"方法-2\"><a class=\"markdownIt-Anchor\" href=\"#方法-2\"></a> 方法</h3>\n<h4 id=\"构造函数伪-2\"><a class=\"markdownIt-Anchor\" href=\"#构造函数伪-2\"></a> 构造函数（伪）</h4>\n<ul>\n<li>\n<p>结点</p>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">NewLinkNode</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkNode {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">&amp;</span><span style=\"color: #ABB2BF\">LinkNode{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\tnext: </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">NewLinkNodeWithData</span><span style=\"color: #ABB2BF\">(d </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}) </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkNode {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">&amp;</span><span style=\"color: #ABB2BF\">LinkNode{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\tdata: d,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\tnext: </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n</li>\n<li>\n<p>链表</p>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">NewLinkList</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">&amp;</span><span style=\"color: #ABB2BF\">LinkList{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\thead:   </span><span style=\"color: #56B6C2\">NewLinkNode</span><span style=\"color: #ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\ttail:   </span><span style=\"color: #56B6C2\">NewLinkNode</span><span style=\"color: #ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\tlength: </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n</li>\n</ul>\n<h4 id=\"建表-2\"><a class=\"markdownIt-Anchor\" href=\"#建表-2\"></a> 建表</h4>\n<ul>\n<li>\n<p>头插法</p>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #7F848E\">// CreateListF 头插法建表</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (l </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList) </span><span style=\"color: #61AFEF; font-weight: bold\">CreateListF</span><span style=\"color: #ABB2BF\">(a []</span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}, n </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">i</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> n; i</span><span style=\"color: #56B6C2\">++</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\tl.</span><span style=\"color: #56B6C2\">Insert</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, a[i])</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n</li>\n<li>\n<p>尾插法</p>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #7F848E\">// CreateListR 尾插法建表</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (l </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList) </span><span style=\"color: #61AFEF; font-weight: bold\">CreateListR</span><span style=\"color: #ABB2BF\">(a []</span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}, n </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">i</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> n; i</span><span style=\"color: #56B6C2\">++</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\tl.</span><span style=\"color: #56B6C2\">Insert</span><span style=\"color: #ABB2BF\">(i, a[i])</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n</li>\n</ul>\n<h4 id=\"插入-2\"><a class=\"markdownIt-Anchor\" href=\"#插入-2\"></a> 插入</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #7F848E\">// Insert 在第i个位置插入元素</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (l </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList) </span><span style=\"color: #61AFEF; font-weight: bold\">Insert</span><span style=\"color: #ABB2BF\">(i </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">, e </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}) </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #E06C75\">s</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">NewLinkNodeWithData</span><span style=\"color: #ABB2BF\">(e)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #E06C75\">p</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> l.</span><span style=\"color: #56B6C2\">GetI</span><span style=\"color: #ABB2BF\">(i </span><span style=\"color: #C678DD\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> p </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #E06C75\">s.next</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> p.next</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #E06C75\">p.next</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> s</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> s.next </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t\t</span><span style=\"color: #E06C75\">l.tail</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> s</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\tl.length</span><span style=\"color: #56B6C2\">++</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t} </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"返回第i个元素\"><a class=\"markdownIt-Anchor\" href=\"#返回第i个元素\"></a> 返回第i个元素</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #7F848E\">// GetI 返回第i个元素</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (l </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList) </span><span style=\"color: #61AFEF; font-weight: bold\">GetI</span><span style=\"color: #ABB2BF\">(i </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkNode {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #E06C75\">p</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> l.head</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">j</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">-</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">; j </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> p </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\">; j</span><span style=\"color: #56B6C2\">++</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #E06C75\">p</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> p.next</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> p</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"打印-2\"><a class=\"markdownIt-Anchor\" href=\"#打印-2\"></a> 打印</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (l </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList) </span><span style=\"color: #61AFEF; font-weight: bold\">DispList</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #E06C75\">p</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> l.head.next</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> p </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\tfmt.</span><span style=\"color: #56B6C2\">Print</span><span style=\"color: #ABB2BF\">(p.data, </span><span style=\"color: #98C379\">&quot; &quot;</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #E06C75\">p</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> p.next</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\tfmt.</span><span style=\"color: #56B6C2\">Println</span><span style=\"color: #ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"删除-2\"><a class=\"markdownIt-Anchor\" href=\"#删除-2\"></a> 删除</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #7F848E\">// Delete 在单链表中删除序号i位置的结点</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (l </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList) </span><span style=\"color: #61AFEF; font-weight: bold\">Delete</span><span style=\"color: #ABB2BF\">(i </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #E06C75\">p</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> l.</span><span style=\"color: #56B6C2\">GetI</span><span style=\"color: #ABB2BF\">(i </span><span style=\"color: #C678DD\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> p </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #E06C75\">q</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> p.next</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> q </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t\t</span><span style=\"color: #E06C75\">p.next</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> q.next</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t\t</span><span style=\"color: #E06C75\">q</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t\tl.length</span><span style=\"color: #56B6C2\">--</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t} </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t} </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"修改元素-2\"><a class=\"markdownIt-Anchor\" href=\"#修改元素-2\"></a> 修改元素</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #7F848E\">// SetElem 设置序号i的结点值</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (l </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList) </span><span style=\"color: #61AFEF; font-weight: bold\">SetElem</span><span style=\"color: #ABB2BF\">(i </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">, e </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}) </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #E06C75\">p</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> l.</span><span style=\"color: #56B6C2\">GetI</span><span style=\"color: #ABB2BF\">(i)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> p </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #E06C75\">p.data</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> e</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"查找-2\"><a class=\"markdownIt-Anchor\" href=\"#查找-2\"></a> 查找</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #7F848E\">// GetNo 查找第一个为e的元素的序号</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (l </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList) </span><span style=\"color: #61AFEF; font-weight: bold\">GetNo</span><span style=\"color: #ABB2BF\">(e </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}) </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #E06C75\">no</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #E06C75\">p</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">:=</span><span style=\"color: #ABB2BF\"> l.head.next</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> p </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> p.data </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> e {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\tno</span><span style=\"color: #56B6C2\">++</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #E06C75\">p</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">=</span><span style=\"color: #ABB2BF\"> p.next</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> p </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">nil</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">-</span><span style=\"color: #D19A66\">1</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\t</span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> no</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n<h4 id=\"添加元素-2\"><a class=\"markdownIt-Anchor\" href=\"#添加元素-2\"></a> 添加元素</h4>\n<figure class=\"shiki go\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #7F848E\">// Add 在末尾添加元素</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">func</span><span style=\"color: #ABB2BF\"> (l </span><span style=\"color: #C678DD\">*</span><span style=\"color: #ABB2BF\">LinkList) </span><span style=\"color: #61AFEF; font-weight: bold\">Add</span><span style=\"color: #ABB2BF\">(e </span><span style=\"color: #C678DD\">interface</span><span style=\"color: #ABB2BF\">{}) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">\tl.</span><span style=\"color: #56B6C2\">Insert</span><span style=\"color: #ABB2BF\">(l.length, e)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div></div></figure>\n","text":" 这是一系列关于数据结构的笔记博客，为了练习自己的代码能力，咱将尽可能不使用C++来实现这些数据结构 线性表的简单介绍 线性表是具有相同特性的数据元素的一个有限...","permalink":"/post/List","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\"> 线性表的简单介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%BA%E5%BA%8F%E8%A1%A8\"><span class=\"toc-text\"> 顺序表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95\"><span class=\"toc-text\"> 方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%BC%AA\"><span class=\"toc-text\"> 构造函数(伪)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%87%8D%E6%96%B0%E8%B0%83%E6%95%B4%E5%AE%B9%E9%87%8F\"><span class=\"toc-text\"> 重新调整容量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E8%A1%A8\"><span class=\"toc-text\"> 建表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0\"><span class=\"toc-text\"> 添加元素</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%85%83%E7%B4%A0\"><span class=\"toc-text\"> 修改元素</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E6%89%BE\"><span class=\"toc-text\"> 查找</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5\"><span class=\"toc-text\"> 插入</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4\"><span class=\"toc-text\"> 删除</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%8D%B0\"><span class=\"toc-text\"> 打印</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\"> 链表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95-2\"><span class=\"toc-text\"> 方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%BC%AA-2\"><span class=\"toc-text\"> 构造函数（伪）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E8%A1%A8-2\"><span class=\"toc-text\"> 建表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5-2\"><span class=\"toc-text\"> 插入</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%94%E5%9B%9E%E7%AC%ACi%E4%B8%AA%E5%85%83%E7%B4%A0\"><span class=\"toc-text\"> 返回第i个元素</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%8D%B0-2\"><span class=\"toc-text\"> 打印</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4-2\"><span class=\"toc-text\"> 删除</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%85%83%E7%B4%A0-2\"><span class=\"toc-text\"> 修改元素</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E6%89%BE-2\"><span class=\"toc-text\"> 查找</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0-2\"><span class=\"toc-text\"> 添加元素</span></a></li></ol></li></ol></li></ol>","author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"Union-Find","date":"2023-05-21T10:02:45.000Z","updated":"2024-03-17T05:30:08.470Z","comments":true,"path":"api/articles/Union-Find.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":" 本文来自Coursera的Algorithms, Part I课程 动态连通性 我们假设“相连”是一种等价关系，这也就意味 着它具有： 自反性：p 和 p 是...","permalink":"/post/Union-Find","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Algorithms, Part I","slug":"Algorithms-Part-I","count":2,"path":"api/categories/Algorithms-Part-I.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"},{"name":"coursera","slug":"coursera","count":2,"path":"api/tags/coursera.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Sports Life Lesson","uid":"6ceda27f62dfcd4edcca9c255f5ff0a8","slug":"Sports-Life-Lesson","date":"2023-05-14T02:16:25.000Z","updated":"2024-03-17T05:24:40.804Z","comments":true,"path":"api/articles/Sports-Life-Lesson.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/OIP.jpg","text":"As Aristotle said, “Life needs sports.” Sport, in its various forms, is an integ...","permalink":"/post/Sports-Life-Lesson","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"English","slug":"English","count":4,"path":"api/categories/English.json"}],"tags":[{"name":"English","slug":"English","count":4,"path":"api/tags/English.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}