{"title":"Redis实战——黑马点评","uid":"9ae1faec43a5cc6a5b23d428a7b7e9ed","slug":"heimadianping","date":"2023-05-12T09:47:54.000Z","updated":"2024-03-17T05:25:10.332Z","comments":true,"path":"api/articles/heimadianping.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/redis.jpg","content":"<p>就是黑马程序员的Redis教程里的黑马点评的项目，前面就不讲了，直接开始正题。</p>\n<h1 id=\"基于Session实现登录流程\"><a href=\"#基于Session实现登录流程\" class=\"headerlink\" title=\"基于Session实现登录流程\"></a>基于Session实现登录流程</h1><p>分为三个步骤：</p>\n<ul>\n<li>发送验证码</li>\n<li>短信验证码登录、注册</li>\n<li>校验登录状态</li>\n</ul>\n<h2 id=\"发送验证码\"><a href=\"#发送验证码\" class=\"headerlink\" title=\"发送验证码\"></a>发送验证码</h2><h3 id=\"逻辑：\"><a href=\"#逻辑：\" class=\"headerlink\" title=\"逻辑：\"></a>逻辑：</h3><p>用户在提交手机号后，会校验手机号是否合法，如果不合法，则要求用户重新输入手机号</p>\n<p>如果手机号合法，后台此时生成对应的验证码，同时将验证码进行保存，然后再通过短信的方式将验证码发送给用户</p>\n<img src=\"/post/heimadianping/1.png\" class=\"\" title=\"发送验证码\">\n\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">sendCode</span><span style=\"color: #E06C75\">(</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #E06C75\"> phone</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">HttpSession</span><span style=\"color: #E06C75\"> session) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #7F848E; font-style: italic\">//校验手机号，不符合就返回错误，符合就生成验证码</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #E06C75\"> (</span><span style=\"color: #E5C07B\">RegexUtils</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">isPhoneInvalid</span><span style=\"color: #ABB2BF\">(phone)</span><span style=\"color: #E06C75\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">fail</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;手机号格式错误！&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #E06C75\"> code </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">RandomUtil</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">randomNumbers</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">6</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #7F848E; font-style: italic\">//保存验证码到session</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">session</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setAttribute</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;code&quot;</span><span style=\"color: #ABB2BF\">,code);</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #7F848E; font-style: italic\">//发送验证码</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">log</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">debug</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;发送短信验证码成功，验证码：&quot;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> code);</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">ok</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">&#125;</span></span></code></pre></div><h2 id=\"短信验证码登录、注册\"><a href=\"#短信验证码登录、注册\" class=\"headerlink\" title=\"短信验证码登录、注册\"></a>短信验证码登录、注册</h2><h3 id=\"逻辑：-1\"><a href=\"#逻辑：-1\" class=\"headerlink\" title=\"逻辑：\"></a>逻辑：</h3><p>用户将验证码和手机号进行输入，后台从session中拿到当前验证码，然后和用户输入的验证码进行校验，如果不一致，则无法通过校验，如果一致，则后台根据手机号查询用户，如果用户不存在，则为用户创建账号信息，保存到数据库，无论是否存在，都会将用户信息保存到session中，方便后续获得当前登录信息</p>\n<img src=\"/post/heimadianping/2.png\" class=\"\" title=\"短信验证码登录、注册\">\n\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">login</span><span style=\"color: #E06C75\">(</span><span style=\"color: #E5C07B\">LoginFormDTO</span><span style=\"color: #E06C75\"> loginForm</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">HttpSession</span><span style=\"color: #E06C75\"> session) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #7F848E; font-style: italic\">//校验手机号和验证码</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #E06C75\"> phone </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">loginForm</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getPhone</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #E06C75\"> (</span><span style=\"color: #E5C07B\">RegexUtils</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">isPhoneInvalid</span><span style=\"color: #ABB2BF\">(phone)</span><span style=\"color: #E06C75\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">fail</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;手机号格式错误！&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #E06C75\"> cacheCode </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">session</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getAttribute</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;code&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #E06C75\"> code </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">loginForm</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getCode</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #7F848E; font-style: italic\">//不一致，报错</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #E06C75\">(cacheCode </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #E06C75\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #E06C75\"> </span><span style=\"color: #56B6C2\">||</span><span style=\"color: #E06C75\"> </span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">cacheCode</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toString</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">equals</span><span style=\"color: #ABB2BF\">(code)</span><span style=\"color: #E06C75\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">fail</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;验证码错误&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #7F848E; font-style: italic\">//一致，根据手机号查用户</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">User</span><span style=\"color: #E06C75\"> user </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">query</span><span style=\"color: #E06C75\">()</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">eq</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;phone&quot;</span><span style=\"color: #ABB2BF\">, phone).</span><span style=\"color: #61AFEF\">one</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #7F848E; font-style: italic\">//判断是否存在</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #E06C75\"> (user </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #E06C75\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #E06C75\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #7F848E; font-style: italic\">//不存在，创建用户</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        user </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">createUserWithPhone</span><span style=\"color: #E06C75\">(phone)</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">session</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setAttribute</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;user&quot;</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">BeanUtil</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">copyProperties</span><span style=\"color: #ABB2BF\">(user, </span><span style=\"color: #E5C07B\">UserDTO</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">ok</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">&#125;</span></span></code></pre></div><h2 id=\"校验登录状态\"><a href=\"#校验登录状态\" class=\"headerlink\" title=\"校验登录状态\"></a>校验登录状态</h2><p>校验登录状态需要配置拦截器来实现登录拦截功能</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>当用户发起请求时，会访问我们像tomcat注册的端口，任何程序想要运行，都需要有一个线程对当前端口号进行监听，tomcat也不例外，当监听线程知道用户想要和tomcat连接连接时，那会由监听线程创建socket连接，socket都是成对出现的，用户通过socket像互相传递数据，当tomcat端的socket接受到数据后，此时监听线程会从tomcat的线程池中取出一个线程执行用户请求，在我们的服务部署到tomcat后，线程会找到用户想要访问的工程，然后用这个线程转发到工程中的controller，service，dao中，并且访问对应的DB，在用户执行完请求后，再统一返回，再找到tomcat端的socket，再将数据写回到用户端的socket，完成请求和响应。</p>\n<p>每个用户其实对应都是去找tomcat线程池中的一个线程来完成工作的， 使用完成后再进行回收，既然每个请求都是独立的，所以在每个用户去访问我们的工程时，我们可以使用threadlocal来做到线程隔离，每个线程操作自己的一份数据</p>\n<h3 id=\"逻辑\"><a href=\"#逻辑\" class=\"headerlink\" title=\"逻辑\"></a>逻辑</h3><p>用户在请求时候，会从cookie中携带者JsessionId到后台，后台通过JsessionId从session中拿到用户信息，如果没有session信息，则进行拦截，如果有session信息，则将用户信息保存到threadLocal中，并且放行</p>\n<img src=\"/post/heimadianping/3.png\" class=\"\" title=\"校验登录状态\">\n\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><ul>\n<li>首先实现HandlerInterceptor接口</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">LoginInterceptor</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">implements</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">HandlerInterceptor</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">boolean</span><span style=\"color: #61AFEF\"> preHandle</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">HttpServletRequest</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">request</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">HttpServletResponse</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">response</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">handler</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//Get session</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HttpSession</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">session</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">request</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getSession</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//Get user from session</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">user</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">session</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getAttribute</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;user&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//if user exists</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (user </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #7F848E; font-style: italic\">//not exists, reject, return 401</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">response</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setStatus</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">401</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//save user in ThreadLocal</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">UserHolder</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">saveUser</span><span style=\"color: #ABB2BF\">((UserDTO) user);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> afterCompletion</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">HttpServletRequest</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">request</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">HttpServletResponse</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">response</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">handler</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">ex</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">UserHolder</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">removeUser</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><ul>\n<li>然后是MvcConfig</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Configuration</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">MvcConfig</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">implements</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">WebMvcConfigurer</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> addInterceptors</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">InterceptorRegistry</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">registry</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">registry</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">addInterceptor</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">LoginInterceptor</span><span style=\"color: #ABB2BF\">()).</span><span style=\"color: #61AFEF\">excludePathPatterns</span><span style=\"color: #ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/user/code&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/user/login&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/blog/hot&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/shop/**&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/shop-type/**&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/voucher/**&quot;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        );</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h2 id=\"session共享问题\"><a href=\"#session共享问题\" class=\"headerlink\" title=\"session共享问题\"></a>session共享问题</h2><p>每个Tomcat中都有一份属于自己的<code>session</code>,假设用户第一次访问第一台Tomcat，并且把自己的信息存放到第一台服务器的<code>session</code>中，但是第二次这个用户访问到了第二台Tomcat，那么在第二台服务器上，肯定没有第一台服务器存放的<code>session</code>，所以此时 整个登录拦截功能就会出现问题，我们能如何解决这个问题呢？早期的方案是<code>session</code>拷贝，就是说虽然每个Tomcat上都有不同的<code>session</code>，但是每当任意一台服务器的<code>session</code>修改时，都会同步给其他的Tomcat服务器的<code>session</code>，这样的话，就可以实现<code>session</code>的共享了</p>\n<p>但是这种方案有两个<strong>大</strong>问题</p>\n<ol>\n<li><p>每台服务器中都有完整的一份<code>session</code>数据，服务器压力过大。</p>\n</li>\n<li><p><code>session</code>拷贝数据时，可能会出现延迟</p>\n</li>\n</ol>\n<p>所以咱们要基于Redis来完成，我们把<code>session</code>换成Redis，Redis数据本身就是共享的，就可以避免<code>session</code>共享的问题了</p>\n<img src=\"/post/heimadianping/4.png\" class=\"\" title=\"session共享问题\">\n\n<h1 id=\"Redis代替session的业务流程\"><a href=\"#Redis代替session的业务流程\" class=\"headerlink\" title=\"Redis代替session的业务流程\"></a>Redis代替<code>session</code>的业务流程</h1><h2 id=\"设计key\"><a href=\"#设计key\" class=\"headerlink\" title=\"设计key\"></a>设计<code>key</code></h2><p>我们可以生成一个随机字符串<code>token</code>，来存储。这样既可以满足唯一性也可以满足脱敏性。</p>\n<h2 id=\"整体流程\"><a href=\"#整体流程\" class=\"headerlink\" title=\"整体流程\"></a>整体流程</h2><p>当注册完成后，用户去登录会去校验用户提交的手机号和验证码，是否一致，如果一致，则根据手机号查询用户信息，不存在则新建，最后将用户数据保存到Redis，并且生成<code>token</code>作为Redis的<code>key</code>，当我们校验用户是否登录时，会去携带着<code>token</code>进行访问，从Redis中取出<code>token</code>对应的<code>value</code>，判断是否存在这个数据，如果没有则拦截，如果存在则将其保存到<code>threadLocal</code>中，并且放行。</p>\n<img src=\"/post/heimadianping/5.png\" class=\"\" title=\"整体流程\">\n\n<h2 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>直接上代码：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">UserServiceImpl</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">extends</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">ServiceImpl</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">UserMapper</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">User</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">implements</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">IUserService</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Resource</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">StringRedisTemplate</span><span style=\"color: #E06C75\"> stringRedisTemplate</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #61AFEF\"> sendCode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">phone</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">HttpSession</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">session</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//校验手机号，不符合就返回错误，符合就生成验证码</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">RegexUtils</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">isPhoneInvalid</span><span style=\"color: #ABB2BF\">(phone))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">fail</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;手机号格式错误！&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">code</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">RandomUtil</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">randomNumbers</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">6</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//保存验证码到Redis</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">stringRedisTemplate</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">opsForValue</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">set</span><span style=\"color: #ABB2BF\">(LOGIN_CODE_KEY </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> phone, code, LOGIN_CODE_TTL, </span><span style=\"color: #E5C07B\">TimeUnit</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">MINUTES</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//发送验证码</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">log</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">debug</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;发送短信验证码成功，验证码：&quot;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> code);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">ok</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #61AFEF\"> login</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">LoginFormDTO</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">loginForm</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">HttpSession</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">session</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//校验手机号和验证码</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">phone</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">loginForm</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getPhone</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">RegexUtils</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">isPhoneInvalid</span><span style=\"color: #ABB2BF\">(phone))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">fail</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;手机号格式错误！&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">// 从redis获取验证码并校验</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">cacheCode</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">stringRedisTemplate</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">opsForValue</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">get</span><span style=\"color: #ABB2BF\">(LOGIN_CODE_KEY </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> phone);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">code</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">loginForm</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getCode</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//不一致，报错</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\">(cacheCode </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">||</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">cacheCode</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">equals</span><span style=\"color: #ABB2BF\">(code)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">fail</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;验证码错误&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//一致，根据手机号查用户</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">User</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">user</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">query</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">eq</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;phone&quot;</span><span style=\"color: #ABB2BF\">, phone).</span><span style=\"color: #61AFEF\">one</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//判断是否存在</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (user </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #7F848E; font-style: italic\">//不存在，创建用户</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            user </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">createUserWithPhone</span><span style=\"color: #ABB2BF\">(phone);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">// 保存用户信息到 redis中</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">// 随机生成token，作为登录令牌</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">token</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">UUID</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">randomUUID</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">toString</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">// 将User对象转为HashMap存储</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">UserDTO</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">userDTO</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">BeanUtil</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">copyProperties</span><span style=\"color: #ABB2BF\">(user, </span><span style=\"color: #E5C07B\">UserDTO</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Map</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #E06C75\">userMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">BeanUtil</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">beanToMap</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                (userDTO, </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\">&lt;&gt;(),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #E5C07B\">CopyOptions</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">create</span><span style=\"color: #ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                        .</span><span style=\"color: #61AFEF\">setIgnoreNullValue</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                        .</span><span style=\"color: #61AFEF\">setFieldValueEditor</span><span style=\"color: #ABB2BF\">((fieldName, fieldValue) </span><span style=\"color: #C678DD\">-&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">fieldValue</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toString</span><span style=\"color: #ABB2BF\">()));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">// 存储</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">tokenKey</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> LOGIN_USER_KEY </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> token;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">stringRedisTemplate</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">opsForHash</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">putAll</span><span style=\"color: #ABB2BF\">(tokenKey, userMap);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">// 设置token有效期</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">stringRedisTemplate</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">expire</span><span style=\"color: #ABB2BF\">(tokenKey, LOGIN_USER_TTL, </span><span style=\"color: #E5C07B\">TimeUnit</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">MINUTES</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">ok</span><span style=\"color: #ABB2BF\">(token);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Configuration</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">MvcConfig</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">implements</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">WebMvcConfigurer</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Resource</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">StringRedisTemplate</span><span style=\"color: #E06C75\"> stringRedisTemplate</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> addInterceptors</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">InterceptorRegistry</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">registry</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">registry</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">addInterceptor</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">LoginInterceptor</span><span style=\"color: #ABB2BF\">(stringRedisTemplate)).</span><span style=\"color: #61AFEF\">excludePathPatterns</span><span style=\"color: #ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/user/code&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/user/login&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/blog/hot&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/shop/**&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/shop-type/**&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #98C379\">&quot;/voucher/**&quot;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        );</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">LoginInterceptor</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">implements</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">HandlerInterceptor</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">StringRedisTemplate</span><span style=\"color: #E06C75\"> stringRedisTemplate</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> LoginInterceptor</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">StringRedisTemplate</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">stringRedisTemplate</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">stringRedisTemplate</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> stringRedisTemplate;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">boolean</span><span style=\"color: #61AFEF\"> preHandle</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">HttpServletRequest</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">request</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">HttpServletResponse</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">response</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">handler</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//Get token in Header</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">token</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">request</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getHeader</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;authorization&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">StrUtil</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">isBlank</span><span style=\"color: #ABB2BF\">(token)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #7F848E; font-style: italic\">//not exists, reject, return 401</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">response</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setStatus</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">401</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">key</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">RedisConstants</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">LOGIN_USER_KEY</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> token;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//Get user from Redis</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Map</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #E06C75\">userMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">stringRedisTemplate</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">opsForHash</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">entries</span><span style=\"color: #ABB2BF\">(key);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//if user exists</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">userMap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">isEmpty</span><span style=\"color: #ABB2BF\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #7F848E; font-style: italic\">//not exists, reject, return 401</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">response</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setStatus</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">401</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//turn Hash to UserDTO</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">UserDTO</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">userDTO</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">BeanUtil</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">fillBeanWithMap</span><span style=\"color: #ABB2BF\">(userMap, </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">UserDTO</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//save user in ThreadLocal</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">UserHolder</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">saveUser</span><span style=\"color: #ABB2BF\">(userDTO);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">// refresh token TTL</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">stringRedisTemplate</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">expire</span><span style=\"color: #ABB2BF\">(key, </span><span style=\"color: #E5C07B\">RedisConstants</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">LOGIN_USER_TTL</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">TimeUnit</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">MINUTES</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">@</span><span style=\"color: #E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> afterCompletion</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">HttpServletRequest</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">request</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">HttpServletResponse</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">response</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">handler</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">ex</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">UserHolder</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">removeUser</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div>","text":"就是黑马程序员的Redis教程里的黑马点评的项目，前面就不讲了，直接开始正题。 基于Session实现登录流程分为三个步骤： 发送验证码 短信验证码登录、注册 ...","permalink":"/post/heimadianping","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"Redis","slug":"Redis","count":4,"path":"api/categories/Redis.json"}],"tags":[{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"Redis","slug":"Redis","count":4,"path":"api/tags/Redis.json"},{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"Spring","slug":"Spring","count":1,"path":"api/tags/Spring.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8ESession%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">基于Session实现登录流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%91%E9%80%81%E9%AA%8C%E8%AF%81%E7%A0%81\"><span class=\"toc-text\">发送验证码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%EF%BC%9A\"><span class=\"toc-text\">逻辑：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E7%99%BB%E5%BD%95%E3%80%81%E6%B3%A8%E5%86%8C\"><span class=\"toc-text\">短信验证码登录、注册</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%EF%BC%9A-1\"><span class=\"toc-text\">逻辑：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%A1%E9%AA%8C%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">校验登录状态</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91\"><span class=\"toc-text\">逻辑</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-2\"><span class=\"toc-text\">代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#session%E5%85%B1%E4%BA%AB%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">session共享问题</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Redis%E4%BB%A3%E6%9B%BFsession%E7%9A%84%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">Redis代替session的业务流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1key\"><span class=\"toc-text\">设计key</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">整体流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-3\"><span class=\"toc-text\">代码</span></a></li></ol></li></ol>","author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Sports Life Lesson","uid":"6ceda27f62dfcd4edcca9c255f5ff0a8","slug":"Sports-Life-Lesson","date":"2023-05-14T02:16:25.000Z","updated":"2024-03-17T05:24:40.804Z","comments":true,"path":"api/articles/Sports-Life-Lesson.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/OIP.jpg","text":"As Aristotle said, “Life needs sports.” Sport, in its various forms, is an integ...","permalink":"/post/Sports-Life-Lesson","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"English","slug":"English","count":4,"path":"api/categories/English.json"}],"tags":[{"name":"English","slug":"English","count":4,"path":"api/tags/English.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SpringDataRedis","uid":"e734ef48d2ce2470a46681dcf2eb2449","slug":"Redis-Learning-03-SpringDataRedis","date":"2023-05-10T13:05:27.000Z","updated":"2024-03-17T05:24:46.489Z","comments":true,"path":"api/articles/Redis-Learning-03-SpringDataRedis.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/redis.jpg","text":"Redis的Java客户端Redis的客户端可以在Redis官网找到，推荐的客户端包括： Jedis：以Redis命令作为方法名称，学习成本低，简单实用。但是J...","permalink":"/post/Redis-Learning-03-SpringDataRedis","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"Redis","slug":"Redis","count":4,"path":"api/categories/Redis.json"}],"tags":[{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"Redis","slug":"Redis","count":4,"path":"api/tags/Redis.json"},{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}