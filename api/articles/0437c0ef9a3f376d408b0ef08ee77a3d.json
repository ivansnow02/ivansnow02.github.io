{"title":"Redis的快速入门","uid":"0437c0ef9a3f376d408b0ef08ee77a3d","slug":"0437c0ef9a3f376d408b0ef08ee77a3d","date":"2023-05-08T12:16:45.000Z","updated":"2024-03-17T05:24:50.568Z","comments":true,"path":"api/articles/0437c0ef9a3f376d408b0ef08ee77a3d.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/redis.jpg","content":"<h1 id=\"Redis命令行客户端\"><a href=\"#Redis命令行客户端\" class=\"headerlink\" title=\"Redis命令行客户端\"></a>Redis命令行客户端</h1><p>Redis安装完成后就自带了命令行客户端：<code>redis-cli</code>，使用方式如下：</p>\n<div class=\"language-sh\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sh</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #61AFEF\">redis-cli</span><span style=\"color: #ABB2BF\"> [options] [commonds]</span></span></code></pre></div><p>其中常见的options有：</p>\n<ul>\n<li><code>-h 127.0.0.1</code>：指定要连接的Redis节点的IP地址，默认是127.0.0.1</li>\n<li><code>-p 6379</code>：指定要连接的Redis节点的端口，默认是6379</li>\n<li><code>-a 123456</code>：指定Redis的访问密码</li>\n</ul>\n<p>其中的<code>commonds</code>就是Redis的操作命令，例如：</p>\n<ul>\n<li><code>ping</code>：与Redis服务端做心跳测试，服务端正常会返回<code>pong</code></li>\n</ul>\n<p>不指定<code>commond</code>时，会进入<code>redis-cli</code>的交互控制台</p>\n<h1 id=\"Redis的通用命令\"><a href=\"#Redis的通用命令\" class=\"headerlink\" title=\"Redis的通用命令\"></a>Redis的通用命令</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>通过<code>help [command]</code> 可以查看一个命令的具体用法<br>Redis为了方便我们学习，将操作不同数据类型的命令也做了分组，在<a href=\"https://redis.io/commands\">Redis官网</a>可以查看到不同的命令：</p></blockquote>\n<p>通用指令是部分数据类型的，都可以使用的指令，常见的有：</p>\n<ul>\n<li><code>KEYS</code>：查看符合模板的所有<code>key</code>，可以使用通配符（模糊查询效率不高，单线程阻塞请求）<ul>\n<li><code>KEYS *</code> 查询所有</li>\n<li><code>KEYS a*</code> 查询以a开头的所有</li>\n</ul>\n</li>\n<li><code>DEL</code>：删除一个指定的<code>key</code>，可删除多个，返回值是删除个数</li>\n<li><code>EXISTS</code>：判断key是否存在，可判断多个</li>\n<li><code>EXPIRE</code>：给一个key设置有效期，有效期到期时该key会被自动删除（Redis基于内存存储，节省内存，防止内存占满）</li>\n<li><code>TTL</code>( Time To Live)：查看一个KEY的剩余有效期，返回<code>-1</code>表示永久有效</li>\n</ul>\n<h2 id=\"String类型\"><a href=\"#String类型\" class=\"headerlink\" title=\"String类型\"></a>String类型</h2><p>String类型是Redis中最简单的存储类型。<br>其<code>value</code>是字符串，不过根据字符串的格式不同，又可以分为3类：</p>\n<ul>\n<li>string：普通字符串</li>\n<li>int：整数类型，可以做自增、自减操作</li>\n<li>float：浮点类型，可以做自增、自减操作</li>\n</ul>\n<p>底层都是<strong>字节数组</strong>形式存储，只不过是编码方式不同。字符串类型的最大空间不能超过512m.</p>\n<h3 id=\"String的常用命令\"><a href=\"#String的常用命令\" class=\"headerlink\" title=\"String的常用命令\"></a>String的常用命令</h3><ul>\n<li><code>SET</code>：添加或者修改已经存在的一个String类型的键值对</li>\n<li><code>GET</code>：根据<code>key</code>获取String类型的<code>value</code></li>\n<li><code>MSET</code>：批量添加多个String类型的键值对</li>\n<li><code>MGET</code>：根据多个<code>key</code>获取多个String类型的<code>value</code></li>\n<li><code>INCR</code>：让一个整型的<code>key</code>自增1</li>\n<li><code>INCRBY</code>:让一个整型的<code>key</code>自增并指定步长，例如：<code>incrby num 2</code> 让<code>num</code>值自增2</li>\n<li><code>INCRBYFLOAT</code>：让一个浮点类型的数字自增并指定步长</li>\n<li><code>SETNX</code>：添加一个String类型的键值对，前提是这个<code>key</code>不存在，否则不执行</li>\n<li><code>SETEX</code>：添加一个String类型的键值对，并且指定有效期</li>\n</ul>\n<h3 id=\"Key结构\"><a href=\"#Key结构\" class=\"headerlink\" title=\"Key结构\"></a>Key结构</h3><p>Redis的<code>key</code>允许有多个单词形成层级结构，多个单词之间用<code>:</code>隔开，格式如下：</p>\n<div class=\"language-json\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">json</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">Key</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">:Key</span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">:Key</span><span style=\"color: #D19A66\">3</span></span></code></pre></div><p>这个格式并非固定，也可以根据自己的需求来删除或添加词条。这样以来，我们就可以把不同类型的数据区分开了。从而避免了<code>key</code>的冲突问题。</p>\n<p>如果<code>Value</code>是一个Java对象，例如一个<code>User</code>对象，则可以将对象序列化为<code>JSON</code>字符串后存储</p>\n<table>\n<thead>\n<tr>\n<th><code>Key</code></th>\n<th><code>Value</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Key1:Key2:Key3</code></td>\n<td><code>&#123;&quot;Key3&quot;: value3, …&#125;</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"Hash类型\"><a href=\"#Hash类型\" class=\"headerlink\" title=\"Hash类型\"></a>Hash类型</h2><p>Hash类型，也叫散列，其<code>value</code>是一个无序字典，类似于Java中的HashMap结构。</p>\n<p>String结构是将对象序列化为<code>JSON</code>字符串后存储，当需要修改对象某个字段时很不方便，Hash结构可以将对象中的每个字段独立存储，可以针对单个字段做CRUD</p>\n<h3 id=\"Hash的常见命令\"><a href=\"#Hash的常见命令\" class=\"headerlink\" title=\"Hash的常见命令\"></a>Hash的常见命令</h3><ul>\n<li><code>HSET key field value</code>：添加或者修改hash类型<code>key</code>的<code>field</code>的值</li>\n<li><code>HGET key field</code>：获取一个hash类型<code>key</code>的<code>field</code>的值</li>\n<li><code>HMSET</code>：批量添加多个hash类型<code>key</code>的<code>field</code>的值</li>\n<li><code>HMGET</code>：批量获取多个hash类型<code>key</code>的<code>field</code>的值</li>\n<li><code>HGETALL</code>：获取一个hash类型的<code>key</code>中的所有的<code>field</code>和<code>value</code></li>\n<li><code>HKEYS</code>：获取一个hash类型的<code>key</code>中的所有的<code>field</code></li>\n<li><code>HINCRBY</code>：让一个hash类型<code>key</code>的字段值自增并指定步长</li>\n<li><code>HSETNX</code>：添加一个hash类型的<code>key</code>的<code>field</code>值，前提是这个<code>field</code>不存在，否则不执行</li>\n</ul>\n<h2 id=\"List类型\"><a href=\"#List类型\" class=\"headerlink\" title=\"List类型\"></a>List类型</h2><p>Redis中的List类型与Java中的LinkedList类似，可以看做是一个双向链表结构。既可以支持正向检索和也可以支持反向检索,特征为：</p>\n<ul>\n<li>有序</li>\n<li>元素可以重复</li>\n<li>插入和删除快</li>\n<li>查询速度一般</li>\n</ul>\n<img src=\"/post/Redis-Learning-02-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/linkedlist.png\" class=\"\" title=\"linkedlist\">\n\n<h3 id=\"List常见命令\"><a href=\"#List常见命令\" class=\"headerlink\" title=\"List常见命令\"></a>List常见命令</h3><ul>\n<li><code>LPUSH key element ...</code>：向列表左侧插入一个或多个元素（倒序）</li>\n<li><code>LPOP key</code>：移除并返回列表左侧的第一个元素，没有则返回nil</li>\n<li><code>RPUSH key element ... </code>：向列表右侧插入一个或多个元素（顺序）</li>\n<li><code>RPOP key</code>：移除并返回列表右侧的第一个元素</li>\n<li><code>LRANGE key star end</code>：返回一段角标范围内的所有元素</li>\n<li><code>BLPOP</code>和<code>BRPOP</code> (Block)：与<code>LPOP</code>和<code>RPOP</code>类似，只不过在没有元素时等待指定时间，而不是直接返回<code>nil</code></li>\n</ul>\n<h2 id=\"Set类型\"><a href=\"#Set类型\" class=\"headerlink\" title=\"Set类型\"></a>Set类型</h2><p>Redis的Set结构与Java中的HashSet类似，可以看做是一个<code>value</code>为<code>null</code>的HashMap。因为也是一个hash表，因此具备与HashSet类似的特征：</p>\n<ul>\n<li><p>无序</p>\n</li>\n<li><p>元素不可重复</p>\n</li>\n<li><p>查找快</p>\n</li>\n<li><p>支持交集、并集、差集等功能</p>\n</li>\n</ul>\n<h3 id=\"Set的常见命令\"><a href=\"#Set的常见命令\" class=\"headerlink\" title=\"Set的常见命令\"></a>Set的常见命令</h3><ul>\n<li><code>SADD key member ...</code>：向set中添加一个或多个元素</li>\n<li><code>SREM key member ... </code>: 移除set中的指定元素</li>\n<li><code>SCARD key</code>： 返回set中元素的个数</li>\n<li><code>SISMEMBER key member</code>：判断一个元素是否存在于set中</li>\n<li><code>SMEMBERS</code>：获取set中的所有元素</li>\n<li><code>SINTER key1 key2 ... </code>：求<code>key1</code>与<code>key2</code>的交集</li>\n<li><code>SDIFF key1 key2 ...</code>：求<code>key1</code>与<code>key2</code>的差集</li>\n<li><code>SUNION key1 key2 ..</code>：求<code>key1</code>和<code>key2</code>的并集</li>\n</ul>\n<h2 id=\"SortedSet类型\"><a href=\"#SortedSet类型\" class=\"headerlink\" title=\"SortedSet类型\"></a>SortedSet类型</h2><p>Redis的SortedSet是一个可排序的set集合，与Java中的TreeSet有些类似，但底层数据结构却差别很大。SortedSet中的每一个元素都带有一个<code>score</code>属性，可以基于<code>score</code>属性对元素排序，底层的实现是一个跳表（SkipList）加 hash表，具备下列特性：</p>\n<ul>\n<li>可排序</li>\n<li>元素不重复</li>\n<li>查询速度快</li>\n</ul>\n<p>SortedSet经常被用来实现排行榜这样的功能</p>\n<h3 id=\"SortedSet的常见命令\"><a href=\"#SortedSet的常见命令\" class=\"headerlink\" title=\"SortedSet的常见命令\"></a>SortedSet的常见命令</h3><ul>\n<li><p><code>ZADD key score member</code>：添加一个或多个元素到sorted set ，如果已经存在则更新其<code>score</code>值</p>\n</li>\n<li><p><code>ZREM key member</code>：删除sorted set中的一个指定元素</p>\n</li>\n<li><p><code>ZSCORE key member</code> : 获取sorted set中的指定元素的<code>score</code>值</p>\n</li>\n<li><p><code>ZRANK key member</code>：获取sorted set 中的指定元素的排名</p>\n</li>\n<li><p><code>ZCARD key</code>：获取sorted set中的元素个数</p>\n</li>\n<li><p><code>ZCOUNT key min max</code>：统计<code>score</code>值在给定范围内的所有元素的个数</p>\n</li>\n<li><p><code>ZINCRBY key increment member</code>：让sorted set中的指定元素自增，步长为指定的<code>increment</code>值</p>\n</li>\n<li><p><code>ZRANGE key min max</code>：按照<code>score</code>排序后，获取指定排名范围内的元素</p>\n</li>\n<li><p><code>ZRANGEBYSCORE key min max</code>：按照<code>score</code>排序后，获取指定<code>score</code>范围内的元素</p>\n</li>\n<li><p><code>ZDIFF</code>、<code>ZINTER</code>、<code>ZUNION</code>：求差集、交集、并集</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>所有的排名默认都是升序，如果要降序则在命令的Z后面添加REV即可，例如：<code>ZREVRANK key memeber</code></p></blockquote>\n</li>\n</ul>\n","text":"Redis命令行客户端Redis安装完成后就自带了命令行客户端：redis-cli，使用方式如下： shredis-cli [options] [commond...","permalink":"/post/0437c0ef9a3f376d408b0ef08ee77a3d","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"Redis","slug":"Redis","count":4,"path":"api/categories/Redis.json"}],"tags":[{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"Redis","slug":"Redis","count":4,"path":"api/tags/Redis.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Redis%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%A2%E6%88%B7%E7%AB%AF\"><span class=\"toc-text\">Redis命令行客户端</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Redis%E7%9A%84%E9%80%9A%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">Redis的通用命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#String%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">String类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#String%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">String的常用命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Key%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">Key结构</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Hash%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Hash类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Hash%E7%9A%84%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">Hash的常见命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#List%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">List类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#List%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">List常见命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Set%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Set类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Set%E7%9A%84%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">Set的常见命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SortedSet%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">SortedSet类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SortedSet%E7%9A%84%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">SortedSet的常见命令</span></a></li></ol></li></ol></li></ol>","author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"习近平新时代中国特色社会主义思想概论","uid":"3d9d8863a52feda63ba7c666e672315d","slug":"3d9d8863a52feda63ba7c666e672315d","date":"2023-05-10T10:31:09.000Z","updated":"2024-03-17T09:33:42.220Z","comments":true,"path":"api/articles/3d9d8863a52feda63ba7c666e672315d.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/R.jpg","text":" 第一讲 马克思主义中国化新飞跃一、习近平新时代中国特色社会主义思想如何创立的时代背景：”两个大局”同步交织两个大局：中华民族伟大复兴的战略全局；世界百年未有之...","permalink":"/post/3d9d8863a52feda63ba7c666e672315d","photos":[],"count_time":{"symbolsCount":"69k","symbolsTime":"1:03"},"categories":[{"name":"trash","slug":"trash","count":3,"path":"api/categories/trash.json"}],"tags":[{"name":"learning","slug":"learning","count":8,"path":"api/tags/learning.json"},{"name":"trash","slug":"trash","count":3,"path":"api/tags/trash.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"The Best Way For A Student To Make Friends","uid":"aaff5ef21db577e0ee734c817bd9cecf","slug":"aaff5ef21db577e0ee734c817bd9cecf","date":"2023-05-04T03:31:21.000Z","updated":"2024-03-17T05:25:03.063Z","comments":true,"path":"api/articles/aaff5ef21db577e0ee734c817bd9cecf.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/friend.jpg","text":"Friendship is an essential aspect of a student’s life that fosters personal grow...","permalink":"/post/aaff5ef21db577e0ee734c817bd9cecf","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"English","slug":"English","count":4,"path":"api/categories/English.json"}],"tags":[{"name":"English","slug":"English","count":4,"path":"api/tags/English.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}