{"title":"数据结构函数复习","uid":"4f12ac090a36ba71bea43af761b2b20a","slug":"数据结构函数复习","date":"2023-07-02T13:55:06.000Z","updated":"2024-03-17T09:35:26.516Z","comments":true,"path":"api/articles/数据结构函数复习.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","content":"<figure class=\"shiki cpp\"><div class='codeblock'><div class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br></pre></div><div class=\"code\"><pre class=\"shiki One Dark Pro\"><code><span class=\"line\"><span style=\"color: #C678DD\">#define</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">INF</span><span style=\"color: #ABB2BF\"> 0x3f3f3f</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> MAXN </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1000</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * 欧拉函数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">n</span><span style=\"color: #7F848E\"> 一个整数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@return</span><span style=\"color: #7F848E\"> 质因数个数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">eular</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">n</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> r </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">&lt;=</span><span style=\"color: #ABB2BF\"> n; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (n </span><span style=\"color: #56B6C2\">%</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">==</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            n </span><span style=\"color: #C678DD\">/=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            r </span><span style=\"color: #C678DD\">*=</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (n </span><span style=\"color: #56B6C2\">%</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                n </span><span style=\"color: #C678DD\">/=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                r </span><span style=\"color: #C678DD\">*=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (n </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">) r </span><span style=\"color: #C678DD\">*=</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\">  r;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * 约瑟夫问题</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">n</span><span style=\"color: #7F848E\"> 总人数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">m</span><span style=\"color: #7F848E\"> 出队报数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">joseph</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">n</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">m</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    list</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> l;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;=</span><span style=\"color: #ABB2BF\"> n; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">push_back</span><span style=\"color: #ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">auto</span><span style=\"color: #ABB2BF\"> it </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">begin</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">size</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> j </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">; j </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> m; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">j) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">it;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (it </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">end</span><span style=\"color: #ABB2BF\">()) it </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">begin</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    it </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">erase</span><span style=\"color: #ABB2BF\">(it);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (it </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">end</span><span style=\"color: #ABB2BF\">()) it </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">begin</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    cout </span><span style=\"color: #C678DD\">&lt;&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\">it </span><span style=\"color: #C678DD\">&lt;&lt;</span><span style=\"color: #ABB2BF\"> endl;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * 波兰表达式</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@return</span><span style=\"color: #7F848E\"> 表达式结果</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">double</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">poland</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    string s;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    cin </span><span style=\"color: #C678DD\">&gt;&gt;</span><span style=\"color: #ABB2BF\"> s;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">switch</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">]) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">case</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;+&#39;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">poland</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">poland</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">case</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;-&#39;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">poland</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">poland</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">case</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;*&#39;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">poland</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">poland</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">case</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;/&#39;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">poland</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #56B6C2\">/</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">poland</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">default</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">stod</span><span style=\"color: #ABB2BF\">(s);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> cnt </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * 汉诺塔算法</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">n</span><span style=\"color: #7F848E\"> 编号</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">x</span><span style=\"color: #7F848E\"> x柱</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">y</span><span style=\"color: #7F848E\"> y柱</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">z</span><span style=\"color: #7F848E\"> z柱</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">hanoi</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">n</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">char</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">x</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">char</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">y</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">char</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">z</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (n </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF; font-weight: bold\">printf</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;</span><span style=\"color: #D19A66\">%d</span><span style=\"color: #98C379\"> </span><span style=\"color: #D19A66\">%d</span><span style=\"color: #98C379\"> </span><span style=\"color: #D19A66\">%c</span><span style=\"color: #98C379\">=&gt;</span><span style=\"color: #D19A66\">%c</span><span style=\"color: #56B6C2\">\\n</span><span style=\"color: #98C379\">&quot;</span><span style=\"color: #ABB2BF\">, cnt</span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">, n, x, z);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF; font-weight: bold\">hanoi</span><span style=\"color: #ABB2BF\">(n </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">, x, z, y);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF; font-weight: bold\">printf</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;</span><span style=\"color: #D19A66\">%d</span><span style=\"color: #98C379\"> </span><span style=\"color: #D19A66\">%d</span><span style=\"color: #98C379\"> </span><span style=\"color: #D19A66\">%c</span><span style=\"color: #98C379\">=&gt;</span><span style=\"color: #D19A66\">%c</span><span style=\"color: #56B6C2\">\\n</span><span style=\"color: #98C379\">&quot;</span><span style=\"color: #ABB2BF\">, cnt</span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">, n, x, z);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF; font-weight: bold\">hanoi</span><span style=\"color: #ABB2BF\">(n </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">, y, x, z);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">struct</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Edge</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> from, to, cost;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF; font-weight: bold\">Edge</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">u</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">v</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">w</span><span style=\"color: #ABB2BF\">) : </span><span style=\"color: #61AFEF; font-weight: bold\">from</span><span style=\"color: #ABB2BF\">(u), </span><span style=\"color: #61AFEF; font-weight: bold\">to</span><span style=\"color: #ABB2BF\">(v), </span><span style=\"color: #61AFEF; font-weight: bold\">cost</span><span style=\"color: #ABB2BF\">(w) {}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">operator</span><span style=\"color: #ABB2BF\">&lt; (</span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Edge</span><span style=\"color: #C678DD\">&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">x</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> cost </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">x</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">struct</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HeapNode</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> d, u;</span><span style=\"color: #7F848E\"> // d表示点u到MST的距离</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">operator</span><span style=\"color: #ABB2BF\">&lt; (</span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HeapNode</span><span style=\"color: #C678DD\">&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">rhs</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> d </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">rhs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">d</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF; font-weight: bold\">HeapNode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">d</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">u</span><span style=\"color: #ABB2BF\">) : </span><span style=\"color: #61AFEF; font-weight: bold\">d</span><span style=\"color: #ABB2BF\">(d), </span><span style=\"color: #61AFEF; font-weight: bold\">u</span><span style=\"color: #ABB2BF\">(u) {}</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">vector</span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\">Edge</span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> edges;</span><span style=\"color: #7F848E\"> // edges存所有边</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">vector</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">G</span><span style=\"color: #ABB2BF\">[MAXN];</span><span style=\"color: #7F848E\"> // G[i]是顶点i发出的所有边</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * for (int i = 0; i &lt; E; ++i) { // E是边数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> *  int u, v, cost;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> *  cin &gt;&gt; u &gt;&gt; v &gt;&gt; cost;  // 输入边的起点、终点和权值</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> *  G[u].push_back(i);  // 存储边的索引</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> *  edges.push_back(Edge(u, v, cost));</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> *  G[v].push_back(i);  // 存储边的索引</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> *  edges.push_back(Edge(v, u, cost));</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * }</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[MAXN];</span><span style=\"color: #7F848E\"> // i是否已经加入了T</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[MAXN];</span><span style=\"color: #7F848E\"> // 每个点到T的最小距离</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * Prim算法</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #7F848E\"> 顶点数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@return</span><span style=\"color: #7F848E\"> 最小生成树长度</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">Prim</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   priority_queue</span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\">HeapNode</span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> Q;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> ans </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[i] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> INF;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #61AFEF; font-weight: bold\">memset</span><span style=\"color: #ABB2BF\">(done, </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">sizeof</span><span style=\"color: #ABB2BF\">(done));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">emplace</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">empty</span><span style=\"color: #ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       HeapNode x </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">top</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">pop</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> u </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">x</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">u</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[u]) </span><span style=\"color: #C678DD\">continue</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       ans </span><span style=\"color: #C678DD\">+=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">x</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">d</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[u] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i : </span><span style=\"color: #E5C07B\">G</span><span style=\"color: #ABB2BF\">[u]) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">           Edge</span><span style=\"color: #56B6C2\">&amp;</span><span style=\"color: #ABB2BF\"> e </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">[i];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">           </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">               </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">               </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">emplace</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">], </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">           }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> ans;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * 并查集</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">UnionFind</span><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">private:</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    vector</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> par;</span><span style=\"color: #7F848E\"> // 存储父节点</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public:</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF; font-weight: bold\">UnionFind</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">emplace_back</span><span style=\"color: #ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * 查找根节点</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">x</span><span style=\"color: #7F848E\"> 待查节点</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * </span><span style=\"color: #C678DD\">@return</span><span style=\"color: #7F848E\"> 根节点</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">find</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">x</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">[x] </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> x) </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">[x] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">find</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">[x]);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * 合并</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">x</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">y</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">unite</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">x</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">y</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        x </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">find</span><span style=\"color: #ABB2BF\">(x);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        y </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">find</span><span style=\"color: #ABB2BF\">(y);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (x </span><span style=\"color: #C678DD\">!=</span><span style=\"color: #ABB2BF\"> y) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">[x] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> y;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * 判断是否连通</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">x</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">y</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * </span><span style=\"color: #C678DD\">@return</span><span style=\"color: #7F848E\"> 是否连通</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">same</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">x</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">y</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">find</span><span style=\"color: #ABB2BF\">(x) </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">find</span><span style=\"color: #ABB2BF\">(y);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * Kruskal算法</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #7F848E\"> 顶点数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@return</span><span style=\"color: #7F848E\"> 最小生成树长度</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">Kruskal</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF; font-weight: bold\">sort</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">begin</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">end</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    UnionFind UF </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">UnionFind</span><span style=\"color: #ABB2BF\">(V);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> ans </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (Edge e : edges) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">UF</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">same</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">)) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">UF</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">unite</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            ans </span><span style=\"color: #C678DD\">+=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> ans;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">[MAXN];</span><span style=\"color: #7F848E\"> // 记录到顶点i的是哪条边</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * Dijkstra算法 计算所有顶点到顶点s的最短路径</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">s</span><span style=\"color: #7F848E\"> 顶点s</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #7F848E\"> 顶点数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">Dijkstra</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">s</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    priority_queue</span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\">HeapNode</span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> Q;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[i] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> INF;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[s] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF; font-weight: bold\">memset</span><span style=\"color: #ABB2BF\">(done, </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> ,</span><span style=\"color: #C678DD\">sizeof</span><span style=\"color: #ABB2BF\">(done));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">emplace</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, s);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">empty</span><span style=\"color: #ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        HeapNode x </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">top</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">pop</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> u </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">x</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">u</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[u]) </span><span style=\"color: #C678DD\">continue</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[u] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i : </span><span style=\"color: #E5C07B\">G</span><span style=\"color: #ABB2BF\">[u]) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            Edge</span><span style=\"color: #56B6C2\">&amp;</span><span style=\"color: #ABB2BF\"> e </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">[i];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[u] </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[u] </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">emplace</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">], </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[MAXN][MAXN];</span><span style=\"color: #7F848E\"> // 距离矩阵</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[MAXN][MAXN];</span><span style=\"color: #7F848E\"> // 路径数组</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * FloydWarshall算法 计算全源最短路径</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #7F848E\"> 顶点数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">FloydWarshall</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">    // 初始化距离数组</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> j </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; j </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">j) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (i </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> j) </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> INF;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">    // 更新距离矩阵</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (Edge e : edges) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">][</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">][</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">][</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">    // 计算最短路径</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> k </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; k </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">k) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> j </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; j </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">j) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][k] </span><span style=\"color: #C678DD\">!=</span><span style=\"color: #ABB2BF\"> INF </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[k][j] </span><span style=\"color: #C678DD\">!=</span><span style=\"color: #ABB2BF\"> INF </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][k] </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[k][j]) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                    </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][k] </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[k][j];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                    </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[k][j];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * 拓扑排序</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">V</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * </span><span style=\"color: #C678DD\">@return</span><span style=\"color: #7F848E\"> 拓扑序列</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">vector</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #61AFEF; font-weight: bold\">TopologicalSort</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">V</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">inDegree</span><span style=\"color: #ABB2BF\">[MAXN];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    vector</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> result;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    queue</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> Q;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (Edge e : edges) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">inDegree</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">]</span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">inDegree</span><span style=\"color: #ABB2BF\">[i] </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">emplace</span><span style=\"color: #ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">empty</span><span style=\"color: #ABB2BF\">()) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> u </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">front</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">pop</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">emplace_back</span><span style=\"color: #ABB2BF\">(u);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i : </span><span style=\"color: #E5C07B\">G</span><span style=\"color: #ABB2BF\">[u]) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            Edge</span><span style=\"color: #56B6C2\">&amp;</span><span style=\"color: #ABB2BF\"> e </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">[i];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> v </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">--</span><span style=\"color: #E5C07B\">inDegree</span><span style=\"color: #ABB2BF\">[v] </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">emplace</span><span style=\"color: #ABB2BF\">(v);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> * 小根堆</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">MinHeap</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">private:</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    vector</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> a;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public:</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * 调整堆</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">i</span><span style=\"color: #7F848E\"> 传入节点下标</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF; font-weight: bold\">adjustHeap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">i</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">size</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> lChild </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> rChild </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> minI </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (lChild </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[lChild] </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[minI]) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            minI </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> lChild;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (rChild </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[rChild] </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[minI]) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            minI </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> rChild;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (minI </span><span style=\"color: #C678DD\">!=</span><span style=\"color: #ABB2BF\"> i) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #61AFEF; font-weight: bold\">swap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[minI], </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[i]);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #61AFEF; font-weight: bold\">adjustHeap</span><span style=\"color: #ABB2BF\">(minI);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * 构造函数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     * </span><span style=\"color: #C678DD\">@param</span><span style=\"color: #7F848E\"> </span><span style=\"color: #E06C75\">b</span><span style=\"color: #7F848E\"> 原始数组</span></span>\n<span class=\"line\"><span style=\"color: #7F848E\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF; font-weight: bold\">MinHeap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">vector</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #C678DD\">&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">b</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        a </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> b;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">b</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF; font-weight: bold\">size</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #56B6C2\">/</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&gt;=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; </span><span style=\"color: #C678DD\">--</span><span style=\"color: #ABB2BF\">i) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #61AFEF; font-weight: bold\">adjustHeap</span><span style=\"color: #ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span></code></pre></div></div></figure>\n","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444...","permalink":"/post/数据结构函数复习","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"toc":"","author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"数据结构理论复习","uid":"325341d7aca4ae9e9137504312678fc9","slug":"DataStructureNote","date":"2023-07-04T08:14:30.000Z","updated":"2024-03-17T09:32:19.255Z","comments":true,"path":"api/articles/DataStructureNote.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":" 绪论 数据结构的定义 数据是描述客观事物的数、字符以及所有能输入到计算机中并被计算机程序处理的符号的集合。 数据元素是数据的基本单位（例如，A班中的每个学生记...","permalink":"/post/DataStructureNote","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"哈夫曼树叶子结点的路径长度与权值的乘积之和","uid":"5a1621912b73a3abad1cd8da411425b8","slug":"哈夫曼树6-28","date":"2023-06-28T08:15:04.000Z","updated":"2024-03-17T05:28:55.230Z","comments":true,"path":"api/articles/哈夫曼树6-28.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":" 题目描述 哈夫曼树，第一行输入一个数n，表示叶结点的个数。需要用这些叶结点生成哈夫曼树，根据哈夫曼树的概念，这些结点有权值，即weight，题目需要输出所有叶...","permalink":"/post/哈夫曼树6-28","photos":[],"count_time":{"symbolsCount":749,"symbolsTime":"1 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"tree","slug":"tree","count":2,"path":"api/tags/tree.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}