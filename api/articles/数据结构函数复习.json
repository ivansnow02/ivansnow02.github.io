{"title":"数据结构函数复习","uid":"4f12ac090a36ba71bea43af761b2b20a","slug":"数据结构函数复习","date":"2023-07-02T13:55:06.000Z","updated":"2024-03-17T09:35:26.516Z","comments":true,"path":"api/articles/数据结构函数复习.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","content":"<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">#define</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">INF</span><span style=\"color: #ABB2BF\"> 0x3f3f3f</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> MAXN </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1000</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * 欧拉函数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">n</span><span style=\"color: #7F848E; font-style: italic\"> 一个整数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@return</span><span style=\"color: #7F848E; font-style: italic\"> 质因数个数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">eular</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">n</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> r </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">&lt;=</span><span style=\"color: #ABB2BF\"> n; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (n </span><span style=\"color: #56B6C2\">%</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">==</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            n </span><span style=\"color: #C678DD\">/=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            r </span><span style=\"color: #C678DD\">*=</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (n </span><span style=\"color: #56B6C2\">%</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                n </span><span style=\"color: #C678DD\">/=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                r </span><span style=\"color: #C678DD\">*=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (n </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">) r </span><span style=\"color: #C678DD\">*=</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\">  r;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * 约瑟夫问题</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">n</span><span style=\"color: #7F848E; font-style: italic\"> 总人数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">m</span><span style=\"color: #7F848E; font-style: italic\"> 出队报数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">joseph</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">n</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">m</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    list</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> l;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;=</span><span style=\"color: #ABB2BF\"> n; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">push_back</span><span style=\"color: #ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">auto</span><span style=\"color: #ABB2BF\"> it </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">begin</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">size</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> j </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">; j </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> m; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">j) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">it;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (it </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">end</span><span style=\"color: #ABB2BF\">()) it </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">begin</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    it </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">erase</span><span style=\"color: #ABB2BF\">(it);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (it </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">end</span><span style=\"color: #ABB2BF\">()) it </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">l</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">begin</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    cout </span><span style=\"color: #C678DD\">&lt;&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\">it </span><span style=\"color: #C678DD\">&lt;&lt;</span><span style=\"color: #ABB2BF\"> endl;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * 波兰表达式</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@return</span><span style=\"color: #7F848E; font-style: italic\"> 表达式结果</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">double</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">poland</span><span style=\"color: #ABB2BF\">() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    string s;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    cin </span><span style=\"color: #C678DD\">&gt;&gt;</span><span style=\"color: #ABB2BF\"> s;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">switch</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">]) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">case</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;+&#39;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">poland</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">poland</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">case</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;-&#39;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">poland</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">poland</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">case</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;*&#39;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">poland</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">poland</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">case</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;/&#39;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">poland</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #56B6C2\">/</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">poland</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">default</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">stod</span><span style=\"color: #ABB2BF\">(s);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> cnt </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * 汉诺塔算法</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">n</span><span style=\"color: #7F848E; font-style: italic\"> 编号</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">x</span><span style=\"color: #7F848E; font-style: italic\"> x柱</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">y</span><span style=\"color: #7F848E; font-style: italic\"> y柱</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">z</span><span style=\"color: #7F848E; font-style: italic\"> z柱</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">hanoi</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">n</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">char</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">x</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">char</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">y</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">char</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">z</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (n </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">printf</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;</span><span style=\"color: #D19A66\">%d</span><span style=\"color: #98C379\"> </span><span style=\"color: #D19A66\">%d</span><span style=\"color: #98C379\"> </span><span style=\"color: #D19A66\">%c</span><span style=\"color: #98C379\">=&gt;</span><span style=\"color: #D19A66\">%c</span><span style=\"color: #56B6C2\">\\n</span><span style=\"color: #98C379\">&quot;</span><span style=\"color: #ABB2BF\">, cnt</span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">, n, x, z);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">hanoi</span><span style=\"color: #ABB2BF\">(n </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">, x, z, y);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">printf</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;</span><span style=\"color: #D19A66\">%d</span><span style=\"color: #98C379\"> </span><span style=\"color: #D19A66\">%d</span><span style=\"color: #98C379\"> </span><span style=\"color: #D19A66\">%c</span><span style=\"color: #98C379\">=&gt;</span><span style=\"color: #D19A66\">%c</span><span style=\"color: #56B6C2\">\\n</span><span style=\"color: #98C379\">&quot;</span><span style=\"color: #ABB2BF\">, cnt</span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">, n, x, z);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">hanoi</span><span style=\"color: #ABB2BF\">(n </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">, y, x, z);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">struct</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Edge</span><span style=\"color: #ABB2BF\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> from, to, cost;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF\">Edge</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">u</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">v</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">w</span><span style=\"color: #ABB2BF\">) : </span><span style=\"color: #61AFEF\">from</span><span style=\"color: #ABB2BF\">(u), </span><span style=\"color: #61AFEF\">to</span><span style=\"color: #ABB2BF\">(v), </span><span style=\"color: #61AFEF\">cost</span><span style=\"color: #ABB2BF\">(w) &#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">operator</span><span style=\"color: #ABB2BF\">&lt; (</span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Edge</span><span style=\"color: #C678DD\">&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">x</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> cost </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">x</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">struct</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HeapNode</span><span style=\"color: #ABB2BF\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> d, u;</span><span style=\"color: #7F848E; font-style: italic\"> // d表示点u到MST的距离</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">operator</span><span style=\"color: #ABB2BF\">&lt; (</span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HeapNode</span><span style=\"color: #C678DD\">&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">rhs</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> d </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">rhs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">d</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF\">HeapNode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">d</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">u</span><span style=\"color: #ABB2BF\">) : </span><span style=\"color: #61AFEF\">d</span><span style=\"color: #ABB2BF\">(d), </span><span style=\"color: #61AFEF\">u</span><span style=\"color: #ABB2BF\">(u) &#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">vector</span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\">Edge</span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> edges;</span><span style=\"color: #7F848E; font-style: italic\"> // edges存所有边</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">vector</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">G</span><span style=\"color: #ABB2BF\">[MAXN];</span><span style=\"color: #7F848E; font-style: italic\"> // G[i]是顶点i发出的所有边</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * for (int i = 0; i &lt; E; ++i) &#123; // E是边数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> *  int u, v, cost;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> *  cin &gt;&gt; u &gt;&gt; v &gt;&gt; cost;  // 输入边的起点、终点和权值</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> *  G[u].push_back(i);  // 存储边的索引</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> *  edges.push_back(Edge(u, v, cost));</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> *  G[v].push_back(i);  // 存储边的索引</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> *  edges.push_back(Edge(v, u, cost));</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * &#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[MAXN];</span><span style=\"color: #7F848E; font-style: italic\"> // i是否已经加入了T</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[MAXN];</span><span style=\"color: #7F848E; font-style: italic\"> // 每个点到T的最小距离</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * Prim算法</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #7F848E; font-style: italic\"> 顶点数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@return</span><span style=\"color: #7F848E; font-style: italic\"> 最小生成树长度</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Prim</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   priority_queue</span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\">HeapNode</span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> Q;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> ans </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[i] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> INF;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #61AFEF\">memset</span><span style=\"color: #ABB2BF\">(done, </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">sizeof</span><span style=\"color: #ABB2BF\">(done));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">emplace</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">empty</span><span style=\"color: #ABB2BF\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       HeapNode x </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">top</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">pop</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> u </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">x</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">u</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[u]) </span><span style=\"color: #C678DD\">continue</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       ans </span><span style=\"color: #C678DD\">+=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">x</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">d</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[u] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i : </span><span style=\"color: #E5C07B\">G</span><span style=\"color: #ABB2BF\">[u]) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">           Edge</span><span style=\"color: #56B6C2\">&amp;</span><span style=\"color: #ABB2BF\"> e </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">[i];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">           </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">               </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">               </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">emplace</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">], </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">           &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> ans;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * 并查集</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">UnionFind</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">private:</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    vector</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> par;</span><span style=\"color: #7F848E; font-style: italic\"> // 存储父节点</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public:</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF\">UnionFind</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">emplace_back</span><span style=\"color: #ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * 查找根节点</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">x</span><span style=\"color: #7F848E; font-style: italic\"> 待查节点</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * </span><span style=\"color: #C678DD; font-style: italic\">@return</span><span style=\"color: #7F848E; font-style: italic\"> 根节点</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">find</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">x</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">[x] </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> x) </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">[x] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">find</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">[x]);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * 合并</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">x</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">y</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">unite</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">x</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">y</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        x </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">find</span><span style=\"color: #ABB2BF\">(x);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        y </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">find</span><span style=\"color: #ABB2BF\">(y);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (x </span><span style=\"color: #C678DD\">!=</span><span style=\"color: #ABB2BF\"> y) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">par</span><span style=\"color: #ABB2BF\">[x] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> y;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * 判断是否连通</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">x</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">y</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * </span><span style=\"color: #C678DD; font-style: italic\">@return</span><span style=\"color: #7F848E; font-style: italic\"> 是否连通</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">bool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">same</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">x</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">y</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">find</span><span style=\"color: #ABB2BF\">(x) </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">find</span><span style=\"color: #ABB2BF\">(y);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * Kruskal算法</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #7F848E; font-style: italic\"> 顶点数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@return</span><span style=\"color: #7F848E; font-style: italic\"> 最小生成树长度</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Kruskal</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF\">sort</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">begin</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">end</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    UnionFind UF </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">UnionFind</span><span style=\"color: #ABB2BF\">(V);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> ans </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (Edge e : edges) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">UF</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">same</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">UF</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">unite</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            ans </span><span style=\"color: #C678DD\">+=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> ans;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">[MAXN];</span><span style=\"color: #7F848E; font-style: italic\"> // 记录到顶点i的是哪条边</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * Dijkstra算法 计算所有顶点到顶点s的最短路径</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">s</span><span style=\"color: #7F848E; font-style: italic\"> 顶点s</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #7F848E; font-style: italic\"> 顶点数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Dijkstra</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">s</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    priority_queue</span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\">HeapNode</span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> Q;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[i] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> INF;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[s] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF\">memset</span><span style=\"color: #ABB2BF\">(done, </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> ,</span><span style=\"color: #C678DD\">sizeof</span><span style=\"color: #ABB2BF\">(done));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">emplace</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, s);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">empty</span><span style=\"color: #ABB2BF\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        HeapNode x </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">top</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">pop</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> u </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">x</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">u</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[u]) </span><span style=\"color: #C678DD\">continue</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">done</span><span style=\"color: #ABB2BF\">[u] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i : </span><span style=\"color: #E5C07B\">G</span><span style=\"color: #ABB2BF\">[u]) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            Edge</span><span style=\"color: #56B6C2\">&amp;</span><span style=\"color: #ABB2BF\"> e </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">[i];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[u] </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[u] </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">emplace</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">d</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">], </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[MAXN][MAXN];</span><span style=\"color: #7F848E; font-style: italic\"> // 距离矩阵</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[MAXN][MAXN];</span><span style=\"color: #7F848E; font-style: italic\"> // 路径数组</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * FloydWarshall算法 计算全源最短路径</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #7F848E; font-style: italic\"> 顶点数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">FloydWarshall</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">    // 初始化距离数组</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> j </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; j </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">j) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (i </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> j) </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> INF;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">    // 更新距离矩阵</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (Edge e : edges) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">][</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">][</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">cost</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">][</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">    // 计算最短路径</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> k </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; k </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">k) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> j </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; j </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">j) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][k] </span><span style=\"color: #C678DD\">!=</span><span style=\"color: #ABB2BF\"> INF </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[k][j] </span><span style=\"color: #C678DD\">!=</span><span style=\"color: #ABB2BF\"> INF </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][k] </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[k][j]) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                    </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[i][k] </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">dis</span><span style=\"color: #ABB2BF\">[k][j];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                    </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[i][j] </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">p</span><span style=\"color: #ABB2BF\">[k][j];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * 拓扑排序</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * </span><span style=\"color: #C678DD; font-style: italic\">@return</span><span style=\"color: #7F848E; font-style: italic\"> 拓扑序列</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">vector</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #61AFEF\">TopologicalSort</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">V</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">inDegree</span><span style=\"color: #ABB2BF\">[MAXN];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    vector</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> result;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    queue</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> Q;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (Edge e : edges) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">inDegree</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">]</span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> V; </span><span style=\"color: #C678DD\">++</span><span style=\"color: #ABB2BF\">i) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">inDegree</span><span style=\"color: #ABB2BF\">[i] </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">emplace</span><span style=\"color: #ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">empty</span><span style=\"color: #ABB2BF\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> u </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">front</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">pop</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">result</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">emplace_back</span><span style=\"color: #ABB2BF\">(u);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i : </span><span style=\"color: #E5C07B\">G</span><span style=\"color: #ABB2BF\">[u]) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            Edge</span><span style=\"color: #56B6C2\">&amp;</span><span style=\"color: #ABB2BF\"> e </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">edges</span><span style=\"color: #ABB2BF\">[i];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> v </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">e</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">--</span><span style=\"color: #E5C07B\">inDegree</span><span style=\"color: #ABB2BF\">[v] </span><span style=\"color: #C678DD\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #E5C07B\">Q</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">emplace</span><span style=\"color: #ABB2BF\">(v);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> * 小根堆</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">MinHeap</span><span style=\"color: #ABB2BF\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">private:</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    vector</span><span style=\"color: #C678DD\">&lt;int&gt;</span><span style=\"color: #ABB2BF\"> a;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public:</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * 调整堆</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">i</span><span style=\"color: #7F848E; font-style: italic\"> 传入节点下标</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">void</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">adjustHeap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">i</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">size</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> lChild </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> rChild </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> minI </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (lChild </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[lChild] </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[minI]) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            minI </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> lChild;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (rChild </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[rChild] </span><span style=\"color: #C678DD\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[minI]) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            minI </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> rChild;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (minI </span><span style=\"color: #C678DD\">!=</span><span style=\"color: #ABB2BF\"> i) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #61AFEF\">swap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[minI], </span><span style=\"color: #E5C07B\">a</span><span style=\"color: #ABB2BF\">[i]);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #61AFEF\">adjustHeap</span><span style=\"color: #ABB2BF\">(minI);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">    /**</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * 构造函数</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     * </span><span style=\"color: #C678DD; font-style: italic\">@param</span><span style=\"color: #7F848E; font-style: italic\"> </span><span style=\"color: #E06C75; font-style: italic\">b</span><span style=\"color: #7F848E; font-style: italic\"> 原始数组</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">     */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF\">MinHeap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">vector</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #C678DD\">&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">b</span><span style=\"color: #ABB2BF\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        a </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> b;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">b</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">size</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #C678DD\">=</span><span style=\"color: #ABB2BF\"> n </span><span style=\"color: #56B6C2\">/</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #C678DD\">&gt;=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; </span><span style=\"color: #C678DD\">--</span><span style=\"color: #ABB2BF\">i) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #61AFEF\">adjustHeap</span><span style=\"color: #ABB2BF\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;;</span></span></code></pre></div>","text":"cpp#define INF 0x3f3f3f const int MAXN = 1000; /** * 欧拉函数 * @param n 一个整数 * @ret...","permalink":"/post/数据结构函数复习","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"toc":"","author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"数据结构理论复习","uid":"325341d7aca4ae9e9137504312678fc9","slug":"DataStructureNote","date":"2023-07-04T08:14:30.000Z","updated":"2024-03-17T09:32:19.255Z","comments":true,"path":"api/articles/DataStructureNote.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":" 绪论数据结构的定义 数据是描述客观事物的数、字符以及所有能输入到计算机中并被计算机程序处理的符号的集合。 数据元素是数据的基本单位（例如，A班中的每个学生记录...","permalink":"/post/DataStructureNote","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"哈夫曼树叶子结点的路径长度与权值的乘积之和","uid":"5a1621912b73a3abad1cd8da411425b8","slug":"哈夫曼树6-28","date":"2023-06-28T08:15:04.000Z","updated":"2024-03-17T05:28:55.230Z","comments":true,"path":"api/articles/哈夫曼树6-28.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"题目描述哈夫曼树，第一行输入一个数n，表示叶结点的个数。需要用这些叶结点生成哈夫曼树，根据哈夫曼树的概念，这些结点有权值，即weight，题目需要输出所有叶子结...","permalink":"/post/哈夫曼树6-28","photos":[],"count_time":{"symbolsCount":904,"symbolsTime":"1 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"tree","slug":"tree","count":2,"path":"api/tags/tree.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}