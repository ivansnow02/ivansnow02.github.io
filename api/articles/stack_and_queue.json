{"title":"栈与队列","uid":"333795d348e8e56df1fa020b8443f458","slug":"stack_and_queue","date":"2023-05-30T02:25:48.000Z","updated":"2024-03-17T05:30:00.801Z","comments":true,"path":"api/articles/stack_and_queue.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>栈和队列可以说是最基本的数据结构了，它们都是在两端进行操作，其中栈在栈顶进行操作，被称为先进后出（LIFO），队列在队头和队尾进行操作，被称为先进先出（FIFO）</p></blockquote>\n<img src=\"/post/stack_and_queue/image-20230530103359493.png\" class=\"\">\n\n<h2 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a>栈</h2><p>直接来看看API吧：</p>\n<h3 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h3><table>\n<thead>\n<tr>\n<th>public class Stack</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Stack()</td>\n<td>构造一个空栈</td>\n</tr>\n<tr>\n<td>void push(Item item)</td>\n<td>入栈</td>\n</tr>\n<tr>\n<td>Item pop()</td>\n<td>出栈</td>\n</tr>\n<tr>\n<td>boolean isEmpty()</td>\n<td>判空</td>\n</tr>\n<tr>\n<td>int size()</td>\n<td>大小</td>\n</tr>\n</tbody></table>\n<h3 id=\"链栈\"><a href=\"#链栈\" class=\"headerlink\" title=\"链栈\"></a>链栈</h3><p>顾名思义，基于链表实现的栈</p>\n<p>其中的一个结点：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #E06C75\"> item</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> next</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><p>完整代码：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">LinkedStack</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> first </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #E06C75\"> item</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> next</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">boolean</span><span style=\"color: #61AFEF\"> isEmpty</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> first </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> push</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">item</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">oldfirst</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> first;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        first </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Node</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">first</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">first</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">next</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> oldfirst;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #61AFEF\"> pop</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">first</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">item</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        first </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">first</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">next</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><h3 id=\"顺序栈\"><a href=\"#顺序栈\" class=\"headerlink\" title=\"顺序栈\"></a>顺序栈</h3><p>基于数组（顺序表）实现的栈是顺序栈</p>\n<p>简单实现一个定长的栈：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">FixedCapacityStack</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #E06C75\">[] s</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">int</span><span style=\"color: #E06C75\"> N </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> FixedCapacityStack</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">capacity</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        s </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">[]) </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[capacity]; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span><span style=\"color: #E06C75\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">boolean</span><span style=\"color: #61AFEF\"> isEmpty</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> N </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> push</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">item</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        s[N++] </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> item; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #61AFEF\"> pop</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> s[--N]; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><p>但是定长的栈需要获取<code>capacity</code>，而这又需要客户端提供，然而大部分时间客户端是不知道所需的容量的。</p>\n<p>于是就有了动态长度的栈：</p>\n<h4 id=\"ResizingArrayStack\"><a href=\"#ResizingArrayStack\" class=\"headerlink\" title=\"ResizingArrayStack\"></a>ResizingArrayStack</h4><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">ResizingArrayStack</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #E06C75\">[] s</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">int</span><span style=\"color: #E06C75\"> N </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> ResizingArrayStack</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        s </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">[]) </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">]; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span><span style=\"color: #E06C75\"> </span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> push</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">item</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (N </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">length</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #61AFEF\">resize</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">*</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">length</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        s[N++] </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #61AFEF\"> pop</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> s[--N]; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        s[N] </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (N </span><span style=\"color: #56B6C2\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> N </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">length</span><span style=\"color: #56B6C2\">/</span><span style=\"color: #D19A66\">4</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #61AFEF\">resize</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">length</span><span style=\"color: #56B6C2\">/</span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> resize</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">capacity</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75\">copy</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">[]) </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[capacity];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">for</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #C678DD\">int</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">i</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">; i </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> N; i++)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            copy[i] </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> s[i];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        s </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> copy;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><p>此时<code>pop</code>和<code>push</code>操作的最坏时间复杂度也是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<h4 id=\"迭代器\"><a href=\"#迭代器\" class=\"headerlink\" title=\"迭代器\"></a>迭代器</h4><p>我们可以为栈写一个迭代器：</p>\n<p>需要实现<code>Iterator&lt;&gt;</code>接口的<code>hasNext</code>和<code>next</code>方法，栈类也需要实现<code>Iterable&lt;&gt;</code>接口</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Iterator</span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #E06C75\">Item</span><span style=\"color: #56B6C2\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">iterator</span><span style=\"color: #E06C75\">() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">ListIterator</span><span style=\"color: #E06C75\">()</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">ListIterator</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">implements</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Iterator</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> current </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> first</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">boolean</span><span style=\"color: #61AFEF\"> hasNext</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> current </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #61AFEF\"> next</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #61AFEF\">hasNext</span><span style=\"color: #ABB2BF\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">throw</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">NoSuchElementException</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">current</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">item</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            current </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">current</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">next</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Iterator</span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #E06C75\">Item</span><span style=\"color: #56B6C2\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">iterator</span><span style=\"color: #E06C75\">() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">ArrayIterator</span><span style=\"color: #E06C75\">()</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">ArrayIterator</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">implements</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Iterator</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">int</span><span style=\"color: #E06C75\"> i </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> N</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">boolean</span><span style=\"color: #61AFEF\"> hasNext</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> i </span><span style=\"color: #56B6C2\">&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #61AFEF\"> next</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #61AFEF\">hasNext</span><span style=\"color: #ABB2BF\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">throw</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">NoSuchElementException</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> s[--N];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><h2 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h2><p>队列是一种基于<strong>先进先出</strong>（FIFO）策略的集合类型</p>\n<h3 id=\"API-1\"><a href=\"#API-1\" class=\"headerlink\" title=\"API\"></a>API</h3><table>\n<thead>\n<tr>\n<th>public class Queue</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Queue()</td>\n<td>构造一个空队列</td>\n</tr>\n<tr>\n<td>void enqueue(Item item)</td>\n<td>入队</td>\n</tr>\n<tr>\n<td>Item dequeue()</td>\n<td>出队</td>\n</tr>\n<tr>\n<td>boolean isEmpty()</td>\n<td>判空</td>\n</tr>\n<tr>\n<td>int size()</td>\n<td>大小</td>\n</tr>\n</tbody></table>\n<h3 id=\"链队\"><a href=\"#链队\" class=\"headerlink\" title=\"链队\"></a>链队</h3><p>直接贴代码，没什么好说的</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">LinkedQueue</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">implements</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Iterable</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">&gt;&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> first</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E06C75\"> last</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #E06C75\"> item</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> next</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">boolean</span><span style=\"color: #61AFEF\"> isEmpty</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123; </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> first </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span><span style=\"color: #E06C75\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> enqueue</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">item</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">oldlast</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> last;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        last </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Node</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">last</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">last</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">next</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #61AFEF\">isEmpty</span><span style=\"color: #ABB2BF\">()) first </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> last;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">oldlast</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">next</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> last;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #61AFEF\"> dequeue</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">first</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">item</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        first </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">first</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">next</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #61AFEF\">isEmpty</span><span style=\"color: #ABB2BF\">()) last </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Iterator</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #61AFEF\"> iterator</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ListIterator</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">ListIterator</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">implements</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Iterator</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\">&gt;</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">private</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Node</span><span style=\"color: #E06C75\"> current </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> first</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">boolean</span><span style=\"color: #61AFEF\"> hasNext</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> current </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">        </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #61AFEF\"> next</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #56B6C2\">!</span><span style=\"color: #61AFEF\">hasNext</span><span style=\"color: #ABB2BF\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">throw</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">NoSuchElementException</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">item</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">current</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">item</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            current </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">current</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">next</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> item;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span><span style=\"color: #E06C75\"> </span></span></code></pre></div><h3 id=\"顺序队列\"><a href=\"#顺序队列\" class=\"headerlink\" title=\"顺序队列\"></a>顺序队列</h3><p>顺序队列是基于顺序表的队列，其实一般都是循环队列，就是栈顶、栈底两个指针，<code>front = (front + 1) ％ MaxSize</code>，<code>rear = (rear + 1) ％ MaxSize</code></p>\n<ul>\n<li>队空条件：<code>rear == front</code></li>\n<li>队满条件：<code>(rear + 1) % MaxSize == front</code></li>\n<li>元素进队：<code>rear = (rear + 1) % MaxSize</code></li>\n<li>元素出队：<code>front = (front + 1) % MaxSize</code></li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">push</span><span style=\"color: #E06C75\">(</span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #E06C75\"> item)\t&#123; </span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">   </span><span style=\"color: #C678DD\">if</span><span style=\"color: #E06C75\"> ((rear </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #E06C75\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #E06C75\">) </span><span style=\"color: #56B6C2\">%</span><span style=\"color: #E06C75\"> MaxSize </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #E06C75\"> front) </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">   rear </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> (rear </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #E06C75\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #E06C75\">) </span><span style=\"color: #56B6C2\">%</span><span style=\"color: #E06C75\"> MaxSize</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">   s[rear] </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> item</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">Item</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">pop</span><span style=\"color: #E06C75\">() &#123;  </span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">   </span><span style=\"color: #C678DD\">if</span><span style=\"color: #E06C75\"> (front </span><span style=\"color: #56B6C2\">==</span><span style=\"color: #E06C75\"> rear) </span><span style=\"color: #C678DD\">throw</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #E06C75\"> </span><span style=\"color: #61AFEF\">NoSuchElementException</span><span style=\"color: #E06C75\">()</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">   front </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> (front </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #E06C75\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #E06C75\">) </span><span style=\"color: #56B6C2\">%</span><span style=\"color: #E06C75\"> MaxSize</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">   </span><span style=\"color: #C678DD\">return</span><span style=\"color: #E06C75\"> s[front]</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div>","text":" 栈和队列可以说是最基本的数据结构了，它们都是在两端进行操作，其中栈在栈顶进行操作，被称为先进后出（LIFO），队列在队头和队尾进行操作，被称为先进先出（FIF...","permalink":"/post/stack_and_queue","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"Algorithms, Part I","slug":"Algorithms-Part-I","count":2,"path":"api/categories/Algorithms-Part-I.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"},{"name":"coursera","slug":"coursera","count":2,"path":"api/tags/coursera.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%88\"><span class=\"toc-text\">栈</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#API\"><span class=\"toc-text\">API</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%93%BE%E6%A0%88\"><span class=\"toc-text\">链栈</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%BA%E5%BA%8F%E6%A0%88\"><span class=\"toc-text\">顺序栈</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ResizingArrayStack\"><span class=\"toc-text\">ResizingArrayStack</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">迭代器</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%98%9F%E5%88%97\"><span class=\"toc-text\">队列</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#API-1\"><span class=\"toc-text\">API</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%93%BE%E9%98%9F\"><span class=\"toc-text\">链队</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%BA%E5%BA%8F%E9%98%9F%E5%88%97\"><span class=\"toc-text\">顺序队列</span></a></li></ol></li></ol>","author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"数据结构题目01","uid":"6a87345b9e9d401bf5be8abeba39da4e","slug":"DataStructureTest01","date":"2023-05-31T08:37:34.000Z","updated":"2024-03-17T05:29:28.487Z","comments":true,"path":"api/articles/DataStructureTest01.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":"1题目描述新年快到了，天勤准备搞一个聚会，已经知道现有会员N人，把会员从1到N编号，其中会长的号码是N号，凡是和会长是老朋友的，那么该会员的号码肯定和N有大于1...","permalink":"/post/DataStructureTest01","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"data structure","slug":"data-structure","count":11,"path":"api/categories/data-structure.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"Union-Find","date":"2023-05-21T10:02:45.000Z","updated":"2024-03-17T05:30:08.470Z","comments":true,"path":"api/articles/Union-Find.json","keywords":"Code, Learning, Backend, Frontend","cover":"/img/DS.png","text":" 本文来自Coursera的Algorithms, Part I课程 动态连通性我们假设“相连”是一种等价关系，这也就意味 着它具有： 自反性：p 和 p 是相...","permalink":"/post/Union-Find","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Algorithms, Part I","slug":"Algorithms-Part-I","count":2,"path":"api/categories/Algorithms-Part-I.json"}],"tags":[{"name":"data structure","slug":"data-structure","count":13,"path":"api/tags/data-structure.json"},{"name":"coding","slug":"coding","count":19,"path":"api/tags/coding.json"},{"name":"algorithms","slug":"algorithms","count":8,"path":"api/tags/algorithms.json"},{"name":"coursera","slug":"coursera","count":2,"path":"api/tags/coursera.json"}],"author":{"name":"Ivan Snow","slug":"blog-author","avatar":"https://ivansnow02.github.io/img/avatar.png","link":"/","description":"目前就读于某大学的计算机科学与技术专业，在学习后端与CV中","socials":{"github":"https://github.com/ivansnow02","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}