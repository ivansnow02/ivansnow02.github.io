<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Snow&#39;s Blog • Posts by &#34;vim&#34; tag</title>
        <link>https://ivansnow02.github.io</link>
        <description>some notes about computer science</description>
        <language>zh-CN</language>
        <pubDate>Mon, 17 Apr 2023 21:44:17 +0800</pubDate>
        <lastBuildDate>Mon, 17 Apr 2023 21:44:17 +0800</lastBuildDate>
        <category>data structure</category>
        <category>coding</category>
        <category>algorithms</category>
        <category>computer science</category>
        <category>learning</category>
        <category>Django</category>
        <category>Python</category>
        <category>Redis</category>
        <category>Java</category>
        <category>English</category>
        <category>trash</category>
        <category>test</category>
        <category>coursera</category>
        <category>vim</category>
        <category>Spring</category>
        <category>Math</category>
        <category>Linear Algebra</category>
        <category>tree</category>
        <category>Physics</category>
        <category>Discrete Mathematics</category>
        <item>
            <guid isPermalink="true">https://ivansnow02.github.io/VIM%E7%9A%84%E5%AD%A6%E4%B9%A0/</guid>
            <title>VIM的学习</title>
            <link>https://ivansnow02.github.io/VIM%E7%9A%84%E5%AD%A6%E4%B9%A0/</link>
            <category>coding</category>
            <category>vim</category>
            <pubDate>Mon, 17 Apr 2023 21:44:17 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;VIM%E7%9A%84%E5%AD%A6%E4%B9%A0/vim%E9%94%AE%E4%BD%8D.gif&#34; alt=&#34;vim键位&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;vim的哲学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vim的哲学&#34;&gt;#&lt;/a&gt; Vim 的哲学&lt;/h2&gt;
&lt;p&gt;在编程时，您大部分时间都花在阅读 / 编辑上，而不是写作上。因此，Vim 是一个模态编辑器：它有不同的插入文本和操作文本的模式。Vim 是可编程的（使用 Vimscript 以及 Python 等其他语言），并且 Vim 的界面本身就是一种编程语言：击键（具有助记名称）是命令，并且这些命令是可组合的。Vim 避免使用鼠标，因为它太慢了；Vim 甚至避免使用箭头键，因为它需要太多的移动。&lt;/p&gt;
&lt;p&gt;最终结果是一个可以匹配您思考速度的编辑器。&lt;/p&gt;
&lt;h2 id=&#34;模态编辑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模态编辑&#34;&gt;#&lt;/a&gt; 模态编辑&lt;/h2&gt;
&lt;p&gt;Vim 有多种运行模式&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;VIM%E7%9A%84%E5%AD%A6%E4%B9%A0/vim%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F.png&#34; alt=&#34;vim运行模式&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Normal&lt;/code&gt;  用于在文件中移动并进行编辑&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Insert&lt;/code&gt;  用于插入文本，按  &lt;code&gt;i&lt;/code&gt;  键&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Replace&lt;/code&gt;  用于替换文本，按  &lt;code&gt;R&lt;/code&gt;  键&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Visual&lt;/code&gt;  用于选择文本块，可视模式为  &lt;code&gt;v&lt;/code&gt;  键，可视行模式为 &lt;code&gt;V&lt;/code&gt;  键，可视块模式为 &lt;code&gt;&amp;lt;C-v&amp;gt;&lt;/code&gt;  键&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Command-line&lt;/code&gt;  用于运行命令，按  &lt;code&gt;:&lt;/code&gt;  键&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;击键在不同的操作模式下具有不同的含义。例如，字母  &lt;code&gt;x&lt;/code&gt;  在插入模式下只会插入一个文字字符 &#39;x&#39; ，但在普通模式下，它会删除光标下的字符，而在可视模式下，它会删除选择的字符。&lt;/p&gt;
&lt;h2 id=&#34;缓冲区选项卡和窗口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缓冲区选项卡和窗口&#34;&gt;#&lt;/a&gt; 缓冲区，选项卡和窗口&lt;/h2&gt;
&lt;p&gt;Vim 维护一组打开的文件，称为 &amp;quot;缓冲区&amp;quot;。一个 Vim 会话有许多选项卡，每个选项卡都有许多窗口 (拆分窗格) 。每个窗口显示一个缓冲区。与您熟悉的其他程序 ( 如网络浏览器) 不同，缓冲区和窗口之间不存在一对一的对应关系，窗户只是视图。一个给定的缓冲区可以在多个窗口中打开，甚至在同一个选项卡中。这非常方便，例如，同时查看文件的两个不同部分。&lt;/p&gt;
&lt;p&gt;默认情况下，Vim 打开一个选项卡，其中包含一个窗口。&lt;/p&gt;
&lt;h2 id=&#34;底线命令模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#底线命令模式&#34;&gt;#&lt;/a&gt; 底线命令模式&lt;/h2&gt;
&lt;p&gt;命令模式可以通过在普通模式下输入 &lt;code&gt;:&lt;/code&gt;  来进入。按下 &lt;code&gt;:&lt;/code&gt;  后，光标会跳到屏幕底部的命令行，你可以在那里输入不同的命令。这种模式有很多功能，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:q&lt;/code&gt;  退出（关闭窗口）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:w&lt;/code&gt;  保存（“写入”）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:wq&lt;/code&gt;  保存并退出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:e&lt;/code&gt;  {文件名} 打开文件进行编辑&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:ls&lt;/code&gt;  显示打开的缓冲区&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:help&lt;/code&gt;  {主题} 打开帮助&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:help :w&lt;/code&gt;  打开:w 命令的帮助&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:help w&lt;/code&gt;  打开 w 移动的帮助&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，如果你想打开一个名为 &lt;code&gt;test.txt&lt;/code&gt;  的文件，你可以在命令模式下输入 &lt;code&gt;:e test.txt&lt;/code&gt; ，然后按回车键。如果你想保存当前文件，你可以输入 &lt;code&gt;:w&lt;/code&gt; ，然后按回车键。如果你想查看 Vim 的基本用法，你可以输入 &lt;code&gt;:help&lt;/code&gt; ，然后按回车键。&lt;/p&gt;
&lt;h2 id=&#34;移动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#移动&#34;&gt;#&lt;/a&gt; 移动&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;  或 向左箭头键  &lt;code&gt;←&lt;/code&gt;  光标向左移动一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt;  或 向下箭头键  &lt;code&gt;↓&lt;/code&gt;  光标向下移动一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt;  或 向上箭头键  &lt;code&gt;↑&lt;/code&gt;  光标向上移动一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;  或 向右箭头键  &lt;code&gt;→&lt;/code&gt;  光标向右移动一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + f&lt;/code&gt;  屏幕向下移动&lt;strong&gt;一页&lt;/strong&gt;，相当于  &lt;code&gt;Page Down&lt;/code&gt;  按键 (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + b&lt;/code&gt;  屏幕向上移动一页，相当于  &lt;code&gt;Page Up&lt;/code&gt;  按键 (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + d&lt;/code&gt;  屏幕向下移动&lt;strong&gt;半页&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + u&lt;/code&gt;  屏幕向上移动&lt;strong&gt;半页&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;  光标移动到&lt;strong&gt;非空格符&lt;/strong&gt;的下一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;  光标移动到&lt;strong&gt;非空格符&lt;/strong&gt;的上一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&amp;lt;space&amp;gt;&lt;/code&gt;  那个  &lt;code&gt;n&lt;/code&gt;  表示数字，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如  &lt;code&gt;20&amp;lt;space&amp;gt;&lt;/code&gt;  则光标会向后面移动 20 个字符距离。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;  或功能键 &lt;code&gt;Home&lt;/code&gt;  移动到这一行的&lt;strong&gt;最前面&lt;/strong&gt;字符处 (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt;  或功能键 &lt;code&gt;End&lt;/code&gt;  移动到这一行的&lt;strong&gt;最后面&lt;/strong&gt;字符处 (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;H&lt;/code&gt;  光标移动到这个屏幕的&lt;strong&gt;最上方&lt;/strong&gt;那一行的第一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M&lt;/code&gt;  光标移动到这个屏幕的&lt;strong&gt;中央&lt;/strong&gt;那一行的第一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;L&lt;/code&gt;  光标移动到这个屏幕的&lt;strong&gt;最下方&lt;/strong&gt;那一行的第一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;G&lt;/code&gt;  移动到这个档案的最后一行 (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nG&lt;/code&gt;   &lt;code&gt;n&lt;/code&gt;  为数字。移动到这个档案的第 n 行。例如  &lt;code&gt;20G&lt;/code&gt;  则会移动到这个档案的第 20 行 (可配合 : &lt;code&gt;set nu&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gg&lt;/code&gt;  移动到这个档案的第一行，相当于  &lt;code&gt;1G&lt;/code&gt;   (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&amp;lt;Enter&amp;gt;&lt;/code&gt;   &lt;code&gt;n&lt;/code&gt;  为数字。光标向下移动 n 行 (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;搜索替换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搜索替换&#34;&gt;#&lt;/a&gt; 搜索替换&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/word&lt;/code&gt;   向光标之下寻找一个名称为  &lt;code&gt;word&lt;/code&gt;  的字符串。例如要在档案内搜寻  &lt;code&gt;vbird&lt;/code&gt;  这个字符串，就输入  &lt;code&gt;/vbird&lt;/code&gt;  即可！ (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?word&lt;/code&gt;  向光标之上寻找一个字符串名称为  &lt;code&gt;word&lt;/code&gt;  的字符串。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;  这个  &lt;code&gt;n&lt;/code&gt;  是英文按键。代表&lt;strong&gt;重复&lt;/strong&gt;前一个搜寻的动作。举例来说， 如果刚刚我们执行  &lt;code&gt;/vbird&lt;/code&gt;  去向下搜寻  &lt;code&gt;vbird&lt;/code&gt;  这个字符串，则按下 n 后，会向下继续搜寻下一个名称为  &lt;code&gt;vbird&lt;/code&gt;  的字符串。如果是执行  &lt;code&gt;?vbird&lt;/code&gt;  的话，那么按下 n 则会向上继续搜寻名称为  &lt;code&gt;vbird&lt;/code&gt;  的字符串！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;  这个  &lt;code&gt;N&lt;/code&gt;  是英文按键。与  &lt;code&gt;n&lt;/code&gt;  刚好相反，为&lt;strong&gt;反向&lt;/strong&gt;进行前一个搜寻动作。 例如  &lt;code&gt;/vbird&lt;/code&gt;  后，按下  &lt;code&gt;N&lt;/code&gt;  则表示&lt;strong&gt;向上&lt;/strong&gt;搜寻  &lt;code&gt;vbird&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;删除-复制与粘贴&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除-复制与粘贴&#34;&gt;#&lt;/a&gt; 删除、复制与粘贴&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt; ,  &lt;code&gt;X&lt;/code&gt;  在一行字当中， &lt;code&gt;x&lt;/code&gt;  为向后删除一个字符 (相当于  &lt;code&gt;del&lt;/code&gt;  按键)，  &lt;code&gt;X&lt;/code&gt;  为向前删除一个字符 (相当于  &lt;code&gt;backspace&lt;/code&gt;  亦即是退格键) (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nx&lt;/code&gt;   &lt;code&gt;n&lt;/code&gt;  为数字，连续向后删除 n 个字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dd&lt;/code&gt;  剪切游标所在的那一整行 (&lt;strong&gt;常用&lt;/strong&gt;)，用  &lt;code&gt;p&lt;/code&gt; / &lt;code&gt;P&lt;/code&gt;  可以粘贴。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ndd&lt;/code&gt;   &lt;code&gt;n&lt;/code&gt;  为数字。剪切光标所在的向下 n 行，例如  &lt;code&gt;20dd&lt;/code&gt;  则是剪切 20 行 (&lt;strong&gt;常用&lt;/strong&gt;)，用  &lt;code&gt;p&lt;/code&gt; / &lt;code&gt;P&lt;/code&gt;  可以粘贴。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d1G&lt;/code&gt;  删除光标所在到第一行的所有数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dG&lt;/code&gt;  删除光标所在到最后一行的所有数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d$&lt;/code&gt;  删除游标所在处，到该行的最后一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d0&lt;/code&gt;  那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yy&lt;/code&gt;  复制游标所在的那一行 (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nyy&lt;/code&gt;   &lt;code&gt;n&lt;/code&gt;  为数字。复制光标所在的向下 n 行，例如  &lt;code&gt;20yy&lt;/code&gt;  则是复制 20 行 (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y1G&lt;/code&gt;  复制游标所在行到第一行的所有数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yG&lt;/code&gt;  复制游标所在行到最后一行的所有数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y0&lt;/code&gt;  复制光标所在的那个字符到该行行首的所有数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y$&lt;/code&gt;  复制光标所在的那个字符到该行行尾的所有数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt; ,  &lt;code&gt;P&lt;/code&gt;   &lt;code&gt;p&lt;/code&gt;  为将已复制的数据在光标下一行贴上， &lt;code&gt;P&lt;/code&gt;  则为贴在游标上一行！  (&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;J&lt;/code&gt;  将光标所在行与下一行的数据结合成同一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c&lt;/code&gt;  重复删除多个数据，例如  &lt;code&gt;10cj&lt;/code&gt;  表示向下删除 10 行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;  复原前一个动作。(&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + r&lt;/code&gt;  重做上一个动作。(&lt;strong&gt;常用&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;补充&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#补充&#34;&gt;#&lt;/a&gt; 补充&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;进入输入或取代的编辑模式&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;i, I&lt;/td&gt;
&lt;td&gt;进入输入模式 (Insert mode)： i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;a, A&lt;/td&gt;
&lt;td&gt;进入输入模式 (Insert mode)： a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;o, O&lt;/td&gt;
&lt;td&gt;进入输入模式 (Insert mode)： 这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在的上一行处输入新的一行！(常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;r, R&lt;/td&gt;
&lt;td&gt;进入取代模式 (Replace mode)： r 只会取代光标所在的那一个字符一次；R 会一直取代光标所在的文字，直到按下 ESC 为止；(常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;上面这些按键中，在 vi 画面的左下角处会出现『--INSERT--』或『--REPLACE--』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Esc]&lt;/td&gt;
&lt;td&gt;退出编辑模式，回到一般模式中 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;指令行的储存、离开等指令&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:-----------------------------------------------------------&lt;/td&gt;
&lt;td&gt;------------------------------------------------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:w&lt;/td&gt;
&lt;td&gt;将编辑的数据写入硬盘档案中 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:w!&lt;/td&gt;
&lt;td&gt;若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:q&lt;/td&gt;
&lt;td&gt;离开 vi (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:q!&lt;/td&gt;
&lt;td&gt;若曾修改过档案，又不想储存，使用！为强制离开不储存档案。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:wq&lt;/td&gt;
&lt;td&gt;储存后离开，若为 :wq! 则为强制储存后离开 (常用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ZZ&lt;/td&gt;
&lt;td&gt;这是大写的 Z 喔！如果修改过，保存当前文件，然后退出！效果等同于 (保存并退出)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ZQ&lt;/td&gt;
&lt;td&gt;不保存，强制退出。效果等同于 &lt;strong&gt;:q!&lt;/strong&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:w [filename]&lt;/td&gt;
&lt;td&gt;将编辑的数据储存成另一个档案（类似另存新档）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:r [filename]&lt;/td&gt;
&lt;td&gt;在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:n1,n2 w [filename]&lt;/td&gt;
&lt;td&gt;将 n1 到 n2 的内容储存成 filename 这个档案。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:! command&lt;/td&gt;
&lt;td&gt;暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;vim 环境的变更&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:-------------&lt;/td&gt;
&lt;td&gt;--------------------------------------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:set nu&lt;/td&gt;
&lt;td&gt;显示行号，设定之后，会在每一行的前缀显示该行的行号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;:set nonu&lt;/td&gt;
&lt;td&gt;与 set nu 相反，为取消行号！&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考资料&#34;&gt;#&lt;/a&gt; 参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://missing.csail.mit.edu/2020/editors/&#34;&gt;Editors (Vim) · Missing Semester (mit.edu)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/linux/linux-vim.html&#34;&gt;Linux vi/vim | 菜鸟教程 (runoob.com)&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
